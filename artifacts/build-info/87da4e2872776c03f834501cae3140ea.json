{
	"id": "87da4e2872776c03f834501cae3140ea",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CMBS20Demo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./ERC3643Token.sol\"; // <- Import the new token here\n\ncontract CMBS20Demo is AccessControl, Pausable {\n    bytes32 public constant SERVICER_ROLE = keccak256(\"SERVICER_ROLE\");\n\n    struct Tranche {\n        ERC3643Token token; // now using ERC3643-compliant token\n        uint256 principal;\n        uint256 couponBps;\n        uint8 seniority;\n        uint256 accruedInterest;\n        uint256 cashAvailable;\n    }\n\n    string public uri;\n    IERC20 public immutable stable;\n    uint256 public nextTrancheId;\n    uint256 public lastAccrual;\n    mapping(uint256 => Tranche) public tranches;\n\n    event TrancheCreated(uint256 indexed id, uint256 principal, uint256 couponBps, uint8 seniority, uint256 supply);\n    event PaymentAllocated(uint256 indexed id, uint256 interestPaid, uint256 principalPaid);\n    event Distribution(uint256 indexed id, address indexed investor, uint256 amount);\n    event Withdraw(address indexed investor, uint256 indexed id, uint256 amount);\n\n    constructor(IERC20 _stable, string memory _uri) {\n        uri = _uri;\n        stable = _stable;\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(SERVICER_ROLE, msg.sender);\n        lastAccrual = block.timestamp;\n    }\n\n    // ------------------------------------------------------\n    //  ADMIN / ISSUANCE\n    // ------------------------------------------------------\n\n    function createTranche(\n        ERC3643Token token,\n        uint256 principal,\n        uint256 couponBps,\n        uint8 seniority,\n        uint256 supply\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(principal > 0, \"INVALID_PRINCIPAL\");\n        require(supply > 0, \"INVALID_SUPPLY\");\n        require(supply == token.totalSupply(), \"INVALID_TOKEN_SUPPLY\");\n\n        uint256 id = nextTrancheId;\n        nextTrancheId = id + 1;\n\n        tranches[id] = Tranche({\n            token: token,\n            principal: principal,\n            couponBps: couponBps,\n            seniority: seniority,\n            accruedInterest: 0,\n            cashAvailable: 0\n        });\n\n        emit TrancheCreated(id, principal, couponBps, seniority, supply);\n    }\n\n    function distributeToInvestors(\n        uint256 id,\n        address[] calldata investors,\n        uint256[] calldata amounts\n    ) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        ERC3643Token token = tranches[id].token;\n        require(investors.length == amounts.length, \"ARRAY_LENGTH_MISMATCH\");\n        require(token.balanceOf(address(this)) >= _totalAmount(amounts), \"INSUFFICIENT_ADMIN_BAL\");\n\n        for (uint256 i = 0; i < investors.length; ++i) {\n            token.transfer(investors[i], amounts[i]);\n            emit Distribution(id, investors[i], amounts[i]);\n        }\n    }\n\n    function _totalAmount(uint256[] memory arr) internal pure returns (uint256 sum) {\n        for (uint256 i = 0; i < arr.length; ++i) {\n            sum += arr[i];\n        }\n    }\n\n    // ------------------------------------------------------\n    //  INTEREST ACCRUAL\n    // ------------------------------------------------------\n\n\n    function accrueAllInterest() public {\n    _accrueAllInterest();\n}\n\n\n    function _accrueAllInterest() internal {\n        uint256 dt = block.timestamp - lastAccrual;\n        if (dt == 0) return;\n        lastAccrual = block.timestamp;\n\n\n        for (uint256 id = 0; id < nextTrancheId; ++id) {\n            Tranche storage t = tranches[id];\n            if (t.principal == 0) continue;\n            uint256 interest = (t.principal * t.couponBps * dt) / (365 days * 10_000);\n            t.accruedInterest += interest;\n        }\n    }\n\n    // ------------------------------------------------------\n    //  WATERFALL DISTRIBUTION\n    // ------------------------------------------------------\n\n    function depositAndDistribute(uint256 amount)\n        external\n        whenNotPaused\n        onlyRole(SERVICER_ROLE)\n    {\n        require(stable.transferFrom(msg.sender, address(this), amount), \"TRANSFER_FAILED\");\n        _accrueAllInterest();\n\n        uint256 remaining = amount;\n\n        for (uint8 s = 0; s < 255 && remaining > 0; ++s) {\n            for (uint256 id = 0; id < nextTrancheId && remaining > 0; ++id) {\n                Tranche storage t = tranches[id];\n                if (t.seniority != s) continue;\n\n                uint256 payInt = t.accruedInterest <= remaining ? t.accruedInterest : remaining;\n                t.accruedInterest -= payInt;\n                t.cashAvailable  += payInt;\n                remaining        -= payInt;\n\n                uint256 payPrin = t.principal <= remaining ? t.principal : remaining;\n                t.principal     -= payPrin;\n                t.cashAvailable += payPrin;\n                remaining       -= payPrin;\n\n                emit PaymentAllocated(id, payInt, payPrin);\n            }\n        }\n\n        emit PaymentAllocated(type(uint256).max, 0, remaining); // excess spread\n    }\n\n    // ------------------------------------------------------\n    //  WITHDRAWALS\n    // ------------------------------------------------------\n\n    function withdraw(uint256 id, uint256 amount) external whenNotPaused {\n        Tranche storage t = tranches[id];\n        ERC3643Token token = t.token;\n        require(token.balanceOf(msg.sender) >= amount, \"INSUFFICIENT_BAL\");\n\n        uint256 proRata = (t.cashAvailable * amount) / token.totalSupply();\n        t.cashAvailable -= proRata;\n\n        token.burn(msg.sender, amount); // must be allowed by CONTROLLER_ROLE\n        require(stable.transfer(msg.sender, proRata), \"STABLE_TRANSFER_FAILED\");\n        emit Withdraw(msg.sender, id, proRata);\n    }\n\n    // ------------------------------------------------------\n    //  PAUSE / SWEEP\n    // ------------------------------------------------------\n\n    function pause() external onlyRole(DEFAULT_ADMIN_ROLE) { _pause(); }\n    function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) { _unpause(); }\n\n    function sweep(address to, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(stable.transfer(to, amount), \"SWEEP_FAILED\");\n    }\n\n    // ------------------------------------------------------\n    //  VIEWS\n    // ------------------------------------------------------\n\n    function totalSupply(uint256 id) public view returns (uint256) {\n        return tranches[id].token.totalSupply();\n    }\n\n    function totalSupply() public view returns (uint256 total) {\n        for (uint256 id = 0; id < nextTrancheId; ++id) {\n            total += totalSupply(id);\n        }\n    }\n\n    function balanceOf(address account, uint256 id) external view returns (uint256) {\n        return tranches[id].token.balanceOf(account);\n    }\n}\n"
			},
			"contracts/ERC3643Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\ncontract ERC3643Token is ERC20, AccessControl {\n    bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    constructor() ERC20(\"TrancheTokenA\", \"TTA\") {\n        address controller = 0x47574C311cD6C7F8b07CF18d776a25719c61EE22; // dummy controller address\n        address minter     = 0x47574C311cD6C7F8b07CF18d776a25719c61EE22; // dummy minter address\n        uint256 initialSupply = 1_000_000 * 10**decimals(); // mint 1M tokens\n\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(CONTROLLER_ROLE, controller);\n        _grantRole(MINTER_ROLE, minter);\n\n        _mint(msg.sender, initialSupply);\n    }\n\n    function burn(address from, uint256 amount) external onlyRole(CONTROLLER_ROLE) {\n        _burn(from, amount);\n    }\n\n    function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {\n        _mint(to, amount);\n    }\n\n    function transfer(address to, uint256 amount) public override returns (bool) {\n        return super.transfer(to, amount); // Add compliance hooks here if needed\n    }\n}\n\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1173,
								"contract": "@openzeppelin/contracts/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CMBS20Demo.sol": {
				"CMBS20Demo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_stable",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "_uri",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Distribution",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "interestPaid",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "principalPaid",
									"type": "uint256"
								}
							],
							"name": "PaymentAllocated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "principal",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "couponBps",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "seniority",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "TrancheCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "investor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SERVICER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "accrueAllInterest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "contract ERC3643Token",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "principal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "couponBps",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "seniority",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "supply",
									"type": "uint256"
								}
							],
							"name": "createTranche",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositAndDistribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "investors",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"name": "distributeToInvestors",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastAccrual",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nextTrancheId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stable",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "sweep",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "total",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "tranches",
							"outputs": [
								{
									"internalType": "contract ERC3643Token",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "principal",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "couponBps",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "seniority",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "accruedInterest",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "cashAvailable",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CMBS20Demo.sol\":289:6863  contract CMBS20Demo is AccessControl, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"contracts/CMBS20Demo.sol\":1205:1444  constructor(IERC20 _stable, string memory _uri) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/CMBS20Demo.sol\":1263:1266  uri */\n  0x02\n    /* \"contracts/CMBS20Demo.sol\":1263:1273  uri = _uri */\n  tag_6\n    /* \"contracts/CMBS20Demo.sol\":1269:1273  _uri */\n  dup3\n    /* \"contracts/CMBS20Demo.sol\":1263:1266  uri */\n  dup3\n    /* \"contracts/CMBS20Demo.sol\":1263:1273  uri = _uri */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/CMBS20Demo.sol\":1283:1299  stable = _stable */\n  dup3\n  and\n  0x80\n  mstore\n    /* \"contracts/CMBS20Demo.sol\":1309:1351  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/CMBS20Demo.sol\":1340:1350  msg.sender */\n  caller\n    /* \"contracts/CMBS20Demo.sol\":1309:1319  _grantRole */\n  tag_9\n    /* \"contracts/CMBS20Demo.sol\":1309:1351  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/CMBS20Demo.sol\":1361:1398  _grantRole(SERVICER_ROLE, msg.sender) */\n  tag_10\n    /* \"contracts/CMBS20Demo.sol\":382:408  keccak256(\"SERVICER_ROLE\") */\n  0x250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db6980537\n    /* \"contracts/CMBS20Demo.sol\":1387:1397  msg.sender */\n  caller\n    /* \"contracts/CMBS20Demo.sol\":1361:1371  _grantRole */\n  tag_9\n    /* \"contracts/CMBS20Demo.sol\":1361:1398  _grantRole(SERVICER_ROLE, msg.sender) */\n  jump\t// in\ntag_10:\n  pop\n  pop\n    /* \"contracts/CMBS20Demo.sol\":1422:1437  block.timestamp */\n  timestamp\n    /* \"contracts/CMBS20Demo.sol\":1408:1419  lastAccrual */\n  0x04\n    /* \"contracts/CMBS20Demo.sol\":1408:1437  lastAccrual = block.timestamp */\n  sstore\n  pop\n    /* \"contracts/CMBS20Demo.sol\":289:6863  contract CMBS20Demo is AccessControl, Pausable {... */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_16\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_16:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_18)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_15:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_18:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_21:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1370   */\ntag_3:\n    /* \"#utility.yul\":250:256   */\n  0x00\n    /* \"#utility.yul\":258:264   */\n  dup1\n    /* \"#utility.yul\":311:313   */\n  0x40\n    /* \"#utility.yul\":299:308   */\n  dup4\n    /* \"#utility.yul\":290:297   */\n  dup6\n    /* \"#utility.yul\":286:309   */\n  sub\n    /* \"#utility.yul\":282:314   */\n  slt\n    /* \"#utility.yul\":279:331   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":327:328   */\n  0x00\n    /* \"#utility.yul\":324:325   */\n  dup1\n    /* \"#utility.yul\":317:329   */\n  revert\n    /* \"#utility.yul\":279:331   */\ntag_29:\n    /* \"#utility.yul\":353:369   */\n  dup3\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":398:429   */\n  dup2\n  and\n    /* \"#utility.yul\":388:430   */\n  dup2\n  eq\n    /* \"#utility.yul\":378:448   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":444:445   */\n  0x00\n    /* \"#utility.yul\":441:442   */\n  dup1\n    /* \"#utility.yul\":434:446   */\n  revert\n    /* \"#utility.yul\":378:448   */\ntag_30:\n    /* \"#utility.yul\":491:493   */\n  0x20\n    /* \"#utility.yul\":522:540   */\n  dup5\n  dup2\n  add\n    /* \"#utility.yul\":516:541   */\n  mload\n    /* \"#utility.yul\":467:472   */\n  swap2\n  swap4\n  pop\n    /* \"#utility.yul\":491:493   */\n  swap1\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":590:604   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":587:621   */\n  iszero\n  tag_31\n  jumpi\n    /* \"#utility.yul\":617:618   */\n  0x00\n    /* \"#utility.yul\":614:615   */\n  dup1\n    /* \"#utility.yul\":607:619   */\n  revert\n    /* \"#utility.yul\":587:621   */\ntag_31:\n    /* \"#utility.yul\":655:661   */\n  dup2\n    /* \"#utility.yul\":644:653   */\n  dup7\n    /* \"#utility.yul\":640:662   */\n  add\n    /* \"#utility.yul\":630:662   */\n  swap2\n  pop\n    /* \"#utility.yul\":700:707   */\n  dup7\n    /* \"#utility.yul\":693:697   */\n  0x1f\n    /* \"#utility.yul\":689:691   */\n  dup4\n    /* \"#utility.yul\":685:698   */\n  add\n    /* \"#utility.yul\":681:708   */\n  slt\n    /* \"#utility.yul\":671:726   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":722:723   */\n  0x00\n    /* \"#utility.yul\":719:720   */\n  dup1\n    /* \"#utility.yul\":712:724   */\n  revert\n    /* \"#utility.yul\":671:726   */\ntag_32:\n    /* \"#utility.yul\":751:753   */\n  dup2\n    /* \"#utility.yul\":745:754   */\n  mload\n    /* \"#utility.yul\":773:775   */\n  dup2\n    /* \"#utility.yul\":769:771   */\n  dup2\n    /* \"#utility.yul\":766:776   */\n  gt\n    /* \"#utility.yul\":763:799   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":779:797   */\n  tag_34\n  tag_21\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":854:856   */\n  0x40\n    /* \"#utility.yul\":848:857   */\n  mload\n    /* \"#utility.yul\":822:824   */\n  0x1f\n    /* \"#utility.yul\":908:921   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":904:926   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":928:930   */\n  0x3f\n    /* \"#utility.yul\":900:931   */\n  add\n    /* \"#utility.yul\":896:936   */\n  and\n    /* \"#utility.yul\":884:937   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":952:970   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":972:994   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":949:995   */\n  or\n    /* \"#utility.yul\":946:1018   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":998:1016   */\n  tag_36\n  tag_21\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1038:1048   */\n  dup2\n    /* \"#utility.yul\":1034:1036   */\n  0x40\n    /* \"#utility.yul\":1027:1049   */\n  mstore\n    /* \"#utility.yul\":1073:1075   */\n  dup3\n    /* \"#utility.yul\":1065:1071   */\n  dup2\n    /* \"#utility.yul\":1058:1076   */\n  mstore\n    /* \"#utility.yul\":1113:1120   */\n  dup10\n    /* \"#utility.yul\":1108:1110   */\n  dup7\n    /* \"#utility.yul\":1103:1105   */\n  dup5\n    /* \"#utility.yul\":1099:1101   */\n  dup8\n    /* \"#utility.yul\":1095:1106   */\n  add\n    /* \"#utility.yul\":1091:1111   */\n  add\n    /* \"#utility.yul\":1088:1121   */\n  gt\n    /* \"#utility.yul\":1085:1138   */\n  iszero\n  tag_37\n  jumpi\n    /* \"#utility.yul\":1134:1135   */\n  0x00\n    /* \"#utility.yul\":1131:1132   */\n  dup1\n    /* \"#utility.yul\":1124:1136   */\n  revert\n    /* \"#utility.yul\":1085:1138   */\ntag_37:\n    /* \"#utility.yul\":1156:1157   */\n  0x00\n    /* \"#utility.yul\":1147:1157   */\n  swap4\n  pop\n    /* \"#utility.yul\":1166:1295   */\ntag_38:\n    /* \"#utility.yul\":1180:1182   */\n  dup3\n    /* \"#utility.yul\":1177:1178   */\n  dup5\n    /* \"#utility.yul\":1174:1183   */\n  lt\n    /* \"#utility.yul\":1166:1295   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":1268:1278   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1264:1283   */\n  dup7\n  add\n    /* \"#utility.yul\":1258:1284   */\n  mload\n    /* \"#utility.yul\":1237:1251   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1233:1256   */\n  dup8\n  add\n    /* \"#utility.yul\":1226:1285   */\n  mstore\n    /* \"#utility.yul\":1191:1201   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":1166:1295   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":1337:1338   */\n  0x00\n    /* \"#utility.yul\":1332:1334   */\n  dup7\n    /* \"#utility.yul\":1327:1329   */\n  dup5\n    /* \"#utility.yul\":1319:1325   */\n  dup4\n    /* \"#utility.yul\":1315:1330   */\n  add\n    /* \"#utility.yul\":1311:1335   */\n  add\n    /* \"#utility.yul\":1304:1339   */\n  mstore\n    /* \"#utility.yul\":1358:1364   */\n  dup1\n    /* \"#utility.yul\":1348:1364   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1370   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1375:1755   */\ntag_22:\n    /* \"#utility.yul\":1454:1455   */\n  0x01\n    /* \"#utility.yul\":1450:1462   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1497:1509   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1518:1579   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1572:1576   */\n  0x7f\n    /* \"#utility.yul\":1564:1570   */\n  dup3\n    /* \"#utility.yul\":1560:1577   */\n  and\n    /* \"#utility.yul\":1550:1577   */\n  swap2\n  pop\n    /* \"#utility.yul\":1518:1579   */\ntag_42:\n    /* \"#utility.yul\":1625:1627   */\n  0x20\n    /* \"#utility.yul\":1617:1623   */\n  dup3\n    /* \"#utility.yul\":1614:1628   */\n  lt\n    /* \"#utility.yul\":1594:1612   */\n  dup2\n    /* \"#utility.yul\":1591:1629   */\n  sub\n    /* \"#utility.yul\":1588:1749   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":1671:1681   */\n  0x4e487b71\n    /* \"#utility.yul\":1666:1669   */\n  0xe0\n    /* \"#utility.yul\":1662:1682   */\n  shl\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1683   */\n  mstore\n    /* \"#utility.yul\":1706:1710   */\n  0x22\n    /* \"#utility.yul\":1703:1704   */\n  0x04\n    /* \"#utility.yul\":1696:1711   */\n  mstore\n    /* \"#utility.yul\":1734:1738   */\n  0x24\n    /* \"#utility.yul\":1731:1732   */\n  0x00\n    /* \"#utility.yul\":1724:1739   */\n  revert\n    /* \"#utility.yul\":1588:1749   */\ntag_43:\n  pop\n    /* \"#utility.yul\":1375:1755   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1886:2429   */\ntag_24:\n    /* \"#utility.yul\":1988:1990   */\n  0x1f\n    /* \"#utility.yul\":1983:1986   */\n  dup3\n    /* \"#utility.yul\":1980:1991   */\n  gt\n    /* \"#utility.yul\":1977:2423   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2024:2025   */\n  0x00\n    /* \"#utility.yul\":2048:2053   */\n  dup2\n    /* \"#utility.yul\":2045:2046   */\n  0x00\n    /* \"#utility.yul\":2038:2054   */\n  mstore\n    /* \"#utility.yul\":2092:2096   */\n  0x20\n    /* \"#utility.yul\":2089:2090   */\n  0x00\n    /* \"#utility.yul\":2079:2097   */\n  keccak256\n    /* \"#utility.yul\":2162:2164   */\n  0x1f\n    /* \"#utility.yul\":2150:2160   */\n  dup6\n    /* \"#utility.yul\":2146:2165   */\n  add\n    /* \"#utility.yul\":2143:2144   */\n  0x05\n    /* \"#utility.yul\":2139:2166   */\n  shr\n    /* \"#utility.yul\":2133:2137   */\n  dup2\n    /* \"#utility.yul\":2129:2167   */\n  add\n    /* \"#utility.yul\":2198:2202   */\n  0x20\n    /* \"#utility.yul\":2186:2196   */\n  dup7\n    /* \"#utility.yul\":2183:2203   */\n  lt\n    /* \"#utility.yul\":2180:2227   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":2221:2225   */\n  dup1\n    /* \"#utility.yul\":2180:2227   */\ntag_47:\n    /* \"#utility.yul\":2276:2278   */\n  0x1f\n    /* \"#utility.yul\":2271:2274   */\n  dup6\n    /* \"#utility.yul\":2267:2279   */\n  add\n    /* \"#utility.yul\":2264:2265   */\n  0x05\n    /* \"#utility.yul\":2260:2280   */\n  shr\n    /* \"#utility.yul\":2254:2258   */\n  dup3\n    /* \"#utility.yul\":2250:2281   */\n  add\n    /* \"#utility.yul\":2240:2281   */\n  swap2\n  pop\n    /* \"#utility.yul\":2331:2413   */\ntag_48:\n    /* \"#utility.yul\":2349:2351   */\n  dup2\n    /* \"#utility.yul\":2342:2347   */\n  dup2\n    /* \"#utility.yul\":2339:2352   */\n  lt\n    /* \"#utility.yul\":2331:2413   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2394:2411   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2375:2376   */\n  0x01\n    /* \"#utility.yul\":2364:2377   */\n  add\n    /* \"#utility.yul\":2331:2413   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":2335:2338   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1977:2423   */\ntag_46:\n    /* \"#utility.yul\":1886:2429   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2605:3950   */\ntag_7:\n    /* \"#utility.yul\":2725:2735   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2747:2777   */\n  dup2\n  gt\n    /* \"#utility.yul\":2744:2800   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":2780:2798   */\n  tag_54\n  tag_21\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":2809:2906   */\n  tag_55\n    /* \"#utility.yul\":2899:2905   */\n  dup2\n    /* \"#utility.yul\":2859:2897   */\n  tag_56\n    /* \"#utility.yul\":2891:2895   */\n  dup5\n    /* \"#utility.yul\":2885:2896   */\n  sload\n    /* \"#utility.yul\":2859:2897   */\n  tag_22\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":2853:2857   */\n  dup5\n    /* \"#utility.yul\":2809:2906   */\n  tag_24\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":2961:2965   */\n  0x20\n  dup1\n    /* \"#utility.yul\":3018:3020   */\n  0x1f\n    /* \"#utility.yul\":3007:3021   */\n  dup4\n  gt\n    /* \"#utility.yul\":3035:3036   */\n  0x01\n    /* \"#utility.yul\":3030:3693   */\n  dup2\n  eq\n  tag_58\n  jumpi\n    /* \"#utility.yul\":3737:3738   */\n  0x00\n    /* \"#utility.yul\":3754:3760   */\n  dup5\n    /* \"#utility.yul\":3751:3840   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":3806:3825   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3800:3826   */\n  mload\n    /* \"#utility.yul\":3751:3840   */\ntag_59:\n  not(0x00)\n    /* \"#utility.yul\":2562:2563   */\n  0x03\n    /* \"#utility.yul\":2558:2569   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2554:2578   */\n  shr\n    /* \"#utility.yul\":2550:2579   */\n  not\n    /* \"#utility.yul\":2540:2580   */\n  and\n    /* \"#utility.yul\":2586:2587   */\n  0x01\n    /* \"#utility.yul\":2582:2593   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2537:2594   */\n  or\n    /* \"#utility.yul\":3853:3934   */\n  dup6\n  sstore\n    /* \"#utility.yul\":3000:3944   */\n  jump(tag_50)\n    /* \"#utility.yul\":3030:3693   */\ntag_58:\n    /* \"#utility.yul\":1833:1834   */\n  0x00\n    /* \"#utility.yul\":1826:1840   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1870:1874   */\n  0x20\n    /* \"#utility.yul\":1857:1875   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3066:3086   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3184:3420   */\ntag_62:\n    /* \"#utility.yul\":3198:3205   */\n  dup3\n    /* \"#utility.yul\":3195:3196   */\n  dup2\n    /* \"#utility.yul\":3192:3206   */\n  lt\n    /* \"#utility.yul\":3184:3420   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":3287:3306   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3281:3307   */\n  mload\n    /* \"#utility.yul\":3266:3308   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3379:3406   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3347:3348   */\n  0x01\n    /* \"#utility.yul\":3335:3349   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3214:3233   */\n  dup5\n  add\n    /* \"#utility.yul\":3184:3420   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":3188:3191   */\n  pop\n    /* \"#utility.yul\":3448:3454   */\n  dup6\n    /* \"#utility.yul\":3439:3446   */\n  dup3\n    /* \"#utility.yul\":3436:3455   */\n  lt\n    /* \"#utility.yul\":3433:3634   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":3509:3528   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3503:3529   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3592:3593   */\n  0x03\n    /* \"#utility.yul\":3588:3602   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3604:3607   */\n  0xf8\n    /* \"#utility.yul\":3584:3608   */\n  and\n    /* \"#utility.yul\":3580:3617   */\n  shr\n    /* \"#utility.yul\":3576:3618   */\n  not\n    /* \"#utility.yul\":3561:3619   */\n  and\n    /* \"#utility.yul\":3546:3620   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3433:3634   */\ntag_65:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3680:3681   */\n  0x01\n    /* \"#utility.yul\":3664:3678   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3660:3682   */\n  add\n    /* \"#utility.yul\":3647:3683   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2605:3950   */\n  jump\t// out\ntag_26:\n    /* \"contracts/CMBS20Demo.sol\":289:6863  contract CMBS20Demo is AccessControl, Pausable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa0304342046b949c357e13879a24ce2facaca0ee062a454217f01898ed92aabf\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/CMBS20Demo.sol\":289:6863  contract CMBS20Demo is AccessControl, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x5c975abb\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x9612df5c\n      gt\n      tag_29\n      jumpi\n      dup1\n      0xbef6f540\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xbef6f540\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xeac989f8\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xf0f9243b\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x9612df5c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbd85b039\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x8456cb59\n      gt\n      tag_31\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x897a3651\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x6ea056a9\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x7b3baab4\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x248a9ca3\n      gt\n      tag_32\n      jumpi\n      dup1\n      0x36568abe\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x441a3e70\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x26c25962\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x0bfed82a\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x0bfed82a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x22be3de1\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x09a01608\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CMBS20Demo.sol\":6720:6861  function balanceOf(address account, uint256 id) external view returns (uint256) {... */\n    tag_3:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n        /* \"#utility.yul\":639:664   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      add\n        /* \"contracts/CMBS20Demo.sol\":6720:6861  function balanceOf(address account, uint256 id) external view returns (uint256) {... */\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_4:\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":1177:1191   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1170:1192   */\n      iszero\n        /* \"#utility.yul\":1152:1193   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1140:1142   */\n      0x20\n        /* \"#utility.yul\":1125:1143   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      tag_39\n        /* \"#utility.yul\":1012:1199   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":342:408  bytes32 public constant SERVICER_ROLE = keccak256(\"SERVICER_ROLE\") */\n    tag_5:\n      tag_35\n        /* \"contracts/CMBS20Demo.sol\":382:408  keccak256(\"SERVICER_ROLE\") */\n      0x250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db6980537\n        /* \"contracts/CMBS20Demo.sol\":342:408  bytes32 public constant SERVICER_ROLE = keccak256(\"SERVICER_ROLE\") */\n      dup2\n      jump\n        /* \"contracts/CMBS20Demo.sol\":3286:3351  function accrueAllInterest() public {... */\n    tag_6:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"contracts/CMBS20Demo.sol\":6543:6714  function totalSupply() public view returns (uint256 total) {... */\n    tag_7:\n      tag_35\n      tag_54\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":674:704  IERC20 public immutable stable */\n    tag_8:\n      tag_56\n      immutable(\"0xa0304342046b949c357e13879a24ce2facaca0ee062a454217f01898ed92aabf\")\n      dup2\n      jump\n    tag_56:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1565:1620   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1547:1621   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1535:1537   */\n      0x20\n        /* \"#utility.yul\":1520:1538   */\n      add\n        /* \"contracts/CMBS20Demo.sol\":674:704  IERC20 public immutable stable */\n      tag_39\n        /* \"#utility.yul\":1386:1627   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_35\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":776:819  mapping(uint256 => Tranche) public tranches */\n    tag_10:\n      tag_65\n      tag_66\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_66:\n      0x05\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      swap5\n      swap1\n      swap6\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap5\n      swap2\n      swap4\n      swap1\n      swap3\n      0xff\n      swap1\n      swap3\n      and\n      swap2\n      dup7\n      jump\n    tag_65:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2324:2379   */\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":2306:2380   */\n      dup8\n      mstore\n        /* \"#utility.yul\":2411:2413   */\n      0x20\n        /* \"#utility.yul\":2396:2414   */\n      dup8\n      add\n        /* \"#utility.yul\":2389:2423   */\n      swap6\n      swap1\n      swap6\n      mstore\n        /* \"#utility.yul\":2439:2457   */\n      swap4\n      dup6\n      add\n        /* \"#utility.yul\":2432:2466   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2514:2518   */\n      0xff\n        /* \"#utility.yul\":2502:2519   */\n      and\n        /* \"#utility.yul\":2497:2499   */\n      0x60\n        /* \"#utility.yul\":2482:2500   */\n      dup5\n      add\n        /* \"#utility.yul\":2475:2520   */\n      mstore\n        /* \"#utility.yul\":2551:2554   */\n      0x80\n        /* \"#utility.yul\":2536:2555   */\n      dup4\n      add\n        /* \"#utility.yul\":2529:2564   */\n      mstore\n        /* \"#utility.yul\":2595:2598   */\n      0xa0\n        /* \"#utility.yul\":2580:2599   */\n      dup3\n      add\n        /* \"#utility.yul\":2573:2608   */\n      mstore\n        /* \"#utility.yul\":2293:2296   */\n      0xc0\n        /* \"#utility.yul\":2278:2297   */\n      add\n        /* \"contracts/CMBS20Demo.sol\":776:819  mapping(uint256 => Tranche) public tranches */\n      tag_39\n        /* \"#utility.yul\":2002:2614   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_11:\n      tag_51\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_51\n      tag_76\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":6045:6117  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) { _unpause(); } */\n    tag_13:\n      tag_51\n      tag_79\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":5266:5819  function withdraw(uint256 id, uint256 amount) external whenNotPaused {... */\n    tag_14:\n      tag_51\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1726:1810  function paused() public view virtual returns (bool) {... */\n      jump(tag_41)\n        /* \"contracts/CMBS20Demo.sol\":6123:6273  function sweep(address to, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_16:\n      tag_51\n      tag_88\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_88:\n      tag_89\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":744:770  uint256 public lastAccrual */\n    tag_17:\n      tag_35\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/CMBS20Demo.sol\":5972:6040  function pause() external onlyRole(DEFAULT_ADMIN_ROLE) { _pause(); } */\n    tag_18:\n      tag_51\n      tag_94\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":2362:2948  function distributeToInvestors(... */\n    tag_19:\n      tag_51\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      tag_41\n      tag_100\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":1600:2356  function createTranche(... */\n    tag_21:\n      tag_51\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      tag_35\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/CMBS20Demo.sol\":6418:6537  function totalSupply(uint256 id) public view returns (uint256) {... */\n    tag_23:\n      tag_35\n      tag_111\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_111:\n      tag_112\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":3975:5115  function depositAndDistribute(uint256 amount)... */\n    tag_24:\n      tag_51\n      tag_115\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_25:\n      tag_51\n      tag_118\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_118:\n      tag_119\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":651:668  string public uri */\n    tag_26:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":710:738  uint256 public nextTrancheId */\n    tag_27:\n      tag_35\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/CMBS20Demo.sol\":6720:6861  function balanceOf(address account, uint256 id) external view returns (uint256) {... */\n    tag_38:\n        /* \"contracts/CMBS20Demo.sol\":6791:6798  uint256 */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":6817:6829  tranches[id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":6817:6825  tranches */\n      0x05\n        /* \"contracts/CMBS20Demo.sol\":6817:6829  tranches[id] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/CMBS20Demo.sol\":6817:6835  tranches[id].token */\n      sload\n        /* \"contracts/CMBS20Demo.sol\":6817:6854  tranches[id].token.balanceOf(account) */\n      swap1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1565:1620   */\n      dup6\n      dup2\n      and\n        /* \"contracts/CMBS20Demo.sol\":6817:6854  tranches[id].token.balanceOf(account) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1547:1621   */\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":6817:6835  tranches[id].token */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"contracts/CMBS20Demo.sol\":6817:6845  tranches[id].token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1520:1538   */\n      0x24\n      add\n        /* \"contracts/CMBS20Demo.sol\":6817:6854  tranches[id].token.balanceOf(account) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"contracts/CMBS20Demo.sol\":6810:6854  return tranches[id].token.balanceOf(account) */\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":6720:6861  function balanceOf(address account, uint256 id) external view returns (uint256) {... */\n    tag_127:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_127\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":3286:3351  function accrueAllInterest() public {... */\n    tag_52:\n        /* \"contracts/CMBS20Demo.sol\":3328:3348  _accrueAllInterest() */\n      tag_139\n        /* \"contracts/CMBS20Demo.sol\":3328:3346  _accrueAllInterest */\n      tag_140\n        /* \"contracts/CMBS20Demo.sol\":3328:3348  _accrueAllInterest() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/CMBS20Demo.sol\":3286:3351  function accrueAllInterest() public {... */\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":6543:6714  function totalSupply() public view returns (uint256 total) {... */\n    tag_54:\n        /* \"contracts/CMBS20Demo.sol\":6587:6600  uint256 total */\n      0x00\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":6612:6708  for (uint256 id = 0; id < nextTrancheId; ++id) {... */\n    tag_142:\n        /* \"contracts/CMBS20Demo.sol\":6638:6651  nextTrancheId */\n      sload(0x03)\n        /* \"contracts/CMBS20Demo.sol\":6633:6635  id */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":6633:6651  id < nextTrancheId */\n      lt\n        /* \"contracts/CMBS20Demo.sol\":6612:6708  for (uint256 id = 0; id < nextTrancheId; ++id) {... */\n      iszero\n      tag_143\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":6682:6697  totalSupply(id) */\n      tag_145\n        /* \"contracts/CMBS20Demo.sol\":6694:6696  id */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":6682:6693  totalSupply */\n      tag_112\n        /* \"contracts/CMBS20Demo.sol\":6682:6697  totalSupply(id) */\n      jump\t// in\n    tag_145:\n        /* \"contracts/CMBS20Demo.sol\":6673:6697  total += totalSupply(id) */\n      tag_146\n      swap1\n      dup4\n      tag_147\n      jump\t// in\n    tag_146:\n      swap2\n      pop\n        /* \"contracts/CMBS20Demo.sol\":6653:6657  ++id */\n      0x01\n      add\n        /* \"contracts/CMBS20Demo.sol\":6612:6708  for (uint256 id = 0; id < nextTrancheId; ++id) {... */\n      jump(tag_142)\n    tag_143:\n      pop\n        /* \"contracts/CMBS20Demo.sol\":6543:6714  function totalSupply() public view returns (uint256 total) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_154:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_159\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_160\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_160:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":6045:6117  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) { _unpause(); } */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_163\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/CMBS20Demo.sol\":6104:6114  _unpause() */\n      tag_165\n        /* \"contracts/CMBS20Demo.sol\":6104:6112  _unpause */\n      tag_166\n        /* \"contracts/CMBS20Demo.sol\":6104:6114  _unpause() */\n      jump\t// in\n    tag_165:\n        /* \"contracts/CMBS20Demo.sol\":6045:6117  function unpause() external onlyRole(DEFAULT_ADMIN_ROLE) { _unpause(); } */\n      pop\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":5266:5819  function withdraw(uint256 id, uint256 amount) external whenNotPaused {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_168\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/CMBS20Demo.sol\":5345:5362  Tranche storage t */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":5365:5377  tranches[id] */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":5365:5373  tranches */\n      0x05\n        /* \"contracts/CMBS20Demo.sol\":5365:5377  tranches[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"contracts/CMBS20Demo.sol\":5408:5415  t.token */\n      dup1\n      sload\n        /* \"contracts/CMBS20Demo.sol\":5433:5460  token.balanceOf(msg.sender) */\n      swap2\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":5449:5459  msg.sender */\n      caller\n        /* \"contracts/CMBS20Demo.sol\":5433:5460  token.balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1547:1621   */\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":5365:5377  tranches[id] */\n      swap1\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":5408:5415  t.token */\n      and\n      swap1\n        /* \"contracts/CMBS20Demo.sol\":5464:5470  amount */\n      dup4\n      swap1\n        /* \"contracts/CMBS20Demo.sol\":5408:5415  t.token */\n      dup3\n      swap1\n        /* \"contracts/CMBS20Demo.sol\":5433:5448  token.balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1520:1538   */\n      0x24\n      add\n        /* \"contracts/CMBS20Demo.sol\":5433:5460  token.balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_174:\n        /* \"contracts/CMBS20Demo.sol\":5433:5470  token.balanceOf(msg.sender) >= amount */\n      lt\n      iszero\n        /* \"contracts/CMBS20Demo.sol\":5425:5491  require(token.balanceOf(msg.sender) >= amount, \"INSUFFICIENT_BAL\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6548:6550   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":5425:5491  require(token.balanceOf(msg.sender) >= amount, \"INSUFFICIENT_BAL\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6530:6551   */\n      mstore\n        /* \"#utility.yul\":6587:6589   */\n      0x10\n        /* \"#utility.yul\":6567:6585   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6560:6590   */\n      mstore\n        /* \"#utility.yul\":6626:6644   */\n      0x494e53554646494349454e545f42414c00000000000000000000000000000000\n        /* \"#utility.yul\":6606:6624   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6599:6645   */\n      mstore\n        /* \"#utility.yul\":6662:6680   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":5425:5491  require(token.balanceOf(msg.sender) >= amount, \"INSUFFICIENT_BAL\") */\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"contracts/CMBS20Demo.sol\":5502:5517  uint256 proRata */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":5549:5554  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":5549:5566  token.totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/CMBS20Demo.sol\":5549:5568  token.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_180:\n        /* \"contracts/CMBS20Demo.sol\":5539:5545  amount */\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":5521:5522  t */\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":5521:5536  t.cashAvailable */\n      0x05\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":5521:5545  t.cashAvailable * amount */\n      tag_181\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_181:\n        /* \"contracts/CMBS20Demo.sol\":5520:5568  (t.cashAvailable * amount) / token.totalSupply() */\n      tag_183\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n        /* \"contracts/CMBS20Demo.sol\":5502:5568  uint256 proRata = (t.cashAvailable * amount) / token.totalSupply() */\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":5597:5604  proRata */\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":5578:5579  t */\n      dup4\n        /* \"contracts/CMBS20Demo.sol\":5578:5593  t.cashAvailable */\n      0x05\n      add\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":5578:5604  t.cashAvailable -= proRata */\n      dup3\n      dup3\n      sload\n      tag_185\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/CMBS20Demo.sol\":5615:5645  token.burn(msg.sender, amount) */\n      mload(0x40)\n      0x9dc29fac00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":5626:5636  msg.sender */\n      caller\n        /* \"contracts/CMBS20Demo.sol\":5615:5645  token.burn(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7450:7524   */\n      mstore\n        /* \"#utility.yul\":7540:7558   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7533:7567   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":5615:5625  token.burn */\n      dup4\n      and\n      swap1\n      0x9dc29fac\n      swap1\n        /* \"#utility.yul\":7423:7441   */\n      0x44\n      add\n        /* \"contracts/CMBS20Demo.sol\":5615:5645  token.burn(msg.sender, amount) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_189\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_189:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n        /* \"contracts/CMBS20Demo.sol\":5701:5737  stable.transfer(msg.sender, proRata) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":5717:5727  msg.sender */\n      caller\n        /* \"contracts/CMBS20Demo.sol\":5701:5737  stable.transfer(msg.sender, proRata) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7450:7524   */\n      mstore\n        /* \"#utility.yul\":7540:7558   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7533:7567   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":5701:5707  stable */\n      immutable(\"0xa0304342046b949c357e13879a24ce2facaca0ee062a454217f01898ed92aabf\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":5701:5716  stable.transfer */\n      and\n      swap3\n      pop\n      0xa9059cbb\n      swap2\n      pop\n        /* \"#utility.yul\":7423:7441   */\n      0x44\n      add\n        /* \"contracts/CMBS20Demo.sol\":5701:5737  stable.transfer(msg.sender, proRata) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_195\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_195:\n        /* \"contracts/CMBS20Demo.sol\":5693:5764  require(stable.transfer(msg.sender, proRata), \"STABLE_TRANSFER_FAILED\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8062:8064   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":5693:5764  require(stable.transfer(msg.sender, proRata), \"STABLE_TRANSFER_FAILED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8044:8065   */\n      mstore\n        /* \"#utility.yul\":8101:8103   */\n      0x16\n        /* \"#utility.yul\":8081:8099   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8074:8104   */\n      mstore\n        /* \"#utility.yul\":8140:8164   */\n      0x535441424c455f5452414e534645525f4641494c454400000000000000000000\n        /* \"#utility.yul\":8120:8138   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8113:8165   */\n      mstore\n        /* \"#utility.yul\":8182:8200   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":5693:5764  require(stable.transfer(msg.sender, proRata), \"STABLE_TRANSFER_FAILED\") */\n      tag_176\n        /* \"#utility.yul\":7860:8206   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":5693:5764  require(stable.transfer(msg.sender, proRata), \"STABLE_TRANSFER_FAILED\") */\n    tag_197:\n        /* \"contracts/CMBS20Demo.sol\":5779:5812  Withdraw(msg.sender, id, proRata) */\n      mload(0x40)\n        /* \"#utility.yul\":639:664   */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":5800:5802  id */\n      dup6\n      swap1\n        /* \"contracts/CMBS20Demo.sol\":5788:5798  msg.sender */\n      caller\n      swap1\n        /* \"contracts/CMBS20Demo.sol\":5779:5812  Withdraw(msg.sender, id, proRata) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap1\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      add\n        /* \"contracts/CMBS20Demo.sol\":5779:5812  Withdraw(msg.sender, id, proRata) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CMBS20Demo.sol\":5335:5819  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/CMBS20Demo.sol\":5266:5819  function withdraw(uint256 id, uint256 amount) external whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":6123:6273  function sweep(address to, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_203\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/CMBS20Demo.sol\":6222:6249  stable.transfer(to, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7468:7523   */\n      dup5\n      dup2\n      and\n        /* \"contracts/CMBS20Demo.sol\":6222:6249  stable.transfer(to, amount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":7450:7524   */\n      mstore\n        /* \"#utility.yul\":7540:7558   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7533:7567   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":6222:6228  stable */\n      immutable(\"0xa0304342046b949c357e13879a24ce2facaca0ee062a454217f01898ed92aabf\")\n        /* \"contracts/CMBS20Demo.sol\":6222:6237  stable.transfer */\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7423:7441   */\n      0x44\n      add\n        /* \"contracts/CMBS20Demo.sol\":6222:6249  stable.transfer(to, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_208:\n        /* \"contracts/CMBS20Demo.sol\":6214:6266  require(stable.transfer(to, amount), \"SWEEP_FAILED\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8413:8415   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":6214:6266  require(stable.transfer(to, amount), \"SWEEP_FAILED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8395:8416   */\n      mstore\n        /* \"#utility.yul\":8452:8454   */\n      0x0c\n        /* \"#utility.yul\":8432:8450   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8425:8455   */\n      mstore\n        /* \"#utility.yul\":8491:8505   */\n      0x53574545505f4641494c45440000000000000000000000000000000000000000\n        /* \"#utility.yul\":8471:8489   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8464:8506   */\n      mstore\n        /* \"#utility.yul\":8523:8541   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":6214:6266  require(stable.transfer(to, amount), \"SWEEP_FAILED\") */\n      tag_176\n        /* \"#utility.yul\":8211:8547   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":5972:6040  function pause() external onlyRole(DEFAULT_ADMIN_ROLE) { _pause(); } */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_213\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/CMBS20Demo.sol\":6029:6037  _pause() */\n      tag_165\n        /* \"contracts/CMBS20Demo.sol\":6029:6035  _pause */\n      tag_216\n        /* \"contracts/CMBS20Demo.sol\":6029:6037  _pause() */\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":2362:2948  function distributeToInvestors(... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_218\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/CMBS20Demo.sol\":2541:2559  ERC3643Token token */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":2562:2574  tranches[id] */\n      dup7\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":2562:2570  tranches */\n      0x05\n        /* \"contracts/CMBS20Demo.sol\":2562:2574  tranches[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/CMBS20Demo.sol\":2562:2580  tranches[id].token */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/CMBS20Demo.sol\":2598:2632  investors.length == amounts.length */\n      dup5\n      dup4\n      eq\n        /* \"contracts/CMBS20Demo.sol\":2590:2658  require(investors.length == amounts.length, \"ARRAY_LENGTH_MISMATCH\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8754:8756   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":2590:2658  require(investors.length == amounts.length, \"ARRAY_LENGTH_MISMATCH\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8736:8757   */\n      mstore\n        /* \"#utility.yul\":8793:8795   */\n      0x15\n        /* \"#utility.yul\":8773:8791   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8766:8796   */\n      mstore\n        /* \"#utility.yul\":8832:8855   */\n      0x41525241595f4c454e4754485f4d49534d415443480000000000000000000000\n        /* \"#utility.yul\":8812:8830   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8805:8856   */\n      mstore\n        /* \"#utility.yul\":8873:8891   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":2590:2658  require(investors.length == amounts.length, \"ARRAY_LENGTH_MISMATCH\") */\n      tag_176\n        /* \"#utility.yul\":8552:8897   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":2590:2658  require(investors.length == amounts.length, \"ARRAY_LENGTH_MISMATCH\") */\n    tag_220:\n        /* \"contracts/CMBS20Demo.sol\":2710:2731  _totalAmount(amounts) */\n      tag_223\n        /* \"contracts/CMBS20Demo.sol\":2723:2730  amounts */\n      dup5\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":2710:2731  _totalAmount(amounts) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/CMBS20Demo.sol\":2710:2722  _totalAmount */\n      tag_224\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/CMBS20Demo.sol\":2710:2731  _totalAmount(amounts) */\n      jump\t// in\n    tag_223:\n        /* \"contracts/CMBS20Demo.sol\":2676:2706  token.balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":2700:2704  this */\n      address\n        /* \"contracts/CMBS20Demo.sol\":2676:2706  token.balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1547:1621   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":2676:2691  token.balanceOf */\n      dup4\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1520:1538   */\n      0x24\n      add\n        /* \"contracts/CMBS20Demo.sol\":2676:2706  token.balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_227:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_228\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_228:\n        /* \"contracts/CMBS20Demo.sol\":2676:2731  token.balanceOf(address(this)) >= _totalAmount(amounts) */\n      lt\n      iszero\n        /* \"contracts/CMBS20Demo.sol\":2668:2758  require(token.balanceOf(address(this)) >= _totalAmount(amounts), \"INSUFFICIENT_ADMIN_BAL\") */\n      tag_229\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9104:9106   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":2668:2758  require(token.balanceOf(address(this)) >= _totalAmount(amounts), \"INSUFFICIENT_ADMIN_BAL\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9086:9107   */\n      mstore\n        /* \"#utility.yul\":9143:9145   */\n      0x16\n        /* \"#utility.yul\":9123:9141   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9116:9146   */\n      mstore\n        /* \"#utility.yul\":9182:9206   */\n      0x494e53554646494349454e545f41444d494e5f42414c00000000000000000000\n        /* \"#utility.yul\":9162:9180   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9155:9207   */\n      mstore\n        /* \"#utility.yul\":9224:9242   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":2668:2758  require(token.balanceOf(address(this)) >= _totalAmount(amounts), \"INSUFFICIENT_ADMIN_BAL\") */\n      tag_176\n        /* \"#utility.yul\":8902:9248   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":2668:2758  require(token.balanceOf(address(this)) >= _totalAmount(amounts), \"INSUFFICIENT_ADMIN_BAL\") */\n    tag_229:\n        /* \"contracts/CMBS20Demo.sol\":2774:2783  uint256 i */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":2769:2942  for (uint256 i = 0; i < investors.length; ++i) {... */\n    tag_232:\n        /* \"contracts/CMBS20Demo.sol\":2789:2809  i < investors.length */\n      dup6\n      dup2\n      lt\n        /* \"contracts/CMBS20Demo.sol\":2769:2942  for (uint256 i = 0; i < investors.length; ++i) {... */\n      iszero\n      tag_233\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":2830:2835  token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":2830:2844  token.transfer */\n      and\n      0xa9059cbb\n        /* \"contracts/CMBS20Demo.sol\":2845:2854  investors */\n      dup9\n      dup9\n        /* \"contracts/CMBS20Demo.sol\":2855:2856  i */\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":2845:2857  investors[i] */\n      dup2\n      dup2\n      lt\n      tag_236\n      jumpi\n      tag_236\n      tag_237\n      jump\t// in\n    tag_236:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n        /* \"contracts/CMBS20Demo.sol\":2859:2866  amounts */\n      dup8\n      dup8\n        /* \"contracts/CMBS20Demo.sol\":2867:2868  i */\n      dup6\n        /* \"contracts/CMBS20Demo.sol\":2859:2869  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_241\n      jumpi\n      tag_241\n      tag_237\n      jump\t// in\n    tag_241:\n        /* \"contracts/CMBS20Demo.sol\":2830:2870  token.transfer(investors[i], amounts[i]) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup8\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7468:7523   */\n      swap1\n      swap5\n      and\n        /* \"contracts/CMBS20Demo.sol\":2830:2870  token.transfer(investors[i], amounts[i]) */\n      0x04\n      dup6\n      add\n        /* \"#utility.yul\":7450:7524   */\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":2859:2869  amounts[i] */\n      0x20\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      calldataload\n        /* \"#utility.yul\":7540:7558   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":7533:7567   */\n      mstore\n      pop\n        /* \"#utility.yul\":7423:7441   */\n      0x44\n      add\n        /* \"contracts/CMBS20Demo.sol\":2830:2870  token.transfer(investors[i], amounts[i]) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_244:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_245\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_245:\n      pop\n        /* \"contracts/CMBS20Demo.sol\":2906:2915  investors */\n      dup7\n      dup7\n        /* \"contracts/CMBS20Demo.sol\":2916:2917  i */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":2906:2918  investors[i] */\n      dup2\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_247\n      tag_237\n      jump\t// in\n    tag_247:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_248:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":2889:2931  Distribution(id, investors[i], amounts[i]) */\n      and\n        /* \"contracts/CMBS20Demo.sol\":2902:2904  id */\n      dup9\n        /* \"contracts/CMBS20Demo.sol\":2889:2931  Distribution(id, investors[i], amounts[i]) */\n      0xb6bcab815b7a952b8759f2f92fc9981dc1156f6c11bf4dc7e9cb3036495e653a\n        /* \"contracts/CMBS20Demo.sol\":2920:2927  amounts */\n      dup8\n      dup8\n        /* \"contracts/CMBS20Demo.sol\":2928:2929  i */\n      dup6\n        /* \"contracts/CMBS20Demo.sol\":2920:2930  amounts[i] */\n      dup2\n      dup2\n      lt\n      tag_250\n      jumpi\n      tag_250\n      tag_237\n      jump\t// in\n    tag_250:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"contracts/CMBS20Demo.sol\":2889:2931  Distribution(id, investors[i], amounts[i]) */\n      mload(0x40)\n      tag_251\n      swap2\n        /* \"#utility.yul\":639:664   */\n      dup2\n      mstore\n        /* \"#utility.yul\":627:629   */\n      0x20\n        /* \"#utility.yul\":612:630   */\n      add\n      swap1\n        /* \"#utility.yul\":493:670   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":2889:2931  Distribution(id, investors[i], amounts[i]) */\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/CMBS20Demo.sol\":2811:2814  ++i */\n      0x01\n      add\n        /* \"contracts/CMBS20Demo.sol\":2769:2942  for (uint256 i = 0; i < investors.length; ++i) {... */\n      jump(tag_232)\n    tag_233:\n      pop\n        /* \"contracts/CMBS20Demo.sol\":2531:2948  {... */\n      pop\n        /* \"contracts/CMBS20Demo.sol\":2362:2948  function distributeToInvestors(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":1600:2356  function createTranche(... */\n    tag_106:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_254\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_254:\n        /* \"contracts/CMBS20Demo.sol\":1828:1829  0 */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":1816:1825  principal */\n      dup6\n        /* \"contracts/CMBS20Demo.sol\":1816:1829  principal > 0 */\n      gt\n        /* \"contracts/CMBS20Demo.sol\":1808:1851  require(principal > 0, \"INVALID_PRINCIPAL\") */\n      tag_256\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9896:9898   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":1808:1851  require(principal > 0, \"INVALID_PRINCIPAL\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9878:9899   */\n      mstore\n        /* \"#utility.yul\":9935:9937   */\n      0x11\n        /* \"#utility.yul\":9915:9933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9908:9938   */\n      mstore\n        /* \"#utility.yul\":9974:9993   */\n      0x494e56414c49445f5052494e434950414c000000000000000000000000000000\n        /* \"#utility.yul\":9954:9972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9947:9994   */\n      mstore\n        /* \"#utility.yul\":10011:10029   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":1808:1851  require(principal > 0, \"INVALID_PRINCIPAL\") */\n      tag_176\n        /* \"#utility.yul\":9694:10035   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":1808:1851  require(principal > 0, \"INVALID_PRINCIPAL\") */\n    tag_256:\n        /* \"contracts/CMBS20Demo.sol\":1878:1879  0 */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":1869:1875  supply */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":1869:1879  supply > 0 */\n      gt\n        /* \"contracts/CMBS20Demo.sol\":1861:1898  require(supply > 0, \"INVALID_SUPPLY\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10242:10244   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":1861:1898  require(supply > 0, \"INVALID_SUPPLY\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10224:10245   */\n      mstore\n        /* \"#utility.yul\":10281:10283   */\n      0x0e\n        /* \"#utility.yul\":10261:10279   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10254:10284   */\n      mstore\n        /* \"#utility.yul\":10320:10336   */\n      0x494e56414c49445f535550504c59000000000000000000000000000000000000\n        /* \"#utility.yul\":10300:10318   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10293:10337   */\n      mstore\n        /* \"#utility.yul\":10354:10372   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":1861:1898  require(supply > 0, \"INVALID_SUPPLY\") */\n      tag_176\n        /* \"#utility.yul\":10040:10378   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":1861:1898  require(supply > 0, \"INVALID_SUPPLY\") */\n    tag_259:\n        /* \"contracts/CMBS20Demo.sol\":1926:1931  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":1926:1943  token.totalSupply */\n      and\n      0x18160ddd\n        /* \"contracts/CMBS20Demo.sol\":1926:1945  token.totalSupply() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_263\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_263:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_264\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_264:\n        /* \"contracts/CMBS20Demo.sol\":1916:1922  supply */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":1916:1945  supply == token.totalSupply() */\n      eq\n        /* \"contracts/CMBS20Demo.sol\":1908:1970  require(supply == token.totalSupply(), \"INVALID_TOKEN_SUPPLY\") */\n      tag_265\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10585:10587   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":1908:1970  require(supply == token.totalSupply(), \"INVALID_TOKEN_SUPPLY\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10567:10588   */\n      mstore\n        /* \"#utility.yul\":10624:10626   */\n      0x14\n        /* \"#utility.yul\":10604:10622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10597:10627   */\n      mstore\n        /* \"#utility.yul\":10663:10685   */\n      0x494e56414c49445f544f4b454e5f535550504c59000000000000000000000000\n        /* \"#utility.yul\":10643:10661   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10636:10686   */\n      mstore\n        /* \"#utility.yul\":10703:10721   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":1908:1970  require(supply == token.totalSupply(), \"INVALID_TOKEN_SUPPLY\") */\n      tag_176\n        /* \"#utility.yul\":10383:10727   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":1908:1970  require(supply == token.totalSupply(), \"INVALID_TOKEN_SUPPLY\") */\n    tag_265:\n        /* \"contracts/CMBS20Demo.sol\":1994:2007  nextTrancheId */\n      sload(0x03)\n        /* \"contracts/CMBS20Demo.sol\":2033:2039  id + 1 */\n      tag_268\n        /* \"contracts/CMBS20Demo.sol\":1994:2007  nextTrancheId */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":2038:2039  1 */\n      0x01\n        /* \"contracts/CMBS20Demo.sol\":2033:2039  id + 1 */\n      tag_147\n      jump\t// in\n    tag_268:\n        /* \"contracts/CMBS20Demo.sol\":2017:2030  nextTrancheId */\n      0x03\n        /* \"contracts/CMBS20Demo.sol\":2017:2039  nextTrancheId = id + 1 */\n      swap1\n      dup2\n      sstore\n        /* \"contracts/CMBS20Demo.sol\":2065:2274  Tranche({... */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup11\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup12\n      dup2\n      mstore\n      dup4\n      dup6\n      add\n      dup12\n      dup2\n      mstore\n      0xff\n      dup12\n      dup2\n      and\n      0x60\n      dup1\n      dup9\n      add\n      dup3\n      dup2\n      mstore\n      0x00\n      0x80\n      dup1\n      dup12\n      add\n      dup3\n      dup2\n      mstore\n      0xa0\n      dup13\n      add\n      dup4\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":2050:2062  tranches[id] */\n      dup16\n      dup5\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":2050:2058  tranches */\n      0x05\n        /* \"contracts/CMBS20Demo.sol\":2050:2062  tranches[id] */\n      dup1\n      dup13\n      mstore\n      swap4\n      dup15\n      swap1\n      keccak256\n        /* \"contracts/CMBS20Demo.sol\":2050:2274  tranches[id] = Tranche({... */\n      swap13\n      mload\n      dup14\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      swap13\n      and\n      swap12\n      swap1\n      swap12\n      or\n      dup13\n      sstore\n      swap8\n      mload\n      0x01\n      dup13\n      add\n      sstore\n      swap6\n      mload\n      0x02\n      dup12\n      add\n      sstore\n      swap1\n      mload\n      swap11\n      dup10\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap12\n      swap1\n      swap5\n      and\n      swap11\n      swap1\n      swap11\n      or\n      swap1\n      swap3\n      sstore\n      swap3\n      mload\n      0x04\n      dup8\n      add\n      sstore\n      swap4\n      mload\n      swap5\n      swap1\n      swap7\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/CMBS20Demo.sol\":2290:2349  TrancheCreated(id, principal, couponBps, seniority, supply) */\n      dup4\n      mload\n        /* \"#utility.yul\":10959:10984   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":11000:11018   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":10993:11027   */\n      dup11\n      swap1\n      mstore\n        /* \"#utility.yul\":11043:11061   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":11036:11081   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":11097:11115   */\n      dup2\n      add\n        /* \"#utility.yul\":11090:11124   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":2050:2062  tranches[id] */\n      dup3\n      swap2\n        /* \"contracts/CMBS20Demo.sol\":2290:2349  TrancheCreated(id, principal, couponBps, seniority, supply) */\n      0x564b343ad33dbf7eb84ef778355be83df7b0a44ce6021e56d7bd757a03c03544\n      swap2\n        /* \"#utility.yul\":10931:10950   */\n      add\n        /* \"contracts/CMBS20Demo.sol\":2290:2349  TrancheCreated(id, principal, couponBps, seniority, supply) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CMBS20Demo.sol\":1798:2356  {... */\n      pop\n        /* \"contracts/CMBS20Demo.sol\":1600:2356  function createTranche(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":6418:6537  function totalSupply(uint256 id) public view returns (uint256) {... */\n    tag_112:\n        /* \"contracts/CMBS20Demo.sol\":6472:6479  uint256 */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":6498:6510  tranches[id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":6498:6506  tranches */\n      0x05\n        /* \"contracts/CMBS20Demo.sol\":6498:6510  tranches[id] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/CMBS20Demo.sol\":6498:6516  tranches[id].token */\n      sload\n        /* \"contracts/CMBS20Demo.sol\":6498:6530  tranches[id].token.totalSupply() */\n      dup2\n      mload\n      0x18160ddd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      swap2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":6498:6516  tranches[id].token */\n      swap1\n      swap2\n      and\n      swap3\n        /* \"contracts/CMBS20Demo.sol\":6498:6528  tranches[id].token.totalSupply */\n      0x18160ddd\n      swap3\n        /* \"contracts/CMBS20Demo.sol\":6498:6530  tranches[id].token.totalSupply() */\n      0x04\n      dup1\n      dup3\n      add\n      swap4\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":6498:6516  tranches[id].token */\n      dup7\n        /* \"contracts/CMBS20Demo.sol\":6498:6530  tranches[id].token.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_273\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_273:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":3975:5115  function depositAndDistribute(uint256 amount)... */\n    tag_116:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_276\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/CMBS20Demo.sol\":382:408  keccak256(\"SERVICER_ROLE\") */\n      0x250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db6980537\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_278\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/CMBS20Demo.sol\":4114:4168  stable.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":4134:4144  msg.sender */\n      caller\n        /* \"contracts/CMBS20Demo.sol\":4114:4168  stable.transferFrom(msg.sender, address(this), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11398:11432   */\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":4154:4158  this */\n      address\n        /* \"#utility.yul\":11448:11466   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11441:11484   */\n      mstore\n        /* \"#utility.yul\":11500:11518   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":11493:11527   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":4114:4120  stable */\n      immutable(\"0xa0304342046b949c357e13879a24ce2facaca0ee062a454217f01898ed92aabf\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/CMBS20Demo.sol\":4114:4133  stable.transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":11310:11328   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":4114:4168  stable.transferFrom(msg.sender, address(this), amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_283\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_283:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_284\n      swap2\n      swap1\n      tag_196\n      jump\t// in\n    tag_284:\n        /* \"contracts/CMBS20Demo.sol\":4106:4188  require(stable.transferFrom(msg.sender, address(this), amount), \"TRANSFER_FAILED\") */\n      tag_285\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11740:11742   */\n      0x20\n        /* \"contracts/CMBS20Demo.sol\":4106:4188  require(stable.transferFrom(msg.sender, address(this), amount), \"TRANSFER_FAILED\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11722:11743   */\n      mstore\n        /* \"#utility.yul\":11779:11781   */\n      0x0f\n        /* \"#utility.yul\":11759:11777   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11752:11782   */\n      mstore\n        /* \"#utility.yul\":11818:11835   */\n      0x5452414e534645525f4641494c45440000000000000000000000000000000000\n        /* \"#utility.yul\":11798:11816   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11791:11836   */\n      mstore\n        /* \"#utility.yul\":11853:11871   */\n      0x64\n      add\n        /* \"contracts/CMBS20Demo.sol\":4106:4188  require(stable.transferFrom(msg.sender, address(this), amount), \"TRANSFER_FAILED\") */\n      tag_176\n        /* \"#utility.yul\":11538:11877   */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":4106:4188  require(stable.transferFrom(msg.sender, address(this), amount), \"TRANSFER_FAILED\") */\n    tag_285:\n        /* \"contracts/CMBS20Demo.sol\":4198:4218  _accrueAllInterest() */\n      tag_288\n        /* \"contracts/CMBS20Demo.sol\":4198:4216  _accrueAllInterest */\n      tag_140\n        /* \"contracts/CMBS20Demo.sol\":4198:4218  _accrueAllInterest() */\n      jump\t// in\n    tag_288:\n        /* \"contracts/CMBS20Demo.sol\":4249:4255  amount */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":4229:4246  uint256 remaining */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4266:5027  for (uint8 s = 0; s < 255 && remaining > 0; ++s) {... */\n    tag_289:\n        /* \"contracts/CMBS20Demo.sol\":4288:4291  255 */\n      0xff\n        /* \"contracts/CMBS20Demo.sol\":4284:4285  s */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":4284:4291  s < 255 */\n      0xff\n      and\n      lt\n        /* \"contracts/CMBS20Demo.sol\":4284:4308  s < 255 && remaining > 0 */\n      dup1\n      iszero\n      tag_292\n      jumpi\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4307:4308  0 */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4295:4304  remaining */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":4295:4308  remaining > 0 */\n      gt\n        /* \"contracts/CMBS20Demo.sol\":4284:4308  s < 255 && remaining > 0 */\n    tag_292:\n        /* \"contracts/CMBS20Demo.sol\":4266:5027  for (uint8 s = 0; s < 255 && remaining > 0; ++s) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":4334:4344  uint256 id */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4329:5017  for (uint256 id = 0; id < nextTrancheId && remaining > 0; ++id) {... */\n    tag_293:\n        /* \"contracts/CMBS20Demo.sol\":4355:4368  nextTrancheId */\n      sload(0x03)\n        /* \"contracts/CMBS20Demo.sol\":4350:4352  id */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":4350:4368  id < nextTrancheId */\n      lt\n        /* \"contracts/CMBS20Demo.sol\":4350:4385  id < nextTrancheId && remaining > 0 */\n      dup1\n      iszero\n      tag_296\n      jumpi\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4384:4385  0 */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4372:4381  remaining */\n      dup4\n        /* \"contracts/CMBS20Demo.sol\":4372:4385  remaining > 0 */\n      gt\n        /* \"contracts/CMBS20Demo.sol\":4350:4385  id < nextTrancheId && remaining > 0 */\n    tag_296:\n        /* \"contracts/CMBS20Demo.sol\":4329:5017  for (uint256 id = 0; id < nextTrancheId && remaining > 0; ++id) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":4411:4428  Tranche storage t */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4431:4443  tranches[id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":4431:4439  tranches */\n      0x05\n        /* \"contracts/CMBS20Demo.sol\":4431:4443  tranches[id] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/CMBS20Demo.sol\":4465:4476  t.seniority */\n      0x03\n      dup2\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":4465:4481  t.seniority != s */\n      0xff\n      dup5\n      dup2\n      and\n        /* \"contracts/CMBS20Demo.sol\":4465:4476  t.seniority */\n      swap2\n      and\n        /* \"contracts/CMBS20Demo.sol\":4465:4481  t.seniority != s */\n      eq\n        /* \"contracts/CMBS20Demo.sol\":4461:4491  if (t.seniority != s) continue */\n      tag_297\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":4483:4491  continue */\n      pop\n      jump(tag_295)\n        /* \"contracts/CMBS20Demo.sol\":4461:4491  if (t.seniority != s) continue */\n    tag_297:\n        /* \"contracts/CMBS20Demo.sol\":4510:4524  uint256 payInt */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4548:4557  remaining */\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":4527:4528  t */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":4527:4544  t.accruedInterest */\n      0x04\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":4527:4557  t.accruedInterest <= remaining */\n      gt\n      iszero\n        /* \"contracts/CMBS20Demo.sol\":4527:4589  t.accruedInterest <= remaining ? t.accruedInterest : remaining */\n      tag_298\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":4580:4589  remaining */\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":4527:4589  t.accruedInterest <= remaining ? t.accruedInterest : remaining */\n      jump(tag_299)\n    tag_298:\n        /* \"contracts/CMBS20Demo.sol\":4560:4561  t */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":4560:4577  t.accruedInterest */\n      0x04\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":4527:4589  t.accruedInterest <= remaining ? t.accruedInterest : remaining */\n    tag_299:\n        /* \"contracts/CMBS20Demo.sol\":4510:4589  uint256 payInt = t.accruedInterest <= remaining ? t.accruedInterest : remaining */\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4628:4634  payInt */\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":4607:4608  t */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":4607:4624  t.accruedInterest */\n      0x04\n      add\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4607:4634  t.accruedInterest -= payInt */\n      dup3\n      dup3\n      sload\n      tag_300\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_300:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4672:4678  payInt */\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":4652:4653  t */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":4652:4667  t.cashAvailable */\n      0x05\n      add\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4652:4678  t.cashAvailable  += payInt */\n      dup3\n      dup3\n      sload\n      tag_301\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_301:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4696:4722  remaining        -= payInt */\n      tag_302\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4716:4722  payInt */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":4696:4722  remaining        -= payInt */\n      dup7\n      tag_186\n      jump\t// in\n    tag_302:\n      swap5\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4741:4756  uint256 payPrin */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4774:4783  remaining */\n      dup6\n        /* \"contracts/CMBS20Demo.sol\":4759:4760  t */\n      dup4\n        /* \"contracts/CMBS20Demo.sol\":4759:4770  t.principal */\n      0x01\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":4759:4783  t.principal <= remaining */\n      gt\n      iszero\n        /* \"contracts/CMBS20Demo.sol\":4759:4809  t.principal <= remaining ? t.principal : remaining */\n      tag_303\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":4800:4809  remaining */\n      dup6\n        /* \"contracts/CMBS20Demo.sol\":4759:4809  t.principal <= remaining ? t.principal : remaining */\n      jump(tag_304)\n    tag_303:\n        /* \"contracts/CMBS20Demo.sol\":4786:4787  t */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":4786:4797  t.principal */\n      0x01\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":4759:4809  t.principal <= remaining ? t.principal : remaining */\n    tag_304:\n        /* \"contracts/CMBS20Demo.sol\":4741:4809  uint256 payPrin = t.principal <= remaining ? t.principal : remaining */\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4846:4853  payPrin */\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":4827:4828  t */\n      dup4\n        /* \"contracts/CMBS20Demo.sol\":4827:4838  t.principal */\n      0x01\n      add\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4827:4853  t.principal     -= payPrin */\n      dup3\n      dup3\n      sload\n      tag_305\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_305:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4890:4897  payPrin */\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":4871:4872  t */\n      dup4\n        /* \"contracts/CMBS20Demo.sol\":4871:4886  t.cashAvailable */\n      0x05\n      add\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":4871:4897  t.cashAvailable += payPrin */\n      dup3\n      dup3\n      sload\n      tag_306\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_306:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4915:4941  remaining       -= payPrin */\n      tag_307\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4934:4941  payPrin */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":4915:4941  remaining       -= payPrin */\n      dup8\n      tag_186\n      jump\t// in\n    tag_307:\n        /* \"contracts/CMBS20Demo.sol\":4965:5002  PaymentAllocated(id, payInt, payPrin) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12056:12081   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":12112:12114   */\n      0x20\n        /* \"#utility.yul\":12097:12115   */\n      dup2\n      add\n        /* \"#utility.yul\":12090:12124   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":4915:4941  remaining       -= payPrin */\n      swap2\n      swap8\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4982:4984  id */\n      dup6\n      swap2\n        /* \"contracts/CMBS20Demo.sol\":4965:5002  PaymentAllocated(id, payInt, payPrin) */\n      0xc679124717471d056fe130fb8066ce200851eec03c00256ee1158b7d2354036f\n      swap2\n        /* \"#utility.yul\":12029:12047   */\n      add\n        /* \"contracts/CMBS20Demo.sol\":4965:5002  PaymentAllocated(id, payInt, payPrin) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CMBS20Demo.sol\":4393:5017  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4329:5017  for (uint256 id = 0; id < nextTrancheId && remaining > 0; ++id) {... */\n    tag_295:\n        /* \"contracts/CMBS20Demo.sol\":4387:4391  ++id */\n      tag_310\n      dup2\n      tag_311\n      jump\t// in\n    tag_310:\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4329:5017  for (uint256 id = 0; id < nextTrancheId && remaining > 0; ++id) {... */\n      jump(tag_293)\n    tag_294:\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4310:4313  ++s */\n      tag_312\n      dup2\n      tag_313\n      jump\t// in\n    tag_312:\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":4266:5027  for (uint8 s = 0; s < 255 && remaining > 0; ++s) {... */\n      jump(tag_289)\n    tag_290:\n      pop\n        /* \"contracts/CMBS20Demo.sol\":5042:5091  PaymentAllocated(type(uint256).max, 0, remaining) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/CMBS20Demo.sol\":5078:5079  0 */\n      0x00\n        /* \"#utility.yul\":12056:12081   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12112:12114   */\n      0x20\n        /* \"#utility.yul\":12097:12115   */\n      dup2\n      add\n        /* \"#utility.yul\":12090:12124   */\n      dup4\n      swap1\n      mstore\n      not(0x00)\n        /* \"contracts/CMBS20Demo.sol\":5059:5076  type(uint256).max */\n      swap2\n        /* \"contracts/CMBS20Demo.sol\":5042:5091  PaymentAllocated(type(uint256).max, 0, remaining) */\n      0xc679124717471d056fe130fb8066ce200851eec03c00256ee1158b7d2354036f\n      swap2\n        /* \"#utility.yul\":12029:12047   */\n      add\n        /* \"contracts/CMBS20Demo.sol\":5042:5091  PaymentAllocated(type(uint256).max, 0, remaining) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/CMBS20Demo.sol\":4096:5115  {... */\n      pop\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1379:1380  _ */\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3975:5115  function depositAndDistribute(uint256 amount)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_318\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_152\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_318:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_154\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"contracts/CMBS20Demo.sol\":651:668  string public uri */\n    tag_121:\n      0x02\n      dup1\n      sload\n      tag_321\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_323\n      swap1\n      tag_322\n      jump\t// in\n    tag_323:\n      dup1\n      iszero\n      tag_324\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_325\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_324)\n    tag_325:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_326:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_326\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_324:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":3358:3813  function _accrueAllInterest() internal {... */\n    tag_140:\n        /* \"contracts/CMBS20Demo.sol\":3407:3417  uint256 dt */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":3438:3449  lastAccrual */\n      sload(0x04)\n        /* \"contracts/CMBS20Demo.sol\":3420:3435  block.timestamp */\n      timestamp\n        /* \"contracts/CMBS20Demo.sol\":3420:3449  block.timestamp - lastAccrual */\n      tag_329\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_329:\n        /* \"contracts/CMBS20Demo.sol\":3407:3449  uint256 dt = block.timestamp - lastAccrual */\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3463:3465  dt */\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":3469:3470  0 */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":3463:3470  dt == 0 */\n      sub\n        /* \"contracts/CMBS20Demo.sol\":3459:3479  if (dt == 0) return; */\n      tag_330\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":3472:3479  return; */\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3358:3813  function _accrueAllInterest() internal {... */\n      jump\t// out\n        /* \"contracts/CMBS20Demo.sol\":3459:3479  if (dt == 0) return; */\n    tag_330:\n        /* \"contracts/CMBS20Demo.sol\":3502:3517  block.timestamp */\n      timestamp\n        /* \"contracts/CMBS20Demo.sol\":3488:3499  lastAccrual */\n      0x04\n        /* \"contracts/CMBS20Demo.sol\":3488:3517  lastAccrual = block.timestamp */\n      sstore\n        /* \"contracts/CMBS20Demo.sol\":3534:3544  uint256 id */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":3529:3807  for (uint256 id = 0; id < nextTrancheId; ++id) {... */\n    tag_331:\n        /* \"contracts/CMBS20Demo.sol\":3555:3568  nextTrancheId */\n      sload(0x03)\n        /* \"contracts/CMBS20Demo.sol\":3550:3552  id */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":3550:3568  id < nextTrancheId */\n      lt\n        /* \"contracts/CMBS20Demo.sol\":3529:3807  for (uint256 id = 0; id < nextTrancheId; ++id) {... */\n      iszero\n      tag_332\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":3590:3607  Tranche storage t */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":3610:3622  tranches[id] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/CMBS20Demo.sol\":3610:3618  tranches */\n      0x05\n        /* \"contracts/CMBS20Demo.sol\":3610:3622  tranches[id] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/CMBS20Demo.sol\":3640:3651  t.principal */\n      0x01\n      dup2\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":3610:3622  tranches[id] */\n      swap1\n      swap2\n        /* \"contracts/CMBS20Demo.sol\":3640:3656  t.principal == 0 */\n      sub\n        /* \"contracts/CMBS20Demo.sol\":3636:3666  if (t.principal == 0) continue */\n      tag_334\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":3658:3666  continue */\n      pop\n      jump(tag_333)\n        /* \"contracts/CMBS20Demo.sol\":3636:3666  if (t.principal == 0) continue */\n    tag_334:\n        /* \"contracts/CMBS20Demo.sol\":3680:3696  uint256 interest */\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":3735:3752  365 days * 10_000 */\n      0x496cebb800\n        /* \"contracts/CMBS20Demo.sol\":3728:3730  dt */\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":3714:3715  t */\n      dup4\n        /* \"contracts/CMBS20Demo.sol\":3714:3725  t.couponBps */\n      0x02\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":3700:3701  t */\n      dup5\n        /* \"contracts/CMBS20Demo.sol\":3700:3711  t.principal */\n      0x01\n      add\n      sload\n        /* \"contracts/CMBS20Demo.sol\":3700:3725  t.principal * t.couponBps */\n      tag_335\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_335:\n        /* \"contracts/CMBS20Demo.sol\":3700:3730  t.principal * t.couponBps * dt */\n      tag_336\n      swap2\n      swap1\n      tag_182\n      jump\t// in\n    tag_336:\n        /* \"contracts/CMBS20Demo.sol\":3699:3753  (t.principal * t.couponBps * dt) / (365 days * 10_000) */\n      tag_337\n      swap2\n      swap1\n      tag_184\n      jump\t// in\n    tag_337:\n        /* \"contracts/CMBS20Demo.sol\":3680:3753  uint256 interest = (t.principal * t.couponBps * dt) / (365 days * 10_000) */\n      swap1\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3788:3796  interest */\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":3767:3768  t */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":3767:3784  t.accruedInterest */\n      0x04\n      add\n      0x00\n        /* \"contracts/CMBS20Demo.sol\":3767:3796  t.accruedInterest += interest */\n      dup3\n      dup3\n      sload\n      tag_338\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_338:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3529:3807  for (uint256 id = 0; id < nextTrancheId; ++id) {... */\n    tag_333:\n        /* \"contracts/CMBS20Demo.sol\":3570:3574  ++id */\n      0x01\n      add\n        /* \"contracts/CMBS20Demo.sol\":3529:3807  for (uint256 id = 0; id < nextTrancheId; ++id) {... */\n      jump(tag_331)\n    tag_332:\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3397:3813  {... */\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3358:3813  function _accrueAllInterest() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_165\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_342\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_346\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_346:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_127)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_345:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_127)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_345\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      jump(tag_127)\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      tag_355\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1611  _requirePaused */\n      tag_356\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1597:1613  _requirePaused() */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2651  _paused */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2644:2659  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2683:2695  _msgSender() */\n    tag_358:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1565:1620   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1547:1621   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1535:1537   */\n      0x20\n        /* \"#utility.yul\":1520:1538   */\n      add\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2674:2696  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2586:2703  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1878:2006  function _requireNotPaused() internal view virtual {... */\n    tag_169:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1939:2000  if (paused()) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1974:1989  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2339:2454  function _pause() internal virtual whenNotPaused {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      tag_364\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1367  _requireNotPaused */\n      tag_169\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1350:1369  _requireNotPaused() */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2408:2412  true */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2398:2412  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2427:2447  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2434:2446  _msgSender() */\n      tag_358\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/CMBS20Demo.sol\":2954:3129  function _totalAmount(uint256[] memory arr) internal pure returns (uint256 sum) {... */\n    tag_224:\n        /* \"contracts/CMBS20Demo.sol\":3021:3032  uint256 sum */\n      0x00\n      dup1\n        /* \"contracts/CMBS20Demo.sol\":3044:3123  for (uint256 i = 0; i < arr.length; ++i) {... */\n    tag_369:\n        /* \"contracts/CMBS20Demo.sol\":3068:3071  arr */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":3068:3078  arr.length */\n      mload\n        /* \"contracts/CMBS20Demo.sol\":3064:3065  i */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":3064:3078  i < arr.length */\n      lt\n        /* \"contracts/CMBS20Demo.sol\":3044:3123  for (uint256 i = 0; i < arr.length; ++i) {... */\n      iszero\n      tag_370\n      jumpi\n        /* \"contracts/CMBS20Demo.sol\":3106:3109  arr */\n      dup3\n        /* \"contracts/CMBS20Demo.sol\":3110:3111  i */\n      dup2\n        /* \"contracts/CMBS20Demo.sol\":3106:3112  arr[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_373\n      jumpi\n      tag_373\n      tag_237\n      jump\t// in\n    tag_373:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/CMBS20Demo.sol\":3099:3112  sum += arr[i] */\n      dup3\n      tag_374\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_374:\n      swap2\n      pop\n        /* \"contracts/CMBS20Demo.sol\":3080:3083  ++i */\n      0x01\n      add\n        /* \"contracts/CMBS20Demo.sol\":3044:3123  for (uint256 i = 0; i < arr.length; ++i) {... */\n      jump(tag_369)\n    tag_370:\n      pop\n        /* \"contracts/CMBS20Demo.sol\":2954:3129  function _totalAmount(uint256[] memory arr) internal pure returns (uint256 sum) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_342:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_332\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7468:7523   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7450:7524   */\n      mstore\n        /* \"#utility.yul\":7540:7558   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7533:7567   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7423:7441   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_176\n        /* \"#utility.yul\":7276:7573   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2078:2204  function _requirePaused() internal view virtual {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":1796:1803  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2136:2198  if (!paused()) {... */\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Pausable.sol\":2172:2187  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:168   */\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":89:143   */\n      and\n        /* \"#utility.yul\":82:87   */\n      dup2\n        /* \"#utility.yul\":79:144   */\n      eq\n        /* \"#utility.yul\":69:162   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":158:159   */\n      0x00\n        /* \"#utility.yul\":155:156   */\n      dup1\n        /* \"#utility.yul\":148:160   */\n      revert\n        /* \"#utility.yul\":173:488   */\n    tag_37:\n        /* \"#utility.yul\":241:247   */\n      0x00\n        /* \"#utility.yul\":249:255   */\n      dup1\n        /* \"#utility.yul\":302:304   */\n      0x40\n        /* \"#utility.yul\":290:299   */\n      dup4\n        /* \"#utility.yul\":281:288   */\n      dup6\n        /* \"#utility.yul\":277:300   */\n      sub\n        /* \"#utility.yul\":273:305   */\n      slt\n        /* \"#utility.yul\":270:322   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":318:319   */\n      0x00\n        /* \"#utility.yul\":315:316   */\n      dup1\n        /* \"#utility.yul\":308:320   */\n      revert\n        /* \"#utility.yul\":270:322   */\n    tag_390:\n        /* \"#utility.yul\":357:366   */\n      dup3\n        /* \"#utility.yul\":344:367   */\n      calldataload\n        /* \"#utility.yul\":376:407   */\n      tag_391\n        /* \"#utility.yul\":401:406   */\n      dup2\n        /* \"#utility.yul\":376:407   */\n      tag_383\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":426:431   */\n      swap5\n        /* \"#utility.yul\":478:480   */\n      0x20\n        /* \"#utility.yul\":463:481   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":450:482   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":173:488   */\n      jump\t// out\n        /* \"#utility.yul\":675:1007   */\n    tag_43:\n        /* \"#utility.yul\":733:739   */\n      0x00\n        /* \"#utility.yul\":786:788   */\n      0x20\n        /* \"#utility.yul\":774:783   */\n      dup3\n        /* \"#utility.yul\":765:772   */\n      dup5\n        /* \"#utility.yul\":761:784   */\n      sub\n        /* \"#utility.yul\":757:789   */\n      slt\n        /* \"#utility.yul\":754:806   */\n      iszero\n      tag_394\n      jumpi\n        /* \"#utility.yul\":802:803   */\n      0x00\n        /* \"#utility.yul\":799:800   */\n      dup1\n        /* \"#utility.yul\":792:804   */\n      revert\n        /* \"#utility.yul\":754:806   */\n    tag_394:\n        /* \"#utility.yul\":841:850   */\n      dup2\n        /* \"#utility.yul\":828:851   */\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":884:889   */\n      dup2\n        /* \"#utility.yul\":880:958   */\n      and\n        /* \"#utility.yul\":873:878   */\n      dup2\n        /* \"#utility.yul\":870:959   */\n      eq\n        /* \"#utility.yul\":860:977   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":973:974   */\n      0x00\n        /* \"#utility.yul\":970:971   */\n      dup1\n        /* \"#utility.yul\":963:975   */\n      revert\n        /* \"#utility.yul\":860:977   */\n    tag_395:\n        /* \"#utility.yul\":996:1001   */\n      swap4\n        /* \"#utility.yul\":675:1007   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1632:1812   */\n    tag_62:\n        /* \"#utility.yul\":1691:1697   */\n      0x00\n        /* \"#utility.yul\":1744:1746   */\n      0x20\n        /* \"#utility.yul\":1732:1741   */\n      dup3\n        /* \"#utility.yul\":1723:1730   */\n      dup5\n        /* \"#utility.yul\":1719:1742   */\n      sub\n        /* \"#utility.yul\":1715:1747   */\n      slt\n        /* \"#utility.yul\":1712:1764   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":1760:1761   */\n      0x00\n        /* \"#utility.yul\":1757:1758   */\n      dup1\n        /* \"#utility.yul\":1750:1762   */\n      revert\n        /* \"#utility.yul\":1712:1764   */\n    tag_400:\n      pop\n        /* \"#utility.yul\":1783:1806   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1632:1812   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2619:2934   */\n    tag_73:\n        /* \"#utility.yul\":2687:2693   */\n      0x00\n        /* \"#utility.yul\":2695:2701   */\n      dup1\n        /* \"#utility.yul\":2748:2750   */\n      0x40\n        /* \"#utility.yul\":2736:2745   */\n      dup4\n        /* \"#utility.yul\":2727:2734   */\n      dup6\n        /* \"#utility.yul\":2723:2746   */\n      sub\n        /* \"#utility.yul\":2719:2751   */\n      slt\n        /* \"#utility.yul\":2716:2768   */\n      iszero\n      tag_405\n      jumpi\n        /* \"#utility.yul\":2764:2765   */\n      0x00\n        /* \"#utility.yul\":2761:2762   */\n      dup1\n        /* \"#utility.yul\":2754:2766   */\n      revert\n        /* \"#utility.yul\":2716:2768   */\n    tag_405:\n        /* \"#utility.yul\":2800:2809   */\n      dup3\n        /* \"#utility.yul\":2787:2810   */\n      calldataload\n        /* \"#utility.yul\":2777:2810   */\n      swap2\n      pop\n        /* \"#utility.yul\":2860:2862   */\n      0x20\n        /* \"#utility.yul\":2849:2858   */\n      dup4\n        /* \"#utility.yul\":2845:2863   */\n      add\n        /* \"#utility.yul\":2832:2864   */\n      calldataload\n        /* \"#utility.yul\":2873:2904   */\n      tag_406\n        /* \"#utility.yul\":2898:2903   */\n      dup2\n        /* \"#utility.yul\":2873:2904   */\n      tag_383\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":2923:2928   */\n      dup1\n        /* \"#utility.yul\":2913:2928   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2619:2934   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2939:3187   */\n    tag_82:\n        /* \"#utility.yul\":3007:3013   */\n      0x00\n        /* \"#utility.yul\":3015:3021   */\n      dup1\n        /* \"#utility.yul\":3068:3070   */\n      0x40\n        /* \"#utility.yul\":3056:3065   */\n      dup4\n        /* \"#utility.yul\":3047:3054   */\n      dup6\n        /* \"#utility.yul\":3043:3066   */\n      sub\n        /* \"#utility.yul\":3039:3071   */\n      slt\n        /* \"#utility.yul\":3036:3088   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":3084:3085   */\n      0x00\n        /* \"#utility.yul\":3081:3082   */\n      dup1\n        /* \"#utility.yul\":3074:3086   */\n      revert\n        /* \"#utility.yul\":3036:3088   */\n    tag_408:\n      pop\n      pop\n        /* \"#utility.yul\":3107:3130   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3177:3179   */\n      0x20\n        /* \"#utility.yul\":3162:3180   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3149:3181   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2939:3187   */\n      jump\t// out\n        /* \"#utility.yul\":3192:3559   */\n    tag_384:\n        /* \"#utility.yul\":3255:3263   */\n      0x00\n        /* \"#utility.yul\":3265:3271   */\n      dup1\n        /* \"#utility.yul\":3319:3322   */\n      dup4\n        /* \"#utility.yul\":3312:3316   */\n      0x1f\n        /* \"#utility.yul\":3304:3310   */\n      dup5\n        /* \"#utility.yul\":3300:3317   */\n      add\n        /* \"#utility.yul\":3296:3323   */\n      slt\n        /* \"#utility.yul\":3286:3341   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":3337:3338   */\n      0x00\n        /* \"#utility.yul\":3334:3335   */\n      dup1\n        /* \"#utility.yul\":3327:3339   */\n      revert\n        /* \"#utility.yul\":3286:3341   */\n    tag_410:\n      pop\n        /* \"#utility.yul\":3360:3380   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":3403:3421   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3392:3422   */\n      dup2\n      gt\n        /* \"#utility.yul\":3389:3439   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":3435:3436   */\n      0x00\n        /* \"#utility.yul\":3432:3433   */\n      dup1\n        /* \"#utility.yul\":3425:3437   */\n      revert\n        /* \"#utility.yul\":3389:3439   */\n    tag_411:\n        /* \"#utility.yul\":3472:3476   */\n      0x20\n        /* \"#utility.yul\":3464:3470   */\n      dup4\n        /* \"#utility.yul\":3460:3477   */\n      add\n        /* \"#utility.yul\":3448:3477   */\n      swap2\n      pop\n        /* \"#utility.yul\":3532:3535   */\n      dup4\n        /* \"#utility.yul\":3525:3529   */\n      0x20\n        /* \"#utility.yul\":3515:3521   */\n      dup3\n        /* \"#utility.yul\":3512:3513   */\n      0x05\n        /* \"#utility.yul\":3508:3522   */\n      shl\n        /* \"#utility.yul\":3500:3506   */\n      dup6\n        /* \"#utility.yul\":3496:3523   */\n      add\n        /* \"#utility.yul\":3492:3530   */\n      add\n        /* \"#utility.yul\":3489:3536   */\n      gt\n        /* \"#utility.yul\":3486:3553   */\n      iszero\n      tag_412\n      jumpi\n        /* \"#utility.yul\":3549:3550   */\n      0x00\n        /* \"#utility.yul\":3546:3547   */\n      dup1\n        /* \"#utility.yul\":3539:3551   */\n      revert\n        /* \"#utility.yul\":3486:3553   */\n    tag_412:\n        /* \"#utility.yul\":3192:3559   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3564:4405   */\n    tag_97:\n        /* \"#utility.yul\":3695:3701   */\n      0x00\n        /* \"#utility.yul\":3703:3709   */\n      dup1\n        /* \"#utility.yul\":3711:3717   */\n      0x00\n        /* \"#utility.yul\":3719:3725   */\n      dup1\n        /* \"#utility.yul\":3727:3733   */\n      0x00\n        /* \"#utility.yul\":3780:3782   */\n      0x60\n        /* \"#utility.yul\":3768:3777   */\n      dup7\n        /* \"#utility.yul\":3759:3766   */\n      dup9\n        /* \"#utility.yul\":3755:3778   */\n      sub\n        /* \"#utility.yul\":3751:3783   */\n      slt\n        /* \"#utility.yul\":3748:3800   */\n      iszero\n      tag_414\n      jumpi\n        /* \"#utility.yul\":3796:3797   */\n      0x00\n        /* \"#utility.yul\":3793:3794   */\n      dup1\n        /* \"#utility.yul\":3786:3798   */\n      revert\n        /* \"#utility.yul\":3748:3800   */\n    tag_414:\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3819:3842   */\n      calldataload\n        /* \"#utility.yul\":3809:3842   */\n      swap5\n      pop\n        /* \"#utility.yul\":3893:3895   */\n      0x20\n        /* \"#utility.yul\":3882:3891   */\n      dup7\n        /* \"#utility.yul\":3878:3896   */\n      add\n        /* \"#utility.yul\":3865:3897   */\n      calldataload\n        /* \"#utility.yul\":3916:3934   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3957:3959   */\n      dup1\n        /* \"#utility.yul\":3949:3955   */\n      dup3\n        /* \"#utility.yul\":3946:3960   */\n      gt\n        /* \"#utility.yul\":3943:3977   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":3973:3974   */\n      0x00\n        /* \"#utility.yul\":3970:3971   */\n      dup1\n        /* \"#utility.yul\":3963:3975   */\n      revert\n        /* \"#utility.yul\":3943:3977   */\n    tag_415:\n        /* \"#utility.yul\":4012:4082   */\n      tag_416\n        /* \"#utility.yul\":4074:4081   */\n      dup10\n        /* \"#utility.yul\":4065:4071   */\n      dup4\n        /* \"#utility.yul\":4054:4063   */\n      dup11\n        /* \"#utility.yul\":4050:4072   */\n      add\n        /* \"#utility.yul\":4012:4082   */\n      tag_384\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":4101:4109   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":3986:4082   */\n      swap5\n      pop\n        /* \"#utility.yul\":4189:4191   */\n      0x40\n        /* \"#utility.yul\":4174:4192   */\n      dup9\n      add\n        /* \"#utility.yul\":4161:4193   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4205:4221   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4202:4238   */\n      iszero\n      tag_417\n      jumpi\n        /* \"#utility.yul\":4234:4235   */\n      0x00\n        /* \"#utility.yul\":4231:4232   */\n      dup1\n        /* \"#utility.yul\":4224:4236   */\n      revert\n        /* \"#utility.yul\":4202:4238   */\n    tag_417:\n      pop\n        /* \"#utility.yul\":4273:4345   */\n      tag_418\n        /* \"#utility.yul\":4337:4344   */\n      dup9\n        /* \"#utility.yul\":4326:4334   */\n      dup3\n        /* \"#utility.yul\":4315:4324   */\n      dup10\n        /* \"#utility.yul\":4311:4335   */\n      add\n        /* \"#utility.yul\":4273:4345   */\n      tag_384\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":3564:4405   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":4364:4372   */\n      swap3\n      swap5\n        /* \"#utility.yul\":4247:4345   */\n      swap4\n        /* \"#utility.yul\":3564:4405   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:5049   */\n    tag_105:\n        /* \"#utility.yul\":4524:4530   */\n      0x00\n        /* \"#utility.yul\":4532:4538   */\n      dup1\n        /* \"#utility.yul\":4540:4546   */\n      0x00\n        /* \"#utility.yul\":4548:4554   */\n      dup1\n        /* \"#utility.yul\":4556:4562   */\n      0x00\n        /* \"#utility.yul\":4609:4612   */\n      0xa0\n        /* \"#utility.yul\":4597:4606   */\n      dup7\n        /* \"#utility.yul\":4588:4595   */\n      dup9\n        /* \"#utility.yul\":4584:4607   */\n      sub\n        /* \"#utility.yul\":4580:4613   */\n      slt\n        /* \"#utility.yul\":4577:4630   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":4626:4627   */\n      0x00\n        /* \"#utility.yul\":4623:4624   */\n      dup1\n        /* \"#utility.yul\":4616:4628   */\n      revert\n        /* \"#utility.yul\":4577:4630   */\n    tag_420:\n        /* \"#utility.yul\":4665:4674   */\n      dup6\n        /* \"#utility.yul\":4652:4675   */\n      calldataload\n        /* \"#utility.yul\":4684:4715   */\n      tag_421\n        /* \"#utility.yul\":4709:4714   */\n      dup2\n        /* \"#utility.yul\":4684:4715   */\n      tag_383\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":4734:4739   */\n      swap5\n      pop\n        /* \"#utility.yul\":4786:4788   */\n      0x20\n        /* \"#utility.yul\":4771:4789   */\n      dup7\n      add\n        /* \"#utility.yul\":4758:4790   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":4837:4839   */\n      0x40\n        /* \"#utility.yul\":4822:4840   */\n      dup7\n      add\n        /* \"#utility.yul\":4809:4841   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":4893:4895   */\n      0x60\n        /* \"#utility.yul\":4878:4896   */\n      dup7\n      add\n        /* \"#utility.yul\":4865:4897   */\n      calldataload\n        /* \"#utility.yul\":4941:4945   */\n      0xff\n        /* \"#utility.yul\":4928:4946   */\n      dup2\n      and\n        /* \"#utility.yul\":4916:4947   */\n      dup2\n      eq\n        /* \"#utility.yul\":4906:4965   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":4961:4962   */\n      0x00\n        /* \"#utility.yul\":4958:4959   */\n      dup1\n        /* \"#utility.yul\":4951:4963   */\n      revert\n        /* \"#utility.yul\":4906:4965   */\n    tag_422:\n        /* \"#utility.yul\":4410:5049   */\n      swap5\n      swap8\n      swap4\n      swap7\n      pop\n      swap2\n      swap5\n        /* \"#utility.yul\":5038:5041   */\n      0x80\n        /* \"#utility.yul\":5023:5042   */\n      add\n        /* \"#utility.yul\":5010:5043   */\n      calldataload\n      swap3\n        /* \"#utility.yul\":4410:5049   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5054:5602   */\n    tag_123:\n        /* \"#utility.yul\":5166:5170   */\n      0x00\n        /* \"#utility.yul\":5195:5197   */\n      0x20\n        /* \"#utility.yul\":5224:5226   */\n      dup1\n        /* \"#utility.yul\":5213:5222   */\n      dup4\n        /* \"#utility.yul\":5206:5227   */\n      mstore\n        /* \"#utility.yul\":5256:5262   */\n      dup4\n        /* \"#utility.yul\":5250:5263   */\n      mload\n        /* \"#utility.yul\":5299:5305   */\n      dup1\n        /* \"#utility.yul\":5294:5296   */\n      0x20\n        /* \"#utility.yul\":5283:5292   */\n      dup6\n        /* \"#utility.yul\":5279:5297   */\n      add\n        /* \"#utility.yul\":5272:5306   */\n      mstore\n        /* \"#utility.yul\":5324:5325   */\n      0x00\n        /* \"#utility.yul\":5334:5474   */\n    tag_424:\n        /* \"#utility.yul\":5348:5354   */\n      dup2\n        /* \"#utility.yul\":5345:5346   */\n      dup2\n        /* \"#utility.yul\":5342:5355   */\n      lt\n        /* \"#utility.yul\":5334:5474   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":5443:5457   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":5439:5462   */\n      dup4\n      add\n        /* \"#utility.yul\":5433:5463   */\n      mload\n        /* \"#utility.yul\":5409:5426   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":5428:5430   */\n      0x40\n        /* \"#utility.yul\":5405:5431   */\n      add\n        /* \"#utility.yul\":5398:5464   */\n      mstore\n        /* \"#utility.yul\":5363:5373   */\n      dup3\n      add\n        /* \"#utility.yul\":5334:5474   */\n      jump(tag_424)\n    tag_426:\n        /* \"#utility.yul\":5338:5341   */\n      pop\n        /* \"#utility.yul\":5523:5524   */\n      0x00\n        /* \"#utility.yul\":5518:5520   */\n      0x40\n        /* \"#utility.yul\":5509:5515   */\n      dup3\n        /* \"#utility.yul\":5498:5507   */\n      dup7\n        /* \"#utility.yul\":5494:5516   */\n      add\n        /* \"#utility.yul\":5490:5521   */\n      add\n        /* \"#utility.yul\":5483:5525   */\n      mstore\n        /* \"#utility.yul\":5593:5595   */\n      0x40\n        /* \"#utility.yul\":5586:5588   */\n      0x1f\n        /* \"#utility.yul\":5582:5589   */\n      not\n        /* \"#utility.yul\":5577:5579   */\n      0x1f\n        /* \"#utility.yul\":5569:5575   */\n      dup4\n        /* \"#utility.yul\":5565:5580   */\n      add\n        /* \"#utility.yul\":5561:5590   */\n      and\n        /* \"#utility.yul\":5550:5559   */\n      dup6\n        /* \"#utility.yul\":5546:5591   */\n      add\n        /* \"#utility.yul\":5542:5596   */\n      add\n        /* \"#utility.yul\":5534:5596   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5054:5602   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5838:6022   */\n    tag_133:\n        /* \"#utility.yul\":5908:5914   */\n      0x00\n        /* \"#utility.yul\":5961:5963   */\n      0x20\n        /* \"#utility.yul\":5949:5958   */\n      dup3\n        /* \"#utility.yul\":5940:5947   */\n      dup5\n        /* \"#utility.yul\":5936:5959   */\n      sub\n        /* \"#utility.yul\":5932:5964   */\n      slt\n        /* \"#utility.yul\":5929:5981   */\n      iszero\n      tag_429\n      jumpi\n        /* \"#utility.yul\":5977:5978   */\n      0x00\n        /* \"#utility.yul\":5974:5975   */\n      dup1\n        /* \"#utility.yul\":5967:5979   */\n      revert\n        /* \"#utility.yul\":5929:5981   */\n    tag_429:\n      pop\n        /* \"#utility.yul\":6000:6016   */\n      mload\n      swap2\n        /* \"#utility.yul\":5838:6022   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6027:6211   */\n    tag_385:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6076:6077   */\n      0x00\n        /* \"#utility.yul\":6069:6157   */\n      mstore\n        /* \"#utility.yul\":6176:6180   */\n      0x11\n        /* \"#utility.yul\":6173:6174   */\n      0x04\n        /* \"#utility.yul\":6166:6181   */\n      mstore\n        /* \"#utility.yul\":6200:6204   */\n      0x24\n        /* \"#utility.yul\":6197:6198   */\n      0x00\n        /* \"#utility.yul\":6190:6205   */\n      revert\n        /* \"#utility.yul\":6216:6341   */\n    tag_147:\n        /* \"#utility.yul\":6281:6290   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6302:6312   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6299:6335   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":6315:6333   */\n      tag_127\n      tag_385\n      jump\t// in\n        /* \"#utility.yul\":6691:6859   */\n    tag_182:\n        /* \"#utility.yul\":6764:6773   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":6795:6804   */\n      dup2\n      iszero\n        /* \"#utility.yul\":6812:6827   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":6806:6828   */\n      dup5\n      eq\n        /* \"#utility.yul\":6792:6829   */\n      or\n        /* \"#utility.yul\":6782:6853   */\n      tag_127\n      jumpi\n        /* \"#utility.yul\":6833:6851   */\n      tag_127\n      tag_385\n      jump\t// in\n        /* \"#utility.yul\":6864:7138   */\n    tag_184:\n        /* \"#utility.yul\":6904:6905   */\n      0x00\n        /* \"#utility.yul\":6930:6931   */\n      dup3\n        /* \"#utility.yul\":6920:7109   */\n      tag_439\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":6962:6963   */\n      0x00\n        /* \"#utility.yul\":6955:7043   */\n      mstore\n        /* \"#utility.yul\":7066:7070   */\n      0x12\n        /* \"#utility.yul\":7063:7064   */\n      0x04\n        /* \"#utility.yul\":7056:7071   */\n      mstore\n        /* \"#utility.yul\":7094:7098   */\n      0x24\n        /* \"#utility.yul\":7091:7092   */\n      0x00\n        /* \"#utility.yul\":7084:7099   */\n      revert\n        /* \"#utility.yul\":6920:7109   */\n    tag_439:\n      pop\n        /* \"#utility.yul\":7123:7132   */\n      div\n      swap1\n        /* \"#utility.yul\":6864:7138   */\n      jump\t// out\n        /* \"#utility.yul\":7143:7271   */\n    tag_186:\n        /* \"#utility.yul\":7210:7219   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7231:7242   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7228:7265   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":7245:7263   */\n      tag_127\n      tag_385\n      jump\t// in\n        /* \"#utility.yul\":7578:7855   */\n    tag_196:\n        /* \"#utility.yul\":7645:7651   */\n      0x00\n        /* \"#utility.yul\":7698:7700   */\n      0x20\n        /* \"#utility.yul\":7686:7695   */\n      dup3\n        /* \"#utility.yul\":7677:7684   */\n      dup5\n        /* \"#utility.yul\":7673:7696   */\n      sub\n        /* \"#utility.yul\":7669:7701   */\n      slt\n        /* \"#utility.yul\":7666:7718   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":7714:7715   */\n      0x00\n        /* \"#utility.yul\":7711:7712   */\n      dup1\n        /* \"#utility.yul\":7704:7716   */\n      revert\n        /* \"#utility.yul\":7666:7718   */\n    tag_445:\n        /* \"#utility.yul\":7746:7755   */\n      dup2\n        /* \"#utility.yul\":7740:7756   */\n      mload\n        /* \"#utility.yul\":7799:7804   */\n      dup1\n        /* \"#utility.yul\":7792:7805   */\n      iszero\n        /* \"#utility.yul\":7785:7806   */\n      iszero\n        /* \"#utility.yul\":7778:7783   */\n      dup2\n        /* \"#utility.yul\":7775:7807   */\n      eq\n        /* \"#utility.yul\":7765:7825   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":7821:7822   */\n      0x00\n        /* \"#utility.yul\":7818:7819   */\n      dup1\n        /* \"#utility.yul\":7811:7823   */\n      revert\n        /* \"#utility.yul\":9253:9437   */\n    tag_237:\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":9302:9303   */\n      0x00\n        /* \"#utility.yul\":9295:9383   */\n      mstore\n        /* \"#utility.yul\":9402:9406   */\n      0x32\n        /* \"#utility.yul\":9399:9400   */\n      0x04\n        /* \"#utility.yul\":9392:9407   */\n      mstore\n        /* \"#utility.yul\":9426:9430   */\n      0x24\n        /* \"#utility.yul\":9423:9424   */\n      0x00\n        /* \"#utility.yul\":9416:9431   */\n      revert\n        /* \"#utility.yul\":9442:9689   */\n    tag_239:\n        /* \"#utility.yul\":9501:9507   */\n      0x00\n        /* \"#utility.yul\":9554:9556   */\n      0x20\n        /* \"#utility.yul\":9542:9551   */\n      dup3\n        /* \"#utility.yul\":9533:9540   */\n      dup5\n        /* \"#utility.yul\":9529:9552   */\n      sub\n        /* \"#utility.yul\":9525:9557   */\n      slt\n        /* \"#utility.yul\":9522:9574   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":9570:9571   */\n      0x00\n        /* \"#utility.yul\":9567:9568   */\n      dup1\n        /* \"#utility.yul\":9560:9572   */\n      revert\n        /* \"#utility.yul\":9522:9574   */\n    tag_453:\n        /* \"#utility.yul\":9609:9618   */\n      dup2\n        /* \"#utility.yul\":9596:9619   */\n      calldataload\n        /* \"#utility.yul\":9628:9659   */\n      tag_395\n        /* \"#utility.yul\":9653:9658   */\n      dup2\n        /* \"#utility.yul\":9628:9659   */\n      tag_383\n      jump\t// in\n        /* \"#utility.yul\":12135:12270   */\n    tag_311:\n        /* \"#utility.yul\":12174:12177   */\n      0x00\n        /* \"#utility.yul\":12195:12212   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":12192:12235   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":12215:12233   */\n      tag_464\n      tag_385\n      jump\t// in\n    tag_464:\n      pop\n        /* \"#utility.yul\":12262:12263   */\n      0x01\n        /* \"#utility.yul\":12251:12264   */\n      add\n      swap1\n        /* \"#utility.yul\":12135:12270   */\n      jump\t// out\n        /* \"#utility.yul\":12275:12450   */\n    tag_313:\n        /* \"#utility.yul\":12312:12315   */\n      0x00\n        /* \"#utility.yul\":12356:12360   */\n      0xff\n        /* \"#utility.yul\":12349:12354   */\n      dup3\n        /* \"#utility.yul\":12345:12361   */\n      and\n        /* \"#utility.yul\":12385:12389   */\n      0xff\n        /* \"#utility.yul\":12376:12383   */\n      dup2\n        /* \"#utility.yul\":12373:12390   */\n      sub\n        /* \"#utility.yul\":12370:12413   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":12393:12411   */\n      tag_467\n      tag_385\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":12442:12443   */\n      0x01\n        /* \"#utility.yul\":12429:12444   */\n      add\n      swap3\n        /* \"#utility.yul\":12275:12450   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12716:13153   */\n    tag_322:\n        /* \"#utility.yul\":12795:12796   */\n      0x01\n        /* \"#utility.yul\":12791:12803   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12838:12850   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12859:12920   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":12913:12917   */\n      0x7f\n        /* \"#utility.yul\":12905:12911   */\n      dup3\n        /* \"#utility.yul\":12901:12918   */\n      and\n        /* \"#utility.yul\":12891:12918   */\n      swap2\n      pop\n        /* \"#utility.yul\":12859:12920   */\n    tag_470:\n        /* \"#utility.yul\":12966:12968   */\n      0x20\n        /* \"#utility.yul\":12958:12964   */\n      dup3\n        /* \"#utility.yul\":12955:12969   */\n      lt\n        /* \"#utility.yul\":12935:12953   */\n      dup2\n        /* \"#utility.yul\":12932:12970   */\n      sub\n        /* \"#utility.yul\":12929:13147   */\n      tag_370\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":13000:13001   */\n      0x00\n        /* \"#utility.yul\":12993:13081   */\n      mstore\n        /* \"#utility.yul\":13104:13108   */\n      0x22\n        /* \"#utility.yul\":13101:13102   */\n      0x04\n        /* \"#utility.yul\":13094:13109   */\n      mstore\n        /* \"#utility.yul\":13132:13136   */\n      0x24\n        /* \"#utility.yul\":13129:13130   */\n      0x00\n        /* \"#utility.yul\":13122:13137   */\n      revert\n\n    auxdata: 0xa26469706673582212203fda974b9d73d244202ae7c03d275c28f0c0156d9039d135031062fadbd523fb64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1421": {
									"entryPoint": null,
									"id": 1421,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 151,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$1108t_string_memory_ptr_fromMemory": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 654,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 594,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3952:12",
										"nodeType": "YulBlock",
										"src": "0:3952:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:12",
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:12",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:12",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:12",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nativeSrc": "66:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nativeSrc": "56:31:12",
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nativeSrc": "56:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nativeSrc": "96:15:12",
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nativeSrc": "96:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:12",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:15:12",
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nativeSrc": "120:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nativeSrc": "269:1101:12",
													"nodeType": "YulBlock",
													"src": "269:1101:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "315:16:12",
																"nodeType": "YulBlock",
																"src": "315:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "324:1:12",
																					"nodeType": "YulLiteral",
																					"src": "324:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "327:1:12",
																					"nodeType": "YulLiteral",
																					"src": "327:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "317:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "317:6:12"
																			},
																			"nativeSrc": "317:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "317:12:12"
																		},
																		"nativeSrc": "317:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "317:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "290:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "290:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "299:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "299:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "286:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "286:3:12"
																		},
																		"nativeSrc": "286:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "286:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "311:2:12",
																		"nodeType": "YulLiteral",
																		"src": "311:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "282:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "282:3:12"
																},
																"nativeSrc": "282:32:12",
																"nodeType": "YulFunctionCall",
																"src": "282:32:12"
															},
															"nativeSrc": "279:52:12",
															"nodeType": "YulIf",
															"src": "279:52:12"
														},
														{
															"nativeSrc": "340:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "340:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "359:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "359:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "353:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "353:5:12"
																},
																"nativeSrc": "353:16:12",
																"nodeType": "YulFunctionCall",
																"src": "353:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "344:5:12",
																	"nodeType": "YulTypedName",
																	"src": "344:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "432:16:12",
																"nodeType": "YulBlock",
																"src": "432:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "441:1:12",
																					"nodeType": "YulLiteral",
																					"src": "441:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "444:1:12",
																					"nodeType": "YulLiteral",
																					"src": "444:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "434:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "434:6:12"
																			},
																			"nativeSrc": "434:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "434:12:12"
																		},
																		"nativeSrc": "434:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "434:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "391:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "391:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "402:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "402:5:12"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "417:3:12",
																										"nodeType": "YulLiteral",
																										"src": "417:3:12",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "422:1:12",
																										"nodeType": "YulLiteral",
																										"src": "422:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "413:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "413:3:12"
																								},
																								"nativeSrc": "413:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "413:11:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "426:1:12",
																								"nodeType": "YulLiteral",
																								"src": "426:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "409:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "409:3:12"
																						},
																						"nativeSrc": "409:19:12",
																						"nodeType": "YulFunctionCall",
																						"src": "409:19:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "398:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "398:3:12"
																				},
																				"nativeSrc": "398:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "398:31:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "388:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "388:2:12"
																		},
																		"nativeSrc": "388:42:12",
																		"nodeType": "YulFunctionCall",
																		"src": "388:42:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "381:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "381:6:12"
																},
																"nativeSrc": "381:50:12",
																"nodeType": "YulFunctionCall",
																"src": "381:50:12"
															},
															"nativeSrc": "378:70:12",
															"nodeType": "YulIf",
															"src": "378:70:12"
														},
														{
															"nativeSrc": "457:15:12",
															"nodeType": "YulAssignment",
															"src": "457:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "467:5:12",
																"nodeType": "YulIdentifier",
																"src": "467:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "457:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:12"
																}
															]
														},
														{
															"nativeSrc": "481:12:12",
															"nodeType": "YulVariableDeclaration",
															"src": "481:12:12",
															"value": {
																"kind": "number",
																"nativeSrc": "491:2:12",
																"nodeType": "YulLiteral",
																"src": "491:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "485:2:12",
																	"nodeType": "YulTypedName",
																	"src": "485:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "502:39:12",
															"nodeType": "YulVariableDeclaration",
															"src": "502:39:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "526:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "526:9:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "537:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "537:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "522:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "522:3:12"
																		},
																		"nativeSrc": "522:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "522:18:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "516:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "516:5:12"
																},
																"nativeSrc": "516:25:12",
																"nodeType": "YulFunctionCall",
																"src": "516:25:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "506:6:12",
																	"nodeType": "YulTypedName",
																	"src": "506:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "550:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "550:28:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "568:2:12",
																				"nodeType": "YulLiteral",
																				"src": "568:2:12",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "572:1:12",
																				"nodeType": "YulLiteral",
																				"src": "572:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:12"
																		},
																		"nativeSrc": "564:10:12",
																		"nodeType": "YulFunctionCall",
																		"src": "564:10:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "576:1:12",
																		"nodeType": "YulLiteral",
																		"src": "576:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "560:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "560:3:12"
																},
																"nativeSrc": "560:18:12",
																"nodeType": "YulFunctionCall",
																"src": "560:18:12"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "554:2:12",
																	"nodeType": "YulTypedName",
																	"src": "554:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "605:16:12",
																"nodeType": "YulBlock",
																"src": "605:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "614:1:12",
																					"nodeType": "YulLiteral",
																					"src": "614:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "617:1:12",
																					"nodeType": "YulLiteral",
																					"src": "617:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "607:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "607:6:12"
																			},
																			"nativeSrc": "607:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "607:12:12"
																		},
																		"nativeSrc": "607:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "607:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "593:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "593:6:12"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "601:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "601:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "590:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "590:2:12"
																},
																"nativeSrc": "590:14:12",
																"nodeType": "YulFunctionCall",
																"src": "590:14:12"
															},
															"nativeSrc": "587:34:12",
															"nodeType": "YulIf",
															"src": "587:34:12"
														},
														{
															"nativeSrc": "630:32:12",
															"nodeType": "YulVariableDeclaration",
															"src": "630:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "644:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "644:9:12"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "655:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "655:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "640:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "640:3:12"
																},
																"nativeSrc": "640:22:12",
																"nodeType": "YulFunctionCall",
																"src": "640:22:12"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "634:2:12",
																	"nodeType": "YulTypedName",
																	"src": "634:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "710:16:12",
																"nodeType": "YulBlock",
																"src": "710:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "719:1:12",
																					"nodeType": "YulLiteral",
																					"src": "719:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:12",
																					"nodeType": "YulLiteral",
																					"src": "722:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "712:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "712:6:12"
																			},
																			"nativeSrc": "712:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "712:12:12"
																		},
																		"nativeSrc": "712:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "712:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "689:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "689:2:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "693:4:12",
																						"nodeType": "YulLiteral",
																						"src": "693:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "685:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "685:3:12"
																				},
																				"nativeSrc": "685:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "685:13:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "700:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "700:7:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "681:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "681:3:12"
																		},
																		"nativeSrc": "681:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "681:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "674:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "674:6:12"
																},
																"nativeSrc": "674:35:12",
																"nodeType": "YulFunctionCall",
																"src": "674:35:12"
															},
															"nativeSrc": "671:55:12",
															"nodeType": "YulIf",
															"src": "671:55:12"
														},
														{
															"nativeSrc": "735:19:12",
															"nodeType": "YulVariableDeclaration",
															"src": "735:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "751:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "751:2:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "745:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "745:5:12"
																},
																"nativeSrc": "745:9:12",
																"nodeType": "YulFunctionCall",
																"src": "745:9:12"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "739:2:12",
																	"nodeType": "YulTypedName",
																	"src": "739:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "777:22:12",
																"nodeType": "YulBlock",
																"src": "777:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "779:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "779:16:12"
																			},
																			"nativeSrc": "779:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "779:18:12"
																		},
																		"nativeSrc": "779:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "779:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nativeSrc": "769:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "769:2:12"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "773:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "773:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "766:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "766:2:12"
																},
																"nativeSrc": "766:10:12",
																"nodeType": "YulFunctionCall",
																"src": "766:10:12"
															},
															"nativeSrc": "763:36:12",
															"nodeType": "YulIf",
															"src": "763:36:12"
														},
														{
															"nativeSrc": "808:17:12",
															"nodeType": "YulVariableDeclaration",
															"src": "808:17:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "822:2:12",
																		"nodeType": "YulLiteral",
																		"src": "822:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "818:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "818:3:12"
																},
																"nativeSrc": "818:7:12",
																"nodeType": "YulFunctionCall",
																"src": "818:7:12"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "812:2:12",
																	"nodeType": "YulTypedName",
																	"src": "812:2:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "834:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "834:23:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:2:12",
																		"nodeType": "YulLiteral",
																		"src": "854:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "848:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:12"
																},
																"nativeSrc": "848:9:12",
																"nodeType": "YulFunctionCall",
																"src": "848:9:12"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "838:6:12",
																	"nodeType": "YulTypedName",
																	"src": "838:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "866:71:12",
															"nodeType": "YulVariableDeclaration",
															"src": "866:71:12",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "888:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "888:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nativeSrc": "912:2:12",
																										"nodeType": "YulIdentifier",
																										"src": "912:2:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "916:4:12",
																										"nodeType": "YulLiteral",
																										"src": "916:4:12",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "908:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "908:3:12"
																								},
																								"nativeSrc": "908:13:12",
																								"nodeType": "YulFunctionCall",
																								"src": "908:13:12"
																							},
																							{
																								"name": "_5",
																								"nativeSrc": "923:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "923:2:12"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "904:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "904:3:12"
																						},
																						"nativeSrc": "904:22:12",
																						"nodeType": "YulFunctionCall",
																						"src": "904:22:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "928:2:12",
																						"nodeType": "YulLiteral",
																						"src": "928:2:12",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "900:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "900:3:12"
																				},
																				"nativeSrc": "900:31:12",
																				"nodeType": "YulFunctionCall",
																				"src": "900:31:12"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "933:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "933:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "896:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "896:3:12"
																		},
																		"nativeSrc": "896:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "896:40:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "884:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "884:3:12"
																},
																"nativeSrc": "884:53:12",
																"nodeType": "YulFunctionCall",
																"src": "884:53:12"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "870:10:12",
																	"nodeType": "YulTypedName",
																	"src": "870:10:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "996:22:12",
																"nodeType": "YulBlock",
																"src": "996:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "998:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "998:16:12"
																			},
																			"nativeSrc": "998:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "998:18:12"
																		},
																		"nativeSrc": "998:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "998:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "955:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "955:10:12"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "967:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "967:2:12"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "952:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "952:2:12"
																		},
																		"nativeSrc": "952:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "952:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "975:10:12",
																				"nodeType": "YulIdentifier",
																				"src": "975:10:12"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "987:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "987:6:12"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "972:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "972:2:12"
																		},
																		"nativeSrc": "972:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "972:22:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "949:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "949:2:12"
																},
																"nativeSrc": "949:46:12",
																"nodeType": "YulFunctionCall",
																"src": "949:46:12"
															},
															"nativeSrc": "946:72:12",
															"nodeType": "YulIf",
															"src": "946:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1034:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1034:2:12",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1038:10:12",
																		"nodeType": "YulIdentifier",
																		"src": "1038:10:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1027:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1027:6:12"
																},
																"nativeSrc": "1027:22:12",
																"nodeType": "YulFunctionCall",
																"src": "1027:22:12"
															},
															"nativeSrc": "1027:22:12",
															"nodeType": "YulExpressionStatement",
															"src": "1027:22:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1065:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1065:6:12"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "1073:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1073:2:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1058:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:12"
																},
																"nativeSrc": "1058:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1058:18:12"
															},
															"nativeSrc": "1058:18:12",
															"nodeType": "YulExpressionStatement",
															"src": "1058:18:12"
														},
														{
															"body": {
																"nativeSrc": "1122:16:12",
																"nodeType": "YulBlock",
																"src": "1122:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1131:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1131:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1134:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1134:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1124:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1124:6:12"
																			},
																			"nativeSrc": "1124:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1124:12:12"
																		},
																		"nativeSrc": "1124:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1124:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nativeSrc": "1099:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1099:2:12"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "1103:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1103:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1095:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1095:3:12"
																				},
																				"nativeSrc": "1095:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1095:11:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1108:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1108:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1091:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:12"
																		},
																		"nativeSrc": "1091:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1091:20:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1113:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "1113:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1088:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1088:2:12"
																},
																"nativeSrc": "1088:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1088:33:12"
															},
															"nativeSrc": "1085:53:12",
															"nodeType": "YulIf",
															"src": "1085:53:12"
														},
														{
															"nativeSrc": "1147:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1147:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1156:1:12",
																"nodeType": "YulLiteral",
																"src": "1156:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1151:1:12",
																	"nodeType": "YulTypedName",
																	"src": "1151:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1212:83:12",
																"nodeType": "YulBlock",
																"src": "1212:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "1241:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "1241:6:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1249:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1249:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1237:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1237:3:12"
																							},
																							"nativeSrc": "1237:14:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1237:14:12"
																						},
																						{
																							"name": "_1",
																							"nativeSrc": "1253:2:12",
																							"nodeType": "YulIdentifier",
																							"src": "1253:2:12"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1233:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1233:3:12"
																					},
																					"nativeSrc": "1233:23:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1233:23:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nativeSrc": "1272:2:12",
																											"nodeType": "YulIdentifier",
																											"src": "1272:2:12"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "1276:1:12",
																											"nodeType": "YulIdentifier",
																											"src": "1276:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "1268:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1268:3:12"
																									},
																									"nativeSrc": "1268:10:12",
																									"nodeType": "YulFunctionCall",
																									"src": "1268:10:12"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "1280:2:12",
																									"nodeType": "YulIdentifier",
																									"src": "1280:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1264:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1264:3:12"
																							},
																							"nativeSrc": "1264:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1264:19:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1258:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1258:5:12"
																					},
																					"nativeSrc": "1258:26:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1258:26:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1226:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1226:6:12"
																			},
																			"nativeSrc": "1226:59:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1226:59:12"
																		},
																		"nativeSrc": "1226:59:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1226:59:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1177:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "1177:1:12"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "1180:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "1180:2:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1174:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1174:2:12"
																},
																"nativeSrc": "1174:9:12",
																"nodeType": "YulFunctionCall",
																"src": "1174:9:12"
															},
															"nativeSrc": "1166:129:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1184:19:12",
																"nodeType": "YulBlock",
																"src": "1184:19:12",
																"statements": [
																	{
																		"nativeSrc": "1186:15:12",
																		"nodeType": "YulAssignment",
																		"src": "1186:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1195:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "1195:1:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "1198:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1198:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1191:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1191:3:12"
																			},
																			"nativeSrc": "1191:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1191:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1186:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "1186:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1170:3:12",
																"nodeType": "YulBlock",
																"src": "1170:3:12",
																"statements": []
															},
															"src": "1166:129:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "1319:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1319:6:12"
																					},
																					{
																						"name": "_4",
																						"nativeSrc": "1327:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1327:2:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1315:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1315:3:12"
																				},
																				"nativeSrc": "1315:15:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1315:15:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "1332:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1332:2:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:12"
																		},
																		"nativeSrc": "1311:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:24:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1337:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1337:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1304:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1304:6:12"
																},
																"nativeSrc": "1304:35:12",
																"nodeType": "YulFunctionCall",
																"src": "1304:35:12"
															},
															"nativeSrc": "1304:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "1304:35:12"
														},
														{
															"nativeSrc": "1348:16:12",
															"nodeType": "YulAssignment",
															"src": "1348:16:12",
															"value": {
																"name": "memPtr",
																"nativeSrc": "1358:6:12",
																"nodeType": "YulIdentifier",
																"src": "1358:6:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1348:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1348:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$1108t_string_memory_ptr_fromMemory",
												"nativeSrc": "146:1224:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "227:9:12",
														"nodeType": "YulTypedName",
														"src": "227:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "238:7:12",
														"nodeType": "YulTypedName",
														"src": "238:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "250:6:12",
														"nodeType": "YulTypedName",
														"src": "250:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "258:6:12",
														"nodeType": "YulTypedName",
														"src": "258:6:12",
														"type": ""
													}
												],
												"src": "146:1224:12"
											},
											{
												"body": {
													"nativeSrc": "1430:325:12",
													"nodeType": "YulBlock",
													"src": "1430:325:12",
													"statements": [
														{
															"nativeSrc": "1440:22:12",
															"nodeType": "YulAssignment",
															"src": "1440:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1454:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1454:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1457:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1457:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1450:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1450:3:12"
																},
																"nativeSrc": "1450:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1450:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:6:12"
																}
															]
														},
														{
															"nativeSrc": "1471:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1471:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1501:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1501:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1507:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1507:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1497:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1497:3:12"
																},
																"nativeSrc": "1497:12:12",
																"nodeType": "YulFunctionCall",
																"src": "1497:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1475:18:12",
																	"nodeType": "YulTypedName",
																	"src": "1475:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1548:31:12",
																"nodeType": "YulBlock",
																"src": "1548:31:12",
																"statements": [
																	{
																		"nativeSrc": "1550:27:12",
																		"nodeType": "YulAssignment",
																		"src": "1550:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1564:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1564:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1572:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1572:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1560:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1560:3:12"
																			},
																			"nativeSrc": "1560:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1560:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1550:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1550:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1528:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1528:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1521:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1521:6:12"
																},
																"nativeSrc": "1521:26:12",
																"nodeType": "YulFunctionCall",
																"src": "1521:26:12"
															},
															"nativeSrc": "1518:61:12",
															"nodeType": "YulIf",
															"src": "1518:61:12"
														},
														{
															"body": {
																"nativeSrc": "1638:111:12",
																"nodeType": "YulBlock",
																"src": "1638:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1659:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1659:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1666:3:12",
																							"nodeType": "YulLiteral",
																							"src": "1666:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1671:10:12",
																							"nodeType": "YulLiteral",
																							"src": "1671:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1662:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1662:3:12"
																					},
																					"nativeSrc": "1662:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1662:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1652:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:12"
																			},
																			"nativeSrc": "1652:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1652:31:12"
																		},
																		"nativeSrc": "1652:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1652:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1703:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1703:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1706:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1706:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1696:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1696:6:12"
																			},
																			"nativeSrc": "1696:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1696:15:12"
																		},
																		"nativeSrc": "1696:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1696:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1731:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1731:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1734:4:12",
																					"nodeType": "YulLiteral",
																					"src": "1734:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1724:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1724:6:12"
																			},
																			"nativeSrc": "1724:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1724:15:12"
																		},
																		"nativeSrc": "1724:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1724:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1594:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "1594:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1617:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1617:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1625:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1625:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1614:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1614:2:12"
																		},
																		"nativeSrc": "1614:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1614:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1591:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1591:2:12"
																},
																"nativeSrc": "1591:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1591:38:12"
															},
															"nativeSrc": "1588:161:12",
															"nodeType": "YulIf",
															"src": "1588:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1375:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1410:4:12",
														"nodeType": "YulTypedName",
														"src": "1410:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1419:6:12",
														"nodeType": "YulTypedName",
														"src": "1419:6:12",
														"type": ""
													}
												],
												"src": "1375:380:12"
											},
											{
												"body": {
													"nativeSrc": "1816:65:12",
													"nodeType": "YulBlock",
													"src": "1816:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1833:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1833:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1836:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1836:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1826:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1826:6:12"
																},
																"nativeSrc": "1826:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1826:14:12"
															},
															"nativeSrc": "1826:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "1826:14:12"
														},
														{
															"nativeSrc": "1849:26:12",
															"nodeType": "YulAssignment",
															"src": "1849:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1867:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1870:4:12",
																		"nodeType": "YulLiteral",
																		"src": "1870:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1857:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1857:9:12"
																},
																"nativeSrc": "1857:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1857:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1849:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1849:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1760:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1799:3:12",
														"nodeType": "YulTypedName",
														"src": "1799:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1807:4:12",
														"nodeType": "YulTypedName",
														"src": "1807:4:12",
														"type": ""
													}
												],
												"src": "1760:121:12"
											},
											{
												"body": {
													"nativeSrc": "1967:462:12",
													"nodeType": "YulBlock",
													"src": "1967:462:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2000:423:12",
																"nodeType": "YulBlock",
																"src": "2000:423:12",
																"statements": [
																	{
																		"nativeSrc": "2014:11:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2014:11:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "2024:1:12",
																			"nodeType": "YulLiteral",
																			"src": "2024:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2018:2:12",
																				"nodeType": "YulTypedName",
																				"src": "2018:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2045:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2045:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2048:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2048:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2038:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2038:6:12"
																			},
																			"nativeSrc": "2038:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2038:16:12"
																		},
																		"nativeSrc": "2038:16:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2038:16:12"
																	},
																	{
																		"nativeSrc": "2067:30:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2067:30:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2089:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2089:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2092:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2092:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2079:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2079:9:12"
																			},
																			"nativeSrc": "2079:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2079:18:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2071:4:12",
																				"nodeType": "YulTypedName",
																				"src": "2071:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2110:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2110:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2133:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "2133:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2143:1:12",
																							"nodeType": "YulLiteral",
																							"src": "2143:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2150:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "2150:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2162:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2162:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2146:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2146:3:12"
																							},
																							"nativeSrc": "2146:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2146:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2139:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2139:3:12"
																					},
																					"nativeSrc": "2139:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2139:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2129:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2129:3:12"
																			},
																			"nativeSrc": "2129:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2129:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2114:11:12",
																				"nodeType": "YulTypedName",
																				"src": "2114:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2204:23:12",
																			"nodeType": "YulBlock",
																			"src": "2204:23:12",
																			"statements": [
																				{
																					"nativeSrc": "2206:19:12",
																					"nodeType": "YulAssignment",
																					"src": "2206:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2221:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2221:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2206:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "2206:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2186:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "2186:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:4:12",
																					"nodeType": "YulLiteral",
																					"src": "2198:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2183:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2183:2:12"
																			},
																			"nativeSrc": "2183:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2183:20:12"
																		},
																		"nativeSrc": "2180:47:12",
																		"nodeType": "YulIf",
																		"src": "2180:47:12"
																	},
																	{
																		"nativeSrc": "2240:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2240:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2254:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "2254:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2264:1:12",
																							"nodeType": "YulLiteral",
																							"src": "2264:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2271:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2271:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2276:2:12",
																									"nodeType": "YulLiteral",
																									"src": "2276:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2267:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2267:3:12"
																							},
																							"nativeSrc": "2267:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2267:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2260:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "2260:3:12"
																					},
																					"nativeSrc": "2260:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2260:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2250:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2250:3:12"
																			},
																			"nativeSrc": "2250:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2250:31:12"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "2244:2:12",
																				"nodeType": "YulTypedName",
																				"src": "2244:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2294:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2294:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2307:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "2307:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2298:5:12",
																				"nodeType": "YulTypedName",
																				"src": "2298:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2392:21:12",
																			"nodeType": "YulBlock",
																			"src": "2392:21:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2401:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2401:5:12"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "2408:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "2408:2:12"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2394:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2394:6:12"
																						},
																						"nativeSrc": "2394:17:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2394:17:12"
																					},
																					"nativeSrc": "2394:17:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "2394:17:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2342:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2342:5:12"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "2349:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "2349:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2339:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "2339:2:12"
																			},
																			"nativeSrc": "2339:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2339:13:12"
																		},
																		"nativeSrc": "2331:82:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2353:26:12",
																			"nodeType": "YulBlock",
																			"src": "2353:26:12",
																			"statements": [
																				{
																					"nativeSrc": "2355:22:12",
																					"nodeType": "YulAssignment",
																					"src": "2355:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2368:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "2368:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2375:1:12",
																								"nodeType": "YulLiteral",
																								"src": "2375:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2364:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2364:3:12"
																						},
																						"nativeSrc": "2364:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2364:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2355:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "2355:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2335:3:12",
																			"nodeType": "YulBlock",
																			"src": "2335:3:12",
																			"statements": []
																		},
																		"src": "2331:82:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "1983:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1983:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1988:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1988:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1980:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1980:2:12"
																},
																"nativeSrc": "1980:11:12",
																"nodeType": "YulFunctionCall",
																"src": "1980:11:12"
															},
															"nativeSrc": "1977:446:12",
															"nodeType": "YulIf",
															"src": "1977:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1886:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "1939:5:12",
														"nodeType": "YulTypedName",
														"src": "1939:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1946:3:12",
														"nodeType": "YulTypedName",
														"src": "1946:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "1951:10:12",
														"nodeType": "YulTypedName",
														"src": "1951:10:12",
														"type": ""
													}
												],
												"src": "1886:543:12"
											},
											{
												"body": {
													"nativeSrc": "2519:81:12",
													"nodeType": "YulBlock",
													"src": "2519:81:12",
													"statements": [
														{
															"nativeSrc": "2529:65:12",
															"nodeType": "YulAssignment",
															"src": "2529:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2544:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2544:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2562:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2562:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2565:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2565:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2558:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2558:3:12"
																								},
																								"nativeSrc": "2558:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2558:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2575:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2575:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2571:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2571:3:12"
																								},
																								"nativeSrc": "2571:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2571:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2554:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "2554:3:12"
																						},
																						"nativeSrc": "2554:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "2554:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2550:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2550:3:12"
																				},
																				"nativeSrc": "2550:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2550:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2540:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2540:3:12"
																		},
																		"nativeSrc": "2540:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2540:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2586:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2586:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2589:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "2589:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2582:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2582:3:12"
																		},
																		"nativeSrc": "2582:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2582:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2537:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2537:2:12"
																},
																"nativeSrc": "2537:57:12",
																"nodeType": "YulFunctionCall",
																"src": "2537:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2529:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2529:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2434:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2496:4:12",
														"nodeType": "YulTypedName",
														"src": "2496:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2502:3:12",
														"nodeType": "YulTypedName",
														"src": "2502:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2510:4:12",
														"nodeType": "YulTypedName",
														"src": "2510:4:12",
														"type": ""
													}
												],
												"src": "2434:166:12"
											},
											{
												"body": {
													"nativeSrc": "2701:1249:12",
													"nodeType": "YulBlock",
													"src": "2701:1249:12",
													"statements": [
														{
															"nativeSrc": "2711:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2711:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2731:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2731:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2725:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2725:5:12"
																},
																"nativeSrc": "2725:10:12",
																"nodeType": "YulFunctionCall",
																"src": "2725:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2715:6:12",
																	"nodeType": "YulTypedName",
																	"src": "2715:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2778:22:12",
																"nodeType": "YulBlock",
																"src": "2778:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2780:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2780:16:12"
																			},
																			"nativeSrc": "2780:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2780:18:12"
																		},
																		"nativeSrc": "2780:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2780:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2750:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2750:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2766:2:12",
																						"nodeType": "YulLiteral",
																						"src": "2766:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2770:1:12",
																						"nodeType": "YulLiteral",
																						"src": "2770:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2762:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2762:3:12"
																				},
																				"nativeSrc": "2762:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2762:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2774:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2774:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2758:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2758:3:12"
																		},
																		"nativeSrc": "2758:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2758:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2747:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "2747:2:12"
																},
																"nativeSrc": "2747:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2747:30:12"
															},
															"nativeSrc": "2744:56:12",
															"nodeType": "YulIf",
															"src": "2744:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2853:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2853:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2891:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "2891:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2885:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "2885:5:12"
																				},
																				"nativeSrc": "2885:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2885:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2859:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "2859:25:12"
																		},
																		"nativeSrc": "2859:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2859:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2899:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2899:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2809:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2809:43:12"
																},
																"nativeSrc": "2809:97:12",
																"nodeType": "YulFunctionCall",
																"src": "2809:97:12"
															},
															"nativeSrc": "2809:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "2809:97:12"
														},
														{
															"nativeSrc": "2915:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2915:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2932:1:12",
																"nodeType": "YulLiteral",
																"src": "2932:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2919:9:12",
																	"nodeType": "YulTypedName",
																	"src": "2919:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2942:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2942:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2961:4:12",
																"nodeType": "YulLiteral",
																"src": "2961:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "2946:11:12",
																	"nodeType": "YulTypedName",
																	"src": "2946:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2974:17:12",
															"nodeType": "YulAssignment",
															"src": "2974:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2987:4:12",
																"nodeType": "YulLiteral",
																"src": "2987:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2974:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2974:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3037:656:12",
																		"nodeType": "YulBlock",
																		"src": "3037:656:12",
																		"statements": [
																			{
																				"nativeSrc": "3051:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3051:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3070:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3070:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3082:2:12",
																									"nodeType": "YulLiteral",
																									"src": "3082:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3078:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3078:3:12"
																							},
																							"nativeSrc": "3078:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3078:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3066:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3066:3:12"
																					},
																					"nativeSrc": "3066:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3066:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3055:7:12",
																						"nodeType": "YulTypedName",
																						"src": "3055:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3099:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3099:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3143:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3143:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3113:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "3113:29:12"
																					},
																					"nativeSrc": "3113:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3113:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3103:6:12",
																						"nodeType": "YulTypedName",
																						"src": "3103:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3161:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3161:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3170:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3170:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3165:1:12",
																						"nodeType": "YulTypedName",
																						"src": "3165:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3248:172:12",
																					"nodeType": "YulBlock",
																					"src": "3248:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3273:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3273:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3291:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "3291:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3296:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "3296:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3287:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "3287:3:12"
																												},
																												"nativeSrc": "3287:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "3287:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3281:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "3281:5:12"
																										},
																										"nativeSrc": "3281:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3281:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3266:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3266:6:12"
																								},
																								"nativeSrc": "3266:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3266:42:12"
																							},
																							"nativeSrc": "3266:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3266:42:12"
																						},
																						{
																							"nativeSrc": "3325:24:12",
																							"nodeType": "YulAssignment",
																							"src": "3325:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3339:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3339:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3347:1:12",
																										"nodeType": "YulLiteral",
																										"src": "3347:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3335:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3335:3:12"
																								},
																								"nativeSrc": "3335:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3335:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3325:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3325:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3366:40:12",
																							"nodeType": "YulAssignment",
																							"src": "3366:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3383:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "3383:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3394:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "3394:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3379:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3379:3:12"
																								},
																								"nativeSrc": "3379:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3379:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3366:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "3366:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3195:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "3195:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3198:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "3198:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3192:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3192:2:12"
																					},
																					"nativeSrc": "3192:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3192:14:12"
																				},
																				"nativeSrc": "3184:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3207:28:12",
																					"nodeType": "YulBlock",
																					"src": "3207:28:12",
																					"statements": [
																						{
																							"nativeSrc": "3209:24:12",
																							"nodeType": "YulAssignment",
																							"src": "3209:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3218:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "3218:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "3221:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "3221:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3214:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "3214:3:12"
																								},
																								"nativeSrc": "3214:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3214:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3209:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "3209:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3188:3:12",
																					"nodeType": "YulBlock",
																					"src": "3188:3:12",
																					"statements": []
																				},
																				"src": "3184:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "3468:166:12",
																					"nodeType": "YulBlock",
																					"src": "3468:166:12",
																					"statements": [
																						{
																							"nativeSrc": "3486:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3486:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3513:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3513:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3518:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3518:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3509:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3509:3:12"
																										},
																										"nativeSrc": "3509:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3509:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3503:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3503:5:12"
																								},
																								"nativeSrc": "3503:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3503:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3490:9:12",
																									"nodeType": "YulTypedName",
																									"src": "3490:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3553:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "3553:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3565:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3565:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3592:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "3592:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3595:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "3595:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3588:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "3588:3:12"
																																		},
																																		"nativeSrc": "3588:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3588:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3604:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3604:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3584:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3584:3:12"
																																},
																																"nativeSrc": "3584:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3584:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3614:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "3614:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3610:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "3610:3:12"
																																},
																																"nativeSrc": "3610:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "3610:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3580:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "3580:3:12"
																														},
																														"nativeSrc": "3580:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "3580:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3576:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "3576:3:12"
																												},
																												"nativeSrc": "3576:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "3576:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3561:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3561:3:12"
																										},
																										"nativeSrc": "3561:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3561:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3546:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3546:6:12"
																								},
																								"nativeSrc": "3546:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3546:74:12"
																							},
																							"nativeSrc": "3546:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3546:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3439:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "3439:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3448:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "3448:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3436:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3436:2:12"
																					},
																					"nativeSrc": "3436:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3436:19:12"
																				},
																				"nativeSrc": "3433:201:12",
																				"nodeType": "YulIf",
																				"src": "3433:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3654:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3654:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3668:1:12",
																											"nodeType": "YulLiteral",
																											"src": "3668:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3671:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "3671:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3664:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "3664:3:12"
																									},
																									"nativeSrc": "3664:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "3664:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3680:1:12",
																									"nodeType": "YulLiteral",
																									"src": "3680:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3660:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3660:3:12"
																							},
																							"nativeSrc": "3660:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3660:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3647:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3647:6:12"
																					},
																					"nativeSrc": "3647:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3647:36:12"
																				},
																				"nativeSrc": "3647:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3647:36:12"
																			}
																		]
																	},
																	"nativeSrc": "3030:663:12",
																	"nodeType": "YulCase",
																	"src": "3030:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3035:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3035:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3710:234:12",
																		"nodeType": "YulBlock",
																		"src": "3710:234:12",
																		"statements": [
																			{
																				"nativeSrc": "3724:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3724:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3737:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3737:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3728:5:12",
																						"nodeType": "YulTypedName",
																						"src": "3728:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3773:67:12",
																					"nodeType": "YulBlock",
																					"src": "3773:67:12",
																					"statements": [
																						{
																							"nativeSrc": "3791:35:12",
																							"nodeType": "YulAssignment",
																							"src": "3791:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3810:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "3810:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3815:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "3815:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3806:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "3806:3:12"
																										},
																										"nativeSrc": "3806:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "3806:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3800:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3800:5:12"
																								},
																								"nativeSrc": "3800:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3800:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3791:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3791:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3754:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3754:6:12"
																				},
																				"nativeSrc": "3751:89:12",
																				"nodeType": "YulIf",
																				"src": "3751:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3860:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3860:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3919:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "3919:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3926:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "3926:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3866:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "3866:52:12"
																							},
																							"nativeSrc": "3866:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3866:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3853:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3853:6:12"
																					},
																					"nativeSrc": "3853:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3853:81:12"
																				},
																				"nativeSrc": "3853:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "3853:81:12"
																			}
																		]
																	},
																	"nativeSrc": "3702:242:12",
																	"nodeType": "YulCase",
																	"src": "3702:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3010:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3010:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3018:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3018:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3007:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3007:2:12"
																},
																"nativeSrc": "3007:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3007:14:12"
															},
															"nativeSrc": "3000:944:12",
															"nodeType": "YulSwitch",
															"src": "3000:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2605:1345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2686:4:12",
														"nodeType": "YulTypedName",
														"src": "2686:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2692:3:12",
														"nodeType": "YulTypedName",
														"src": "2692:3:12",
														"type": ""
													}
												],
												"src": "2605:1345:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$1108t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value1 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040523480156200001157600080fd5b5060405162001ea138038062001ea183398101604081905262000034916200015c565b6002620000428282620002e3565b506001600160a01b0382166080526200005d60003362000097565b506200008a7f250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db69805373362000097565b50504260045550620003af565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166200013c576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620000f33390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600162000140565b5060005b92915050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200017057600080fd5b82516001600160a01b03811681146200018857600080fd5b602084810151919350906001600160401b0380821115620001a857600080fd5b818601915086601f830112620001bd57600080fd5b815181811115620001d257620001d262000146565b604051601f8201601f19908116603f01168101908382118183101715620001fd57620001fd62000146565b8160405282815289868487010111156200021657600080fd5b600093505b828410156200023a57848401860151818501870152928501926200021b565b60008684830101528096505050505050509250929050565b600181811c908216806200026757607f821691505b6020821081036200028857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002de576000816000526020600020601f850160051c81016020861015620002b95750805b601f850160051c820191505b81811015620002da57828155600101620002c5565b5050505b505050565b81516001600160401b03811115620002ff57620002ff62000146565b620003178162000310845462000252565b846200028e565b602080601f8311600181146200034f5760008415620003365750858301515b600019600386901b1c1916600185901b178555620002da565b600085815260208120601f198616915b8281101562000380578886015182559484019460019091019084016200035f565b50858210156200039f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b608051611ac1620003e06000396000818161022e015281816107fe0152818161093001526110290152611ac16000f3fe608060405234801561001057600080fd5b50600436106101a25760003560e01c80635c975abb116100ee5780639612df5c11610097578063bef6f54011610071578063bef6f54014610400578063d547741f14610413578063eac989f814610426578063f0f9243b1461043b57600080fd5b80639612df5c146103d2578063a217fddf146103e5578063bd85b039146103ed57600080fd5b80638456cb59116100c85780638456cb5914610380578063897a36511461038857806391d148541461039b57600080fd5b80635c975abb146103595780636ea056a9146103645780637b3baab41461037757600080fd5b8063248a9ca31161015057806336568abe1161012a57806336568abe1461032b5780633f4ba83a1461033e578063441a3e701461034657600080fd5b8063248a9ca31461026857806326c259621461028b5780632f2ff15d1461031857600080fd5b80630bfed82a116101815780630bfed82a1461021757806318160ddd1461022157806322be3de11461022957600080fd5b8062fdd58e146101a757806301ffc9a7146101cd57806309a01608146101f0575b600080fd5b6101ba6101b5366004611707565b610444565b6040519081526020015b60405180910390f35b6101e06101db366004611733565b6104c7565b60405190151581526020016101c4565b6101ba7f250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db698053781565b61021f61052e565b005b6101ba610538565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c4565b6101ba610276366004611764565b60009081526020819052604090206001015490565b6102de610299366004611764565b60056020819052600091825260409091208054600182015460028301546003840154600485015494909501546001600160a01b03909316949193909260ff9092169186565b604080516001600160a01b03909716875260208701959095529385019290925260ff166060840152608083015260a082015260c0016101c4565b61021f61032636600461177d565b610567565b61021f61033936600461177d565b610592565b61021f6105e3565b61021f6103543660046117ad565b6105f9565b60015460ff166101e0565b61021f610372366004611707565b6108ff565b6101ba60045481565b61021f6109e9565b61021f61039636600461181b565b6109fc565b6101e06103a936600461177d565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61021f6103e0366004611895565b610cc0565b6101ba600081565b6101ba6103fb366004611764565b610f2d565b61021f61040e366004611764565b610fbc565b61021f61042136600461177d565b6112ab565b61042e6112d0565b6040516101c491906118ed565b6101ba60035481565b6000818152600560205260408082205490516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401602060405180830381865afa15801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be919061193c565b90505b92915050565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806104c157507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146104c1565b61053661135e565b565b6000805b6003548110156105635761054f81610f2d565b610559908361196b565b915060010161053c565b5090565b60008281526020819052604090206001015461058281611407565b61058c8383611411565b50505050565b6001600160a01b03811633146105d4576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105de82826114bb565b505050565b60006105ee81611407565b6105f661153e565b50565b610601611590565b60008281526005602052604090819020805491516370a0823160e01b815233600482015290916001600160a01b031690839082906370a0823190602401602060405180830381865afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f919061193c565b10156106d25760405162461bcd60e51b815260206004820152601060248201527f494e53554646494349454e545f42414c0000000000000000000000000000000060448201526064015b60405180910390fd5b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610736919061193c565b848460050154610746919061197e565b6107509190611995565b90508083600501600082825461076691906119b7565b90915550506040517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b03831690639dc29fac90604401600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063a9059cbb91506044016020604051808303816000875af1158015610851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087591906119ca565b6108c15760405162461bcd60e51b815260206004820152601660248201527f535441424c455f5452414e534645525f4641494c45440000000000000000000060448201526064016106c9565b604051818152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b600061090a81611407565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d91906119ca565b6105de5760405162461bcd60e51b815260206004820152600c60248201527f53574545505f4641494c4544000000000000000000000000000000000000000060448201526064016106c9565b60006109f481611407565b6105f66115cd565b6000610a0781611407565b6000868152600560205260409020546001600160a01b0316848314610a6e5760405162461bcd60e51b815260206004820152601560248201527f41525241595f4c454e4754485f4d49534d41544348000000000000000000000060448201526064016106c9565b610aaa84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061160892505050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b12919061193c565b1015610b605760405162461bcd60e51b815260206004820152601660248201527f494e53554646494349454e545f41444d494e5f42414c0000000000000000000060448201526064016106c9565b60005b85811015610cb657816001600160a01b031663a9059cbb888884818110610b8c57610b8c6119ec565b9050602002016020810190610ba19190611a02565b878785818110610bb357610bb36119ec565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906119ca565b50868682818110610c3e57610c3e6119ec565b9050602002016020810190610c539190611a02565b6001600160a01b0316887fb6bcab815b7a952b8759f2f92fc9981dc1156f6c11bf4dc7e9cb3036495e653a878785818110610c9057610c906119ec565b90506020020135604051610ca691815260200190565b60405180910390a3600101610b63565b5050505050505050565b6000610ccb81611407565b60008511610d1b5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5052494e434950414c00000000000000000000000000000060448201526064016106c9565b60008211610d6b5760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f535550504c5900000000000000000000000000000000000060448201526064016106c9565b856001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd919061193c565b8214610e1b5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f544f4b454e5f535550504c5900000000000000000000000060448201526064016106c9565b600354610e2981600161196b565b60039081556040805160c0810182526001600160a01b038a8116825260208083018b81528385018b815260ff8b8116606080880182815260006080808b0182815260a08c018381528f84526005808c52938e90209c518d547fffffffffffffffffffffffff0000000000000000000000000000000000000000169c169b909b178c55975160018c0155955160028b015590519a8901805460ff19169b9094169a909a17909255925160048701559351949096019390935583518b81529081018a905292830191909152810185905282917f564b343ad33dbf7eb84ef778355be83df7b0a44ce6021e56d7bd757a03c03544910160405180910390a250505050505050565b60008181526005602090815260408083205481517f18160ddd00000000000000000000000000000000000000000000000000000000815291516001600160a01b03909116926318160ddd92600480820193918290030181865afa158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c1919061193c565b610fc4611590565b7f250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db6980537610fee81611407565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561107a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109e91906119ca565b6110ea5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106c9565b6110f261135e565b8160005b60ff8160ff161080156111095750600082115b156112675760005b600354811080156111225750600083115b15611256576000818152600560205260409020600381015460ff84811691161461114c5750611246565b600084826004015411156111605784611166565b81600401545b90508082600401600082825461117c91906119b7565b9250508190555080826005016000828254611197919061196b565b909155506111a7905081866119b7565b9450600085836001015411156111bd57856111c3565b82600101545b9050808360010160008282546111d991906119b7565b92505081905550808360050160008282546111f4919061196b565b90915550611204905081876119b7565b604080518481526020810184905291975085917fc679124717471d056fe130fb8066ce200851eec03c00256ee1158b7d2354036f910160405180910390a25050505b61124f81611a1f565b9050611111565b5061126081611a38565b90506110f6565b50604080516000815260208101839052600019917fc679124717471d056fe130fb8066ce200851eec03c00256ee1158b7d2354036f910160405180910390a2505050565b6000828152602081905260409020600101546112c681611407565b61058c83836114bb565b600280546112dd90611a57565b80601f016020809104026020016040519081016040528092919081815260200182805461130990611a57565b80156113565780601f1061132b57610100808354040283529160200191611356565b820191906000526020600020905b81548152906001019060200180831161133957829003601f168201915b505050505081565b60006004544261136e91906119b7565b90508060000361137b5750565b4260045560005b60035481101561140357600081815260056020526040812060018101549091036113ac57506113fb565b600064496cebb80084836002015484600101546113c9919061197e565b6113d3919061197e565b6113dd9190611995565b9050808260040160008282546113f3919061196b565b909155505050505b600101611382565b5050565b6105f6813361164a565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166114b3576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561146b3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104c1565b5060006104c1565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16156114b3576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104c1565b6115466116b6565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60015460ff1615610536576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115d5611590565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611573565b6000805b825181101561164457828181518110611627576116276119ec565b60200260200101518261163a919061196b565b915060010161160c565b50919050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16611403576040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602481018390526044016106c9565b60015460ff16610536576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03811681146105f657600080fd5b6000806040838503121561171a57600080fd5b8235611725816116f2565b946020939093013593505050565b60006020828403121561174557600080fd5b81356001600160e01b03198116811461175d57600080fd5b9392505050565b60006020828403121561177657600080fd5b5035919050565b6000806040838503121561179057600080fd5b8235915060208301356117a2816116f2565b809150509250929050565b600080604083850312156117c057600080fd5b50508035926020909101359150565b60008083601f8401126117e157600080fd5b50813567ffffffffffffffff8111156117f957600080fd5b6020830191508360208260051b850101111561181457600080fd5b9250929050565b60008060008060006060868803121561183357600080fd5b85359450602086013567ffffffffffffffff8082111561185257600080fd5b61185e89838a016117cf565b9096509450604088013591508082111561187757600080fd5b50611884888289016117cf565b969995985093965092949392505050565b600080600080600060a086880312156118ad57600080fd5b85356118b8816116f2565b94506020860135935060408601359250606086013560ff811681146118dc57600080fd5b949793965091946080013592915050565b60006020808352835180602085015260005b8181101561191b578581018301518582016040015282016118ff565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561194e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104c1576104c1611955565b80820281158282048414176104c1576104c1611955565b6000826119b257634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104c1576104c1611955565b6000602082840312156119dc57600080fd5b8151801515811461175d57600080fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a1457600080fd5b813561175d816116f2565b600060018201611a3157611a31611955565b5060010190565b600060ff821660ff8103611a4e57611a4e611955565b60010192915050565b600181811c90821680611a6b57607f821691505b60208210810361164457634e487b7160e01b600052602260045260246000fdfea26469706673582212203fda974b9d73d244202ae7c03d275c28f0c0156d9039d135031062fadbd523fb64736f6c63430008180033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1EA1 CODESIZE SUB DUP1 PUSH3 0x1EA1 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x15C JUMP JUMPDEST PUSH1 0x2 PUSH3 0x42 DUP3 DUP3 PUSH3 0x2E3 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x80 MSTORE PUSH3 0x5D PUSH1 0x0 CALLER PUSH3 0x97 JUMP JUMPDEST POP PUSH3 0x8A PUSH32 0x250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537 CALLER PUSH3 0x97 JUMP JUMPDEST POP POP TIMESTAMP PUSH1 0x4 SSTORE POP PUSH3 0x3AF JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x13C JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0xF3 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x140 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x170 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP5 DUP2 ADD MLOAD SWAP2 SWAP4 POP SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1BD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x1D2 JUMPI PUSH3 0x1D2 PUSH3 0x146 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x1FD JUMPI PUSH3 0x1FD PUSH3 0x146 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP10 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x216 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x23A JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x21B JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x267 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2DE JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2B9 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2DA JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C5 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2FF JUMPI PUSH3 0x2FF PUSH3 0x146 JUMP JUMPDEST PUSH3 0x317 DUP2 PUSH3 0x310 DUP5 SLOAD PUSH3 0x252 JUMP JUMPDEST DUP5 PUSH3 0x28E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x34F JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x336 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2DA JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x380 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x35F JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x39F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1AC1 PUSH3 0x3E0 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x22E ADD MSTORE DUP2 DUP2 PUSH2 0x7FE ADD MSTORE DUP2 DUP2 PUSH2 0x930 ADD MSTORE PUSH2 0x1029 ADD MSTORE PUSH2 0x1AC1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x9612DF5C GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBEF6F540 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEF6F540 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xEAC989F8 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF0F9243B EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9612DF5C EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x897A3651 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x6EA056A9 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x7B3BAAB4 EQ PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x26C25962 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFED82A GT PUSH2 0x181 JUMPI DUP1 PUSH4 0xBFED82A EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x22BE3DE1 EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x9A01608 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x1BA PUSH32 0x250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537 DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x52E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x538 JUMP JUMPDEST PUSH2 0x250 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x21F PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x21F PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x42E PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C1 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x536 PUSH2 0x135E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI PUSH2 0x54F DUP2 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x559 SWAP1 DUP4 PUSH2 0x196B JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x53C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x582 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x58C DUP4 DUP4 PUSH2 0x1411 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DE DUP3 DUP3 PUSH2 0x14BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x153E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F42414C00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST DUP5 DUP5 PUSH1 0x5 ADD SLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x9DC29FAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x535441424C455F5452414E534645525F4641494C454400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90A DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53574545505F4641494C45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F4 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA07 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 EQ PUSH2 0xA6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41525241595F4C454E4754485F4D49534D415443480000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0xAAA DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1608 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST LT ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F41444D494E5F42414C00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCB6 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xC3E JUMPI PUSH2 0xC3E PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH32 0xB6BCAB815B7A952B8759F2F92FC9981DC1156F6C11BF4DC7E9CB3036495E653A DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0xC90 JUMPI PUSH2 0xC90 PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 ADD PUSH2 0xB63 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCB DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5052494E434950414C000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F535550504C59000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCD SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST DUP3 EQ PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F544F4B454E5F535550504C59000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE29 DUP2 PUSH1 0x1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x3 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP12 DUP2 MSTORE DUP4 DUP6 ADD DUP12 DUP2 MSTORE PUSH1 0xFF DUP12 DUP2 AND PUSH1 0x60 DUP1 DUP9 ADD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP1 DUP12 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP13 ADD DUP4 DUP2 MSTORE DUP16 DUP5 MSTORE PUSH1 0x5 DUP1 DUP13 MSTORE SWAP4 DUP15 SWAP1 KECCAK256 SWAP13 MLOAD DUP14 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP13 AND SWAP12 SWAP1 SWAP12 OR DUP13 SSTORE SWAP8 MLOAD PUSH1 0x1 DUP13 ADD SSTORE SWAP6 MLOAD PUSH1 0x2 DUP12 ADD SSTORE SWAP1 MLOAD SWAP11 DUP10 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP12 SWAP1 SWAP5 AND SWAP11 SWAP1 SWAP11 OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP4 MLOAD SWAP5 SWAP1 SWAP7 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP12 DUP2 MSTORE SWAP1 DUP2 ADD DUP11 SWAP1 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE DUP3 SWAP2 PUSH32 0x564B343AD33DBF7EB84EF778355BE83DF7B0A44CE6021E56D7BD757A03C03544 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x18160DDD SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH2 0xFC4 PUSH2 0x1590 JUMP JUMPDEST PUSH32 0x250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537 PUSH2 0xFEE DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x107A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4641494C45440000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x135E JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x1109 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x1267 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT DUP1 ISZERO PUSH2 0x1122 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO PUSH2 0x1256 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x114C JUMPI POP PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x1160 JUMPI DUP5 PUSH2 0x1166 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11A7 SWAP1 POP DUP2 DUP7 PUSH2 0x19B7 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 DUP4 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x11BD JUMPI DUP6 PUSH2 0x11C3 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1204 SWAP1 POP DUP2 DUP8 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP8 POP DUP6 SWAP2 PUSH32 0xC679124717471D056FE130FB8066CE200851EEC03C00256EE1158B7D2354036F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST PUSH2 0x124F DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP PUSH2 0x1111 JUMP JUMPDEST POP PUSH2 0x1260 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 NOT SWAP2 PUSH32 0xC679124717471D056FE130FB8066CE200851EEC03C00256EE1158B7D2354036F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x12C6 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x58C DUP4 DUP4 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x12DD SWAP1 PUSH2 0x1A57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1309 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x132B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x137B JUMPI POP JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1403 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x13AC JUMPI POP PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 PUSH5 0x496CEBB800 DUP5 DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x13C9 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x13D3 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x13DD SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13F3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1382 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5F6 DUP2 CALLER PUSH2 0x164A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x14B3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x146B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14B3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x1546 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D5 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1644 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1627 JUMPI PUSH2 0x1627 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x163A SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x160C JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1725 DUP2 PUSH2 0x16F2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x175D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17A2 DUP2 PUSH2 0x16F2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x185E DUP10 DUP4 DUP11 ADD PUSH2 0x17CF JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1884 DUP9 DUP3 DUP10 ADD PUSH2 0x17CF JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x18B8 DUP2 PUSH2 0x16F2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x18DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x191B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x18FF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1955 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x175D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x175D DUP2 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A31 JUMPI PUSH2 0x1A31 PUSH2 0x1955 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1A4E JUMPI PUSH2 0x1A4E PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A6B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1644 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xDA SWAP8 0x4B SWAP14 PUSH20 0xD244202AE7C03D275C28F0C0156D9039D1350310 PUSH3 0xFADBD5 0x23 0xFB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "289:6574:10:-:0;;;1205:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1263:3;:10;1269:4;1263:3;:10;:::i;:::-;-1:-1:-1;;;;;;1283:16:10;;;;1309:42;2232:4:0;1340:10:10;1309;:42::i;:::-;-1:-1:-1;1361:37:10;382:26;1387:10;1361;:37::i;:::-;-1:-1:-1;;1422:15:10;1408:11;:29;-1:-1:-1;289:6574:10;;6179:316:0;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:6;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1224;250:6;258;311:2;299:9;290:7;286:23;282:32;279:52;;;327:1;324;317:12;279:52;353:16;;-1:-1:-1;;;;;398:31:12;;388:42;;378:70;;444:1;441;434:12;378:70;491:2;522:18;;;516:25;467:5;;-1:-1:-1;491:2:12;-1:-1:-1;;;;;590:14:12;;;587:34;;;617:1;614;607:12;587:34;655:6;644:9;640:22;630:32;;700:7;693:4;689:2;685:13;681:27;671:55;;722:1;719;712:12;671:55;751:2;745:9;773:2;769;766:10;763:36;;;779:18;;:::i;:::-;854:2;848:9;822:2;908:13;;-1:-1:-1;;904:22:12;;;928:2;900:31;896:40;884:53;;;952:18;;;972:22;;;949:46;946:72;;;998:18;;:::i;:::-;1038:10;1034:2;1027:22;1073:2;1065:6;1058:18;1113:7;1108:2;1103;1099;1095:11;1091:20;1088:33;1085:53;;;1134:1;1131;1124:12;1085:53;1156:1;1147:10;;1166:129;1180:2;1177:1;1174:9;1166:129;;;1268:10;;;1264:19;;1258:26;1237:14;;;1233:23;;1226:59;1191:10;;;;1166:129;;;1337:1;1332:2;1327;1319:6;1315:15;1311:24;1304:35;1358:6;1348:16;;;;;;;;146:1224;;;;;:::o;1375:380::-;1454:1;1450:12;;;;1497;;;1518:61;;1572:4;1564:6;1560:17;1550:27;;1518:61;1625:2;1617:6;1614:14;1594:18;1591:38;1588:161;;1671:10;1666:3;1662:20;1659:1;1652:31;1706:4;1703:1;1696:15;1734:4;1731:1;1724:15;1588:161;;1375:380;;;:::o;1886:543::-;1988:2;1983:3;1980:11;1977:446;;;2024:1;2048:5;2045:1;2038:16;2092:4;2089:1;2079:18;2162:2;2150:10;2146:19;2143:1;2139:27;2133:4;2129:38;2198:4;2186:10;2183:20;2180:47;;;-1:-1:-1;2221:4:12;2180:47;2276:2;2271:3;2267:12;2264:1;2260:20;2254:4;2250:31;2240:41;;2331:82;2349:2;2342:5;2339:13;2331:82;;;2394:17;;;2375:1;2364:13;2331:82;;;2335:3;;;1977:446;1886:543;;;:::o;2605:1345::-;2725:10;;-1:-1:-1;;;;;2747:30:12;;2744:56;;;2780:18;;:::i;:::-;2809:97;2899:6;2859:38;2891:4;2885:11;2859:38;:::i;:::-;2853:4;2809:97;:::i;:::-;2961:4;;3018:2;3007:14;;3035:1;3030:663;;;;3737:1;3754:6;3751:89;;;-1:-1:-1;3806:19:12;;;3800:26;3751:89;-1:-1:-1;;2562:1:12;2558:11;;;2554:24;2550:29;2540:40;2586:1;2582:11;;;2537:57;3853:81;;3000:944;;3030:663;1833:1;1826:14;;;1870:4;1857:18;;-1:-1:-1;;3066:20:12;;;3184:236;3198:7;3195:1;3192:14;3184:236;;;3287:19;;;3281:26;3266:42;;3379:27;;;;3347:1;3335:14;;;;3214:19;;3184:236;;;3188:3;3448:6;3439:7;3436:19;3433:201;;;3509:19;;;3503:26;-1:-1:-1;;3592:1:12;3588:14;;;3604:3;3584:24;3580:37;3576:42;3561:58;3546:74;;3433:201;-1:-1:-1;;;;;3680:1:12;3664:14;;;3660:22;3647:36;;-1:-1:-1;2605:1345:12:o;:::-;289:6574:10;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SERVICER_ROLE_1323": {
									"entryPoint": null,
									"id": 1323,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_accrueAllInterest_1677": {
									"entryPoint": 4958,
									"id": 1677,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 5706,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 5127,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 5137,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1255": {
									"entryPoint": 5581,
									"id": 1255,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1226": {
									"entryPoint": 5520,
									"id": 1226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1239": {
									"entryPoint": 5814,
									"id": 1239,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_294": {
									"entryPoint": 5307,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_totalAmount_1602": {
									"entryPoint": 5640,
									"id": 1602,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_unpause_1271": {
									"entryPoint": 5438,
									"id": 1271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@accrueAllInterest_1609": {
									"entryPoint": 1326,
									"id": 1609,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOf_1998": {
									"entryPoint": 1092,
									"id": 1998,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@createTranche_1493": {
									"entryPoint": 3264,
									"id": 1493,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@depositAndDistribute_1824": {
									"entryPoint": 4028,
									"id": 1824,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@distributeToInvestors_1574": {
									"entryPoint": 2556,
									"id": 1574,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1383,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@lastAccrual_1346": {
									"entryPoint": null,
									"id": 1346,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nextTrancheId_1344": {
									"entryPoint": null,
									"id": 1344,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_1911": {
									"entryPoint": 2537,
									"id": 1911,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1214": {
									"entryPoint": null,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1426,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 4779,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stable_1342": {
									"entryPoint": null,
									"id": 1342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_1295": {
									"entryPoint": null,
									"id": 1295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 1223,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@sweep_1941": {
									"entryPoint": 2303,
									"id": 1941,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@totalSupply_1956": {
									"entryPoint": 3885,
									"id": 1956,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_1980": {
									"entryPoint": 1336,
									"id": 1980,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tranches_1351": {
									"entryPoint": null,
									"id": 1351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1921": {
									"entryPoint": 1507,
									"id": 1921,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uri_1339": {
									"entryPoint": 4816,
									"id": 1339,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdraw_1901": {
									"entryPoint": 1529,
									"id": 1901,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 6095,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5988,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC3643Token_$2114t_uint256t_uint256t_uint8t_uint256": {
									"entryPoint": 6293,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 6171,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6061,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_ERC3643Token_$2114_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1108__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_214decfc806888f72503545abf1650c3cb8a88f29582b5986097444c27d475ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2204223a7bbd7b9038b89e38862936a74c38617cdd0a5a77f69c308f09676d00__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_25441db5b8ffe88664d2ec001eb1590f25a295726428902d60a1f9e95e736afd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87d1d38fa197450bc123268bc8a27ff3ab3aa012371a74033ddcd71362d34110__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf9f72848977dbd5a0caa5dc319c57d87cc2289f8ecb5225f8a7c2d1fe6d7f56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7cb342cb595ec1fa3179b8cca4a95fc160e3e9ba84273d658095957106dd18c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f4d1a6d7d8a25833c643917dbdc7ad6ec4bfa4e2dea45c3be822af24a621e299__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint8_t_uint256__to_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6507,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 6743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 6687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint8": {
									"entryPoint": 6712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6636,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13457:12",
										"nodeType": "YulBlock",
										"src": "0:13457:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "59:109:12",
													"nodeType": "YulBlock",
													"src": "59:109:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "146:16:12",
																"nodeType": "YulBlock",
																"src": "146:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "155:1:12",
																					"nodeType": "YulLiteral",
																					"src": "155:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "158:1:12",
																					"nodeType": "YulLiteral",
																					"src": "158:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "148:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "148:6:12"
																			},
																			"nativeSrc": "148:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "148:12:12"
																		},
																		"nativeSrc": "148:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "148:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "82:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "93:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "100:42:12",
																						"nodeType": "YulLiteral",
																						"src": "100:42:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "89:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:12"
																				},
																				"nativeSrc": "89:54:12",
																				"nodeType": "YulFunctionCall",
																				"src": "89:54:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "79:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:12"
																		},
																		"nativeSrc": "79:65:12",
																		"nodeType": "YulFunctionCall",
																		"src": "79:65:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "72:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:12"
																},
																"nativeSrc": "72:73:12",
																"nodeType": "YulFunctionCall",
																"src": "72:73:12"
															},
															"nativeSrc": "69:93:12",
															"nodeType": "YulIf",
															"src": "69:93:12"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "14:154:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:12",
														"nodeType": "YulTypedName",
														"src": "48:5:12",
														"type": ""
													}
												],
												"src": "14:154:12"
											},
											{
												"body": {
													"nativeSrc": "260:228:12",
													"nodeType": "YulBlock",
													"src": "260:228:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "306:16:12",
																"nodeType": "YulBlock",
																"src": "306:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "315:1:12",
																					"nodeType": "YulLiteral",
																					"src": "315:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "318:1:12",
																					"nodeType": "YulLiteral",
																					"src": "318:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "308:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "308:6:12"
																			},
																			"nativeSrc": "308:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "308:12:12"
																		},
																		"nativeSrc": "308:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "308:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "281:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "281:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "290:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "290:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "277:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "277:3:12"
																		},
																		"nativeSrc": "277:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "277:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "302:2:12",
																		"nodeType": "YulLiteral",
																		"src": "302:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "273:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "273:3:12"
																},
																"nativeSrc": "273:32:12",
																"nodeType": "YulFunctionCall",
																"src": "273:32:12"
															},
															"nativeSrc": "270:52:12",
															"nodeType": "YulIf",
															"src": "270:52:12"
														},
														{
															"nativeSrc": "331:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "331:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "357:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "357:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "344:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "344:12:12"
																},
																"nativeSrc": "344:23:12",
																"nodeType": "YulFunctionCall",
																"src": "344:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "335:5:12",
																	"nodeType": "YulTypedName",
																	"src": "335:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "401:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "401:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "376:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "376:24:12"
																},
																"nativeSrc": "376:31:12",
																"nodeType": "YulFunctionCall",
																"src": "376:31:12"
															},
															"nativeSrc": "376:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "376:31:12"
														},
														{
															"nativeSrc": "416:15:12",
															"nodeType": "YulAssignment",
															"src": "416:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "426:5:12",
																"nodeType": "YulIdentifier",
																"src": "426:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "416:6:12"
																}
															]
														},
														{
															"nativeSrc": "440:42:12",
															"nodeType": "YulAssignment",
															"src": "440:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "467:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "467:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:12",
																				"nodeType": "YulLiteral",
																				"src": "478:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "463:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "463:3:12"
																		},
																		"nativeSrc": "463:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "463:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "450:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "450:12:12"
																},
																"nativeSrc": "450:32:12",
																"nodeType": "YulFunctionCall",
																"src": "450:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "440:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "173:315:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "218:9:12",
														"nodeType": "YulTypedName",
														"src": "218:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "229:7:12",
														"nodeType": "YulTypedName",
														"src": "229:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "241:6:12",
														"nodeType": "YulTypedName",
														"src": "241:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "249:6:12",
														"nodeType": "YulTypedName",
														"src": "249:6:12",
														"type": ""
													}
												],
												"src": "173:315:12"
											},
											{
												"body": {
													"nativeSrc": "594:76:12",
													"nodeType": "YulBlock",
													"src": "594:76:12",
													"statements": [
														{
															"nativeSrc": "604:26:12",
															"nodeType": "YulAssignment",
															"src": "604:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "616:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "616:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "627:2:12",
																		"nodeType": "YulLiteral",
																		"src": "627:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "612:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "612:3:12"
																},
																"nativeSrc": "612:18:12",
																"nodeType": "YulFunctionCall",
																"src": "612:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "604:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "604:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "646:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "646:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "657:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "657:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:12"
																},
																"nativeSrc": "639:25:12",
																"nodeType": "YulFunctionCall",
																"src": "639:25:12"
															},
															"nativeSrc": "639:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "639:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "493:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "563:9:12",
														"nodeType": "YulTypedName",
														"src": "563:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "574:6:12",
														"nodeType": "YulTypedName",
														"src": "574:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "585:4:12",
														"nodeType": "YulTypedName",
														"src": "585:4:12",
														"type": ""
													}
												],
												"src": "493:177:12"
											},
											{
												"body": {
													"nativeSrc": "744:263:12",
													"nodeType": "YulBlock",
													"src": "744:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "790:16:12",
																"nodeType": "YulBlock",
																"src": "790:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "799:1:12",
																					"nodeType": "YulLiteral",
																					"src": "799:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "802:1:12",
																					"nodeType": "YulLiteral",
																					"src": "802:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "792:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "792:6:12"
																			},
																			"nativeSrc": "792:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "792:12:12"
																		},
																		"nativeSrc": "792:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "792:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "765:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "765:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "774:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "774:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "761:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "761:3:12"
																		},
																		"nativeSrc": "761:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "761:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "786:2:12",
																		"nodeType": "YulLiteral",
																		"src": "786:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "757:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "757:3:12"
																},
																"nativeSrc": "757:32:12",
																"nodeType": "YulFunctionCall",
																"src": "757:32:12"
															},
															"nativeSrc": "754:52:12",
															"nodeType": "YulIf",
															"src": "754:52:12"
														},
														{
															"nativeSrc": "815:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "815:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "841:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "841:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "828:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "828:12:12"
																},
																"nativeSrc": "828:23:12",
																"nodeType": "YulFunctionCall",
																"src": "828:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "819:5:12",
																	"nodeType": "YulTypedName",
																	"src": "819:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "961:16:12",
																"nodeType": "YulBlock",
																"src": "961:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "970:1:12",
																					"nodeType": "YulLiteral",
																					"src": "970:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "973:1:12",
																					"nodeType": "YulLiteral",
																					"src": "973:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "963:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "963:6:12"
																			},
																			"nativeSrc": "963:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "963:12:12"
																		},
																		"nativeSrc": "963:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "963:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "873:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "873:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "884:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "884:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "891:66:12",
																						"nodeType": "YulLiteral",
																						"src": "891:66:12",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "880:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "880:3:12"
																				},
																				"nativeSrc": "880:78:12",
																				"nodeType": "YulFunctionCall",
																				"src": "880:78:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "870:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "870:2:12"
																		},
																		"nativeSrc": "870:89:12",
																		"nodeType": "YulFunctionCall",
																		"src": "870:89:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "863:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "863:6:12"
																},
																"nativeSrc": "863:97:12",
																"nodeType": "YulFunctionCall",
																"src": "863:97:12"
															},
															"nativeSrc": "860:117:12",
															"nodeType": "YulIf",
															"src": "860:117:12"
														},
														{
															"nativeSrc": "986:15:12",
															"nodeType": "YulAssignment",
															"src": "986:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "996:5:12",
																"nodeType": "YulIdentifier",
																"src": "996:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "986:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "986:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "675:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "710:9:12",
														"nodeType": "YulTypedName",
														"src": "710:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "721:7:12",
														"nodeType": "YulTypedName",
														"src": "721:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "733:6:12",
														"nodeType": "YulTypedName",
														"src": "733:6:12",
														"type": ""
													}
												],
												"src": "675:332:12"
											},
											{
												"body": {
													"nativeSrc": "1107:92:12",
													"nodeType": "YulBlock",
													"src": "1107:92:12",
													"statements": [
														{
															"nativeSrc": "1117:26:12",
															"nodeType": "YulAssignment",
															"src": "1117:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1129:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1129:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1140:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1140:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1125:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1125:3:12"
																},
																"nativeSrc": "1125:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1125:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1117:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1117:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1159:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1159:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1184:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1184:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1177:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "1177:6:12"
																				},
																				"nativeSrc": "1177:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1177:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1170:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1170:6:12"
																		},
																		"nativeSrc": "1170:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1170:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1152:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1152:6:12"
																},
																"nativeSrc": "1152:41:12",
																"nodeType": "YulFunctionCall",
																"src": "1152:41:12"
															},
															"nativeSrc": "1152:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "1152:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1012:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1076:9:12",
														"nodeType": "YulTypedName",
														"src": "1076:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1087:6:12",
														"nodeType": "YulTypedName",
														"src": "1087:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1098:4:12",
														"nodeType": "YulTypedName",
														"src": "1098:4:12",
														"type": ""
													}
												],
												"src": "1012:187:12"
											},
											{
												"body": {
													"nativeSrc": "1305:76:12",
													"nodeType": "YulBlock",
													"src": "1305:76:12",
													"statements": [
														{
															"nativeSrc": "1315:26:12",
															"nodeType": "YulAssignment",
															"src": "1315:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1327:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1327:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1338:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1338:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1323:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1323:3:12"
																},
																"nativeSrc": "1323:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1323:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1315:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1315:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1357:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1357:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1368:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1368:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1350:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1350:6:12"
																},
																"nativeSrc": "1350:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1350:25:12"
															},
															"nativeSrc": "1350:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1350:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1204:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1274:9:12",
														"nodeType": "YulTypedName",
														"src": "1274:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1285:6:12",
														"nodeType": "YulTypedName",
														"src": "1285:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1296:4:12",
														"nodeType": "YulTypedName",
														"src": "1296:4:12",
														"type": ""
													}
												],
												"src": "1204:177:12"
											},
											{
												"body": {
													"nativeSrc": "1502:125:12",
													"nodeType": "YulBlock",
													"src": "1502:125:12",
													"statements": [
														{
															"nativeSrc": "1512:26:12",
															"nodeType": "YulAssignment",
															"src": "1512:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1524:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1524:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1535:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1535:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1520:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1520:3:12"
																},
																"nativeSrc": "1520:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1520:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1512:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1512:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1554:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1554:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1569:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1569:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1577:42:12",
																				"nodeType": "YulLiteral",
																				"src": "1577:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1565:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1565:3:12"
																		},
																		"nativeSrc": "1565:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1565:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1547:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1547:6:12"
																},
																"nativeSrc": "1547:74:12",
																"nodeType": "YulFunctionCall",
																"src": "1547:74:12"
															},
															"nativeSrc": "1547:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "1547:74:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1108__to_t_address__fromStack_reversed",
												"nativeSrc": "1386:241:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1471:9:12",
														"nodeType": "YulTypedName",
														"src": "1471:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1482:6:12",
														"nodeType": "YulTypedName",
														"src": "1482:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1493:4:12",
														"nodeType": "YulTypedName",
														"src": "1493:4:12",
														"type": ""
													}
												],
												"src": "1386:241:12"
											},
											{
												"body": {
													"nativeSrc": "1702:110:12",
													"nodeType": "YulBlock",
													"src": "1702:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1748:16:12",
																"nodeType": "YulBlock",
																"src": "1748:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1757:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1757:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1760:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1760:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1750:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1750:6:12"
																			},
																			"nativeSrc": "1750:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1750:12:12"
																		},
																		"nativeSrc": "1750:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1750:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1723:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1723:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1732:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1719:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:12"
																		},
																		"nativeSrc": "1719:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1719:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1744:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1744:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1715:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1715:3:12"
																},
																"nativeSrc": "1715:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1715:32:12"
															},
															"nativeSrc": "1712:52:12",
															"nodeType": "YulIf",
															"src": "1712:52:12"
														},
														{
															"nativeSrc": "1773:33:12",
															"nodeType": "YulAssignment",
															"src": "1773:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1796:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1796:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1783:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1783:12:12"
																},
																"nativeSrc": "1783:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1783:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1773:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1773:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1632:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1668:9:12",
														"nodeType": "YulTypedName",
														"src": "1668:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1679:7:12",
														"nodeType": "YulTypedName",
														"src": "1679:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1691:6:12",
														"nodeType": "YulTypedName",
														"src": "1691:6:12",
														"type": ""
													}
												],
												"src": "1632:180:12"
											},
											{
												"body": {
													"nativeSrc": "1887:110:12",
													"nodeType": "YulBlock",
													"src": "1887:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1933:16:12",
																"nodeType": "YulBlock",
																"src": "1933:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1942:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1942:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1945:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1945:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1935:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1935:6:12"
																			},
																			"nativeSrc": "1935:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1935:12:12"
																		},
																		"nativeSrc": "1935:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1935:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1908:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1908:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1917:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1917:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1904:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1904:3:12"
																		},
																		"nativeSrc": "1904:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1929:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1929:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1900:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1900:3:12"
																},
																"nativeSrc": "1900:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1900:32:12"
															},
															"nativeSrc": "1897:52:12",
															"nodeType": "YulIf",
															"src": "1897:52:12"
														},
														{
															"nativeSrc": "1958:33:12",
															"nodeType": "YulAssignment",
															"src": "1958:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1981:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1981:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1968:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1968:12:12"
																},
																"nativeSrc": "1968:23:12",
																"nodeType": "YulFunctionCall",
																"src": "1968:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1958:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1817:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1853:9:12",
														"nodeType": "YulTypedName",
														"src": "1853:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1864:7:12",
														"nodeType": "YulTypedName",
														"src": "1864:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1876:6:12",
														"nodeType": "YulTypedName",
														"src": "1876:6:12",
														"type": ""
													}
												],
												"src": "1817:180:12"
											},
											{
												"body": {
													"nativeSrc": "2260:354:12",
													"nodeType": "YulBlock",
													"src": "2260:354:12",
													"statements": [
														{
															"nativeSrc": "2270:27:12",
															"nodeType": "YulAssignment",
															"src": "2270:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2282:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2282:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2293:3:12",
																		"nodeType": "YulLiteral",
																		"src": "2293:3:12",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2278:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2278:3:12"
																},
																"nativeSrc": "2278:19:12",
																"nodeType": "YulFunctionCall",
																"src": "2278:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2270:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2270:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2313:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2313:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2328:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2328:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2336:42:12",
																				"nodeType": "YulLiteral",
																				"src": "2336:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2324:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2324:3:12"
																		},
																		"nativeSrc": "2324:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2324:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2306:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2306:6:12"
																},
																"nativeSrc": "2306:74:12",
																"nodeType": "YulFunctionCall",
																"src": "2306:74:12"
															},
															"nativeSrc": "2306:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "2306:74:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2400:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2400:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2411:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2411:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2396:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2396:3:12"
																		},
																		"nativeSrc": "2396:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2396:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "2416:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2416:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2389:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2389:6:12"
																},
																"nativeSrc": "2389:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2389:34:12"
															},
															"nativeSrc": "2389:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2389:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2443:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2443:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2454:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2454:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2439:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2439:3:12"
																		},
																		"nativeSrc": "2439:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2439:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "2459:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2459:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2432:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2432:6:12"
																},
																"nativeSrc": "2432:34:12",
																"nodeType": "YulFunctionCall",
																"src": "2432:34:12"
															},
															"nativeSrc": "2432:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "2432:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2486:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2486:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2497:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2497:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2482:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2482:3:12"
																		},
																		"nativeSrc": "2482:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2482:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nativeSrc": "2506:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2506:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2514:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2514:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2502:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2502:3:12"
																		},
																		"nativeSrc": "2502:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2502:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2475:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:12"
																},
																"nativeSrc": "2475:45:12",
																"nodeType": "YulFunctionCall",
																"src": "2475:45:12"
															},
															"nativeSrc": "2475:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "2475:45:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2540:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2540:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2551:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2551:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2536:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2536:3:12"
																		},
																		"nativeSrc": "2536:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2536:19:12"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "2557:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2557:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2529:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2529:6:12"
																},
																"nativeSrc": "2529:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2529:35:12"
															},
															"nativeSrc": "2529:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "2529:35:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2584:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2584:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2595:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2595:3:12",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2580:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:12"
																		},
																		"nativeSrc": "2580:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:12"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "2601:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2601:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2573:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2573:6:12"
																},
																"nativeSrc": "2573:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2573:35:12"
															},
															"nativeSrc": "2573:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "2573:35:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_ERC3643Token_$2114_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2002:612:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2189:9:12",
														"nodeType": "YulTypedName",
														"src": "2189:9:12",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "2200:6:12",
														"nodeType": "YulTypedName",
														"src": "2200:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2208:6:12",
														"nodeType": "YulTypedName",
														"src": "2208:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2216:6:12",
														"nodeType": "YulTypedName",
														"src": "2216:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2224:6:12",
														"nodeType": "YulTypedName",
														"src": "2224:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2232:6:12",
														"nodeType": "YulTypedName",
														"src": "2232:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2240:6:12",
														"nodeType": "YulTypedName",
														"src": "2240:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2251:4:12",
														"nodeType": "YulTypedName",
														"src": "2251:4:12",
														"type": ""
													}
												],
												"src": "2002:612:12"
											},
											{
												"body": {
													"nativeSrc": "2706:228:12",
													"nodeType": "YulBlock",
													"src": "2706:228:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2752:16:12",
																"nodeType": "YulBlock",
																"src": "2752:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2761:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2764:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2764:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2754:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2754:6:12"
																			},
																			"nativeSrc": "2754:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2754:12:12"
																		},
																		"nativeSrc": "2754:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2754:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2727:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2727:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2736:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2736:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2723:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2723:3:12"
																		},
																		"nativeSrc": "2723:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2723:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2748:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2748:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2719:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:12"
																},
																"nativeSrc": "2719:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2719:32:12"
															},
															"nativeSrc": "2716:52:12",
															"nodeType": "YulIf",
															"src": "2716:52:12"
														},
														{
															"nativeSrc": "2777:33:12",
															"nodeType": "YulAssignment",
															"src": "2777:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2800:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2800:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2787:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2787:12:12"
																},
																"nativeSrc": "2787:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2787:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2777:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2777:6:12"
																}
															]
														},
														{
															"nativeSrc": "2819:45:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2819:45:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2860:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2860:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2845:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2845:3:12"
																		},
																		"nativeSrc": "2845:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2845:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2832:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2832:12:12"
																},
																"nativeSrc": "2832:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2832:32:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2823:5:12",
																	"nodeType": "YulTypedName",
																	"src": "2823:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2898:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2898:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2873:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "2873:24:12"
																},
																"nativeSrc": "2873:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2873:31:12"
															},
															"nativeSrc": "2873:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2873:31:12"
														},
														{
															"nativeSrc": "2913:15:12",
															"nodeType": "YulAssignment",
															"src": "2913:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "2923:5:12",
																"nodeType": "YulIdentifier",
																"src": "2923:5:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2913:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2913:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2619:315:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2664:9:12",
														"nodeType": "YulTypedName",
														"src": "2664:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2675:7:12",
														"nodeType": "YulTypedName",
														"src": "2675:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2687:6:12",
														"nodeType": "YulTypedName",
														"src": "2687:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2695:6:12",
														"nodeType": "YulTypedName",
														"src": "2695:6:12",
														"type": ""
													}
												],
												"src": "2619:315:12"
											},
											{
												"body": {
													"nativeSrc": "3026:161:12",
													"nodeType": "YulBlock",
													"src": "3026:161:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3072:16:12",
																"nodeType": "YulBlock",
																"src": "3072:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3081:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3081:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3084:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3084:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3074:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3074:6:12"
																			},
																			"nativeSrc": "3074:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:12:12"
																		},
																		"nativeSrc": "3074:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3074:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3047:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3047:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3056:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3056:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3043:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3043:3:12"
																		},
																		"nativeSrc": "3043:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3043:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3068:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3068:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3039:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3039:3:12"
																},
																"nativeSrc": "3039:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3039:32:12"
															},
															"nativeSrc": "3036:52:12",
															"nodeType": "YulIf",
															"src": "3036:52:12"
														},
														{
															"nativeSrc": "3097:33:12",
															"nodeType": "YulAssignment",
															"src": "3097:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3120:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3120:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3107:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3107:12:12"
																},
																"nativeSrc": "3107:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3107:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3097:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3097:6:12"
																}
															]
														},
														{
															"nativeSrc": "3139:42:12",
															"nodeType": "YulAssignment",
															"src": "3139:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3166:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3166:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3177:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3177:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3162:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3162:3:12"
																		},
																		"nativeSrc": "3162:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3162:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3149:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3149:12:12"
																},
																"nativeSrc": "3149:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3149:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3139:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3139:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "2939:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2984:9:12",
														"nodeType": "YulTypedName",
														"src": "2984:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2995:7:12",
														"nodeType": "YulTypedName",
														"src": "2995:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3007:6:12",
														"nodeType": "YulTypedName",
														"src": "3007:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3015:6:12",
														"nodeType": "YulTypedName",
														"src": "3015:6:12",
														"type": ""
													}
												],
												"src": "2939:248:12"
											},
											{
												"body": {
													"nativeSrc": "3276:283:12",
													"nodeType": "YulBlock",
													"src": "3276:283:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3325:16:12",
																"nodeType": "YulBlock",
																"src": "3325:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3334:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3334:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3337:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3337:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3327:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3327:6:12"
																			},
																			"nativeSrc": "3327:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3327:12:12"
																		},
																		"nativeSrc": "3327:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3327:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3304:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3304:6:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3312:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3312:4:12",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3300:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3300:3:12"
																				},
																				"nativeSrc": "3300:17:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3300:17:12"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3319:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3319:3:12"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3296:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3296:3:12"
																		},
																		"nativeSrc": "3296:27:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3296:27:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3289:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3289:6:12"
																},
																"nativeSrc": "3289:35:12",
																"nodeType": "YulFunctionCall",
																"src": "3289:35:12"
															},
															"nativeSrc": "3286:55:12",
															"nodeType": "YulIf",
															"src": "3286:55:12"
														},
														{
															"nativeSrc": "3350:30:12",
															"nodeType": "YulAssignment",
															"src": "3350:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3373:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3373:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3360:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3360:12:12"
																},
																"nativeSrc": "3360:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3360:20:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3350:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3350:6:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3423:16:12",
																"nodeType": "YulBlock",
																"src": "3423:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3432:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3432:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3435:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3435:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3425:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3425:6:12"
																			},
																			"nativeSrc": "3425:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3425:12:12"
																		},
																		"nativeSrc": "3425:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3425:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3395:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3395:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3403:18:12",
																		"nodeType": "YulLiteral",
																		"src": "3403:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3392:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3392:2:12"
																},
																"nativeSrc": "3392:30:12",
																"nodeType": "YulFunctionCall",
																"src": "3392:30:12"
															},
															"nativeSrc": "3389:50:12",
															"nodeType": "YulIf",
															"src": "3389:50:12"
														},
														{
															"nativeSrc": "3448:29:12",
															"nodeType": "YulAssignment",
															"src": "3448:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3464:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3464:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3472:4:12",
																		"nodeType": "YulLiteral",
																		"src": "3472:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3460:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3460:3:12"
																},
																"nativeSrc": "3460:17:12",
																"nodeType": "YulFunctionCall",
																"src": "3460:17:12"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "3448:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "3448:8:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3537:16:12",
																"nodeType": "YulBlock",
																"src": "3537:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3546:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3546:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3549:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3539:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3539:6:12"
																			},
																			"nativeSrc": "3539:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3539:12:12"
																		},
																		"nativeSrc": "3539:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3539:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3500:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3500:6:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3512:1:12",
																								"nodeType": "YulLiteral",
																								"src": "3512:1:12",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "3515:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "3515:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3508:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3508:3:12"
																						},
																						"nativeSrc": "3508:14:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3508:14:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3496:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:12"
																				},
																				"nativeSrc": "3496:27:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:27:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3525:4:12",
																				"nodeType": "YulLiteral",
																				"src": "3525:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3492:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3492:3:12"
																		},
																		"nativeSrc": "3492:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3492:38:12"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3532:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3532:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3489:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3489:2:12"
																},
																"nativeSrc": "3489:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3489:47:12"
															},
															"nativeSrc": "3486:67:12",
															"nodeType": "YulIf",
															"src": "3486:67:12"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nativeSrc": "3192:367:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3239:6:12",
														"nodeType": "YulTypedName",
														"src": "3239:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3247:3:12",
														"nodeType": "YulTypedName",
														"src": "3247:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "3255:8:12",
														"nodeType": "YulTypedName",
														"src": "3255:8:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3265:6:12",
														"nodeType": "YulTypedName",
														"src": "3265:6:12",
														"type": ""
													}
												],
												"src": "3192:367:12"
											},
											{
												"body": {
													"nativeSrc": "3738:667:12",
													"nodeType": "YulBlock",
													"src": "3738:667:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3784:16:12",
																"nodeType": "YulBlock",
																"src": "3784:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3793:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3793:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3796:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3796:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3786:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3786:6:12"
																			},
																			"nativeSrc": "3786:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3786:12:12"
																		},
																		"nativeSrc": "3786:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3786:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3759:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3759:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3768:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3768:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3755:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3755:3:12"
																		},
																		"nativeSrc": "3755:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3755:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3780:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3780:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3751:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3751:3:12"
																},
																"nativeSrc": "3751:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3751:32:12"
															},
															"nativeSrc": "3748:52:12",
															"nodeType": "YulIf",
															"src": "3748:52:12"
														},
														{
															"nativeSrc": "3809:33:12",
															"nodeType": "YulAssignment",
															"src": "3809:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3832:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3832:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3819:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3819:12:12"
																},
																"nativeSrc": "3819:23:12",
																"nodeType": "YulFunctionCall",
																"src": "3819:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3809:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3809:6:12"
																}
															]
														},
														{
															"nativeSrc": "3851:46:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3851:46:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3882:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3882:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3893:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3893:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3878:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3878:3:12"
																		},
																		"nativeSrc": "3878:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3878:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3865:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3865:12:12"
																},
																"nativeSrc": "3865:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3865:32:12"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3855:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3855:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3906:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3906:28:12",
															"value": {
																"kind": "number",
																"nativeSrc": "3916:18:12",
																"nodeType": "YulLiteral",
																"src": "3916:18:12",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3910:2:12",
																	"nodeType": "YulTypedName",
																	"src": "3910:2:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3961:16:12",
																"nodeType": "YulBlock",
																"src": "3961:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3970:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3970:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3973:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3973:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3963:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3963:6:12"
																			},
																			"nativeSrc": "3963:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3963:12:12"
																		},
																		"nativeSrc": "3963:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3963:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3949:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3949:6:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "3957:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "3957:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3946:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3946:2:12"
																},
																"nativeSrc": "3946:14:12",
																"nodeType": "YulFunctionCall",
																"src": "3946:14:12"
															},
															"nativeSrc": "3943:34:12",
															"nodeType": "YulIf",
															"src": "3943:34:12"
														},
														{
															"nativeSrc": "3986:96:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3986:96:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4054:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4054:9:12"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4065:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4065:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4050:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4050:3:12"
																		},
																		"nativeSrc": "4050:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4050:22:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4074:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4074:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "4012:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "4012:37:12"
																},
																"nativeSrc": "4012:70:12",
																"nodeType": "YulFunctionCall",
																"src": "4012:70:12"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nativeSrc": "3990:8:12",
																	"nodeType": "YulTypedName",
																	"src": "3990:8:12",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nativeSrc": "4000:8:12",
																	"nodeType": "YulTypedName",
																	"src": "4000:8:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4091:18:12",
															"nodeType": "YulAssignment",
															"src": "4091:18:12",
															"value": {
																"name": "value1_1",
																"nativeSrc": "4101:8:12",
																"nodeType": "YulIdentifier",
																"src": "4101:8:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4091:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4091:6:12"
																}
															]
														},
														{
															"nativeSrc": "4118:18:12",
															"nodeType": "YulAssignment",
															"src": "4118:18:12",
															"value": {
																"name": "value2_1",
																"nativeSrc": "4128:8:12",
																"nodeType": "YulIdentifier",
																"src": "4128:8:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4118:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:12"
																}
															]
														},
														{
															"nativeSrc": "4145:48:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4145:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4178:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4178:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4189:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4189:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4174:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4174:3:12"
																		},
																		"nativeSrc": "4174:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4174:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4161:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4161:12:12"
																},
																"nativeSrc": "4161:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4161:32:12"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4149:8:12",
																	"nodeType": "YulTypedName",
																	"src": "4149:8:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4222:16:12",
																"nodeType": "YulBlock",
																"src": "4222:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4231:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4231:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4234:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4234:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4224:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4224:6:12"
																			},
																			"nativeSrc": "4224:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4224:12:12"
																		},
																		"nativeSrc": "4224:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4224:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "4208:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "4208:8:12"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4218:2:12",
																		"nodeType": "YulIdentifier",
																		"src": "4218:2:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4205:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4205:2:12"
																},
																"nativeSrc": "4205:16:12",
																"nodeType": "YulFunctionCall",
																"src": "4205:16:12"
															},
															"nativeSrc": "4202:36:12",
															"nodeType": "YulIf",
															"src": "4202:36:12"
														},
														{
															"nativeSrc": "4247:98:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4247:98:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4315:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4315:9:12"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "4326:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "4326:8:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4311:3:12"
																		},
																		"nativeSrc": "4311:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4311:24:12"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4337:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4337:7:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nativeSrc": "4273:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "4273:37:12"
																},
																"nativeSrc": "4273:72:12",
																"nodeType": "YulFunctionCall",
																"src": "4273:72:12"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nativeSrc": "4251:8:12",
																	"nodeType": "YulTypedName",
																	"src": "4251:8:12",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nativeSrc": "4261:8:12",
																	"nodeType": "YulTypedName",
																	"src": "4261:8:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4354:18:12",
															"nodeType": "YulAssignment",
															"src": "4354:18:12",
															"value": {
																"name": "value3_1",
																"nativeSrc": "4364:8:12",
																"nodeType": "YulIdentifier",
																"src": "4364:8:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4354:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:12"
																}
															]
														},
														{
															"nativeSrc": "4381:18:12",
															"nodeType": "YulAssignment",
															"src": "4381:18:12",
															"value": {
																"name": "value4_1",
																"nativeSrc": "4391:8:12",
																"nodeType": "YulIdentifier",
																"src": "4391:8:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4381:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4381:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "3564:841:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3672:9:12",
														"nodeType": "YulTypedName",
														"src": "3672:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3683:7:12",
														"nodeType": "YulTypedName",
														"src": "3683:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3695:6:12",
														"nodeType": "YulTypedName",
														"src": "3695:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3703:6:12",
														"nodeType": "YulTypedName",
														"src": "3703:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3711:6:12",
														"nodeType": "YulTypedName",
														"src": "3711:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3719:6:12",
														"nodeType": "YulTypedName",
														"src": "3719:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3727:6:12",
														"nodeType": "YulTypedName",
														"src": "3727:6:12",
														"type": ""
													}
												],
												"src": "3564:841:12"
											},
											{
												"body": {
													"nativeSrc": "4567:482:12",
													"nodeType": "YulBlock",
													"src": "4567:482:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "4614:16:12",
																"nodeType": "YulBlock",
																"src": "4614:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4623:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4623:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4626:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4626:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4616:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4616:6:12"
																			},
																			"nativeSrc": "4616:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4616:12:12"
																		},
																		"nativeSrc": "4616:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4616:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4588:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4588:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4597:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4597:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4584:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4584:3:12"
																		},
																		"nativeSrc": "4584:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4584:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4609:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4609:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4580:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4580:3:12"
																},
																"nativeSrc": "4580:33:12",
																"nodeType": "YulFunctionCall",
																"src": "4580:33:12"
															},
															"nativeSrc": "4577:53:12",
															"nodeType": "YulIf",
															"src": "4577:53:12"
														},
														{
															"nativeSrc": "4639:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4639:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4665:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4665:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4652:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4652:12:12"
																},
																"nativeSrc": "4652:23:12",
																"nodeType": "YulFunctionCall",
																"src": "4652:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4643:5:12",
																	"nodeType": "YulTypedName",
																	"src": "4643:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4709:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4709:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "4684:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "4684:24:12"
																},
																"nativeSrc": "4684:31:12",
																"nodeType": "YulFunctionCall",
																"src": "4684:31:12"
															},
															"nativeSrc": "4684:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "4684:31:12"
														},
														{
															"nativeSrc": "4724:15:12",
															"nodeType": "YulAssignment",
															"src": "4724:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "4734:5:12",
																"nodeType": "YulIdentifier",
																"src": "4734:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4724:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:12"
																}
															]
														},
														{
															"nativeSrc": "4748:42:12",
															"nodeType": "YulAssignment",
															"src": "4748:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4775:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4775:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4786:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4786:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4771:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:12"
																		},
																		"nativeSrc": "4771:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4758:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4758:12:12"
																},
																"nativeSrc": "4758:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4758:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4748:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4748:6:12"
																}
															]
														},
														{
															"nativeSrc": "4799:42:12",
															"nodeType": "YulAssignment",
															"src": "4799:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4826:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4837:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4822:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:12"
																		},
																		"nativeSrc": "4822:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4809:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4809:12:12"
																},
																"nativeSrc": "4809:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4809:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4799:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4799:6:12"
																}
															]
														},
														{
															"nativeSrc": "4850:47:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4850:47:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4882:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4882:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4893:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4893:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4878:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4878:3:12"
																		},
																		"nativeSrc": "4878:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4878:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4865:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "4865:12:12"
																},
																"nativeSrc": "4865:32:12",
																"nodeType": "YulFunctionCall",
																"src": "4865:32:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4854:7:12",
																	"nodeType": "YulTypedName",
																	"src": "4854:7:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4949:16:12",
																"nodeType": "YulBlock",
																"src": "4949:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4958:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4958:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4961:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4961:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4951:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4951:6:12"
																			},
																			"nativeSrc": "4951:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4951:12:12"
																		},
																		"nativeSrc": "4951:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4951:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nativeSrc": "4919:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4919:7:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nativeSrc": "4932:7:12",
																						"nodeType": "YulIdentifier",
																						"src": "4932:7:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4941:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4941:4:12",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4928:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4928:3:12"
																				},
																				"nativeSrc": "4928:18:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4928:18:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4916:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4916:2:12"
																		},
																		"nativeSrc": "4916:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4916:31:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4909:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4909:6:12"
																},
																"nativeSrc": "4909:39:12",
																"nodeType": "YulFunctionCall",
																"src": "4909:39:12"
															},
															"nativeSrc": "4906:59:12",
															"nodeType": "YulIf",
															"src": "4906:59:12"
														},
														{
															"nativeSrc": "4974:17:12",
															"nodeType": "YulAssignment",
															"src": "4974:17:12",
															"value": {
																"name": "value_1",
																"nativeSrc": "4984:7:12",
																"nodeType": "YulIdentifier",
																"src": "4984:7:12"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "4974:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4974:6:12"
																}
															]
														},
														{
															"nativeSrc": "5000:43:12",
															"nodeType": "YulAssignment",
															"src": "5000:43:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5027:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5038:3:12",
																				"nodeType": "YulLiteral",
																				"src": "5038:3:12",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5023:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5023:3:12"
																		},
																		"nativeSrc": "5023:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:19:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5010:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "5010:12:12"
																},
																"nativeSrc": "5010:33:12",
																"nodeType": "YulFunctionCall",
																"src": "5010:33:12"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "5000:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5000:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC3643Token_$2114t_uint256t_uint256t_uint8t_uint256",
												"nativeSrc": "4410:639:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4501:9:12",
														"nodeType": "YulTypedName",
														"src": "4501:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4512:7:12",
														"nodeType": "YulTypedName",
														"src": "4512:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4524:6:12",
														"nodeType": "YulTypedName",
														"src": "4524:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4532:6:12",
														"nodeType": "YulTypedName",
														"src": "4532:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4540:6:12",
														"nodeType": "YulTypedName",
														"src": "4540:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4548:6:12",
														"nodeType": "YulTypedName",
														"src": "4548:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4556:6:12",
														"nodeType": "YulTypedName",
														"src": "4556:6:12",
														"type": ""
													}
												],
												"src": "4410:639:12"
											},
											{
												"body": {
													"nativeSrc": "5175:427:12",
													"nodeType": "YulBlock",
													"src": "5175:427:12",
													"statements": [
														{
															"nativeSrc": "5185:12:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5185:12:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5195:2:12",
																"nodeType": "YulLiteral",
																"src": "5195:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "5189:2:12",
																	"nodeType": "YulTypedName",
																	"src": "5189:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5213:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5213:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5224:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5224:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5206:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5206:6:12"
																},
																"nativeSrc": "5206:21:12",
																"nodeType": "YulFunctionCall",
																"src": "5206:21:12"
															},
															"nativeSrc": "5206:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "5206:21:12"
														},
														{
															"nativeSrc": "5236:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5236:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5256:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5256:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5250:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "5250:5:12"
																},
																"nativeSrc": "5250:13:12",
																"nodeType": "YulFunctionCall",
																"src": "5250:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5240:6:12",
																	"nodeType": "YulTypedName",
																	"src": "5240:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5283:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5283:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5294:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5294:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5279:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:12"
																		},
																		"nativeSrc": "5279:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5299:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5299:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:12"
																},
																"nativeSrc": "5272:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5272:34:12"
															},
															"nativeSrc": "5272:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5272:34:12"
														},
														{
															"nativeSrc": "5315:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "5315:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "5324:1:12",
																"nodeType": "YulLiteral",
																"src": "5324:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5319:1:12",
																	"nodeType": "YulTypedName",
																	"src": "5319:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5384:90:12",
																"nodeType": "YulBlock",
																"src": "5384:90:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "5413:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "5413:9:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5424:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "5424:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5409:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5409:3:12"
																							},
																							"nativeSrc": "5409:17:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5409:17:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5428:2:12",
																							"nodeType": "YulLiteral",
																							"src": "5428:2:12",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5405:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5405:3:12"
																					},
																					"nativeSrc": "5405:26:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5405:26:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "5447:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "5447:6:12"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "5455:1:12",
																											"nodeType": "YulIdentifier",
																											"src": "5455:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5443:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "5443:3:12"
																									},
																									"nativeSrc": "5443:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "5443:14:12"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "5459:2:12",
																									"nodeType": "YulIdentifier",
																									"src": "5459:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5439:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "5439:3:12"
																							},
																							"nativeSrc": "5439:23:12",
																							"nodeType": "YulFunctionCall",
																							"src": "5439:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5433:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5433:5:12"
																					},
																					"nativeSrc": "5433:30:12",
																					"nodeType": "YulFunctionCall",
																					"src": "5433:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5398:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5398:6:12"
																			},
																			"nativeSrc": "5398:66:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5398:66:12"
																		},
																		"nativeSrc": "5398:66:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5398:66:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5345:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "5345:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5348:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5348:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5342:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "5342:2:12"
																},
																"nativeSrc": "5342:13:12",
																"nodeType": "YulFunctionCall",
																"src": "5342:13:12"
															},
															"nativeSrc": "5334:140:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5356:19:12",
																"nodeType": "YulBlock",
																"src": "5356:19:12",
																"statements": [
																	{
																		"nativeSrc": "5358:15:12",
																		"nodeType": "YulAssignment",
																		"src": "5358:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5367:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "5367:1:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "5370:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "5370:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5363:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "5363:3:12"
																			},
																			"nativeSrc": "5363:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5363:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5358:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "5358:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5338:3:12",
																"nodeType": "YulBlock",
																"src": "5338:3:12",
																"statements": []
															},
															"src": "5334:140:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5498:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5498:9:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5509:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5509:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5494:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5494:3:12"
																				},
																				"nativeSrc": "5494:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5494:22:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5518:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5518:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5490:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5490:3:12"
																		},
																		"nativeSrc": "5490:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5490:31:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5523:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5523:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5483:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5483:6:12"
																},
																"nativeSrc": "5483:42:12",
																"nodeType": "YulFunctionCall",
																"src": "5483:42:12"
															},
															"nativeSrc": "5483:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "5483:42:12"
														},
														{
															"nativeSrc": "5534:62:12",
															"nodeType": "YulAssignment",
															"src": "5534:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5550:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5550:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5569:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "5569:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5577:2:12",
																								"nodeType": "YulLiteral",
																								"src": "5577:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5565:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5565:3:12"
																						},
																						"nativeSrc": "5565:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5565:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5586:2:12",
																								"nodeType": "YulLiteral",
																								"src": "5586:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5582:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "5582:3:12"
																						},
																						"nativeSrc": "5582:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "5582:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5561:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5561:3:12"
																				},
																				"nativeSrc": "5561:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5561:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5546:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5546:3:12"
																		},
																		"nativeSrc": "5546:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5546:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5593:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5593:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5542:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5542:3:12"
																},
																"nativeSrc": "5542:54:12",
																"nodeType": "YulFunctionCall",
																"src": "5542:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5534:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5534:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5054:548:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5144:9:12",
														"nodeType": "YulTypedName",
														"src": "5144:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5155:6:12",
														"nodeType": "YulTypedName",
														"src": "5155:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5166:4:12",
														"nodeType": "YulTypedName",
														"src": "5166:4:12",
														"type": ""
													}
												],
												"src": "5054:548:12"
											},
											{
												"body": {
													"nativeSrc": "5708:125:12",
													"nodeType": "YulBlock",
													"src": "5708:125:12",
													"statements": [
														{
															"nativeSrc": "5718:26:12",
															"nodeType": "YulAssignment",
															"src": "5718:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5730:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5730:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5741:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5741:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5726:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5726:3:12"
																},
																"nativeSrc": "5726:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5726:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5718:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5718:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5760:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5760:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5775:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5775:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5783:42:12",
																				"nodeType": "YulLiteral",
																				"src": "5783:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5771:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5771:3:12"
																		},
																		"nativeSrc": "5771:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5771:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5753:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5753:6:12"
																},
																"nativeSrc": "5753:74:12",
																"nodeType": "YulFunctionCall",
																"src": "5753:74:12"
															},
															"nativeSrc": "5753:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "5753:74:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5607:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5677:9:12",
														"nodeType": "YulTypedName",
														"src": "5677:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5688:6:12",
														"nodeType": "YulTypedName",
														"src": "5688:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5699:4:12",
														"nodeType": "YulTypedName",
														"src": "5699:4:12",
														"type": ""
													}
												],
												"src": "5607:226:12"
											},
											{
												"body": {
													"nativeSrc": "5919:103:12",
													"nodeType": "YulBlock",
													"src": "5919:103:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5965:16:12",
																"nodeType": "YulBlock",
																"src": "5965:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5974:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5974:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5977:1:12",
																					"nodeType": "YulLiteral",
																					"src": "5977:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5967:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "5967:6:12"
																			},
																			"nativeSrc": "5967:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5967:12:12"
																		},
																		"nativeSrc": "5967:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5967:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5940:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5940:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5949:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5949:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5936:3:12"
																		},
																		"nativeSrc": "5936:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5936:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5961:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5961:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5932:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5932:3:12"
																},
																"nativeSrc": "5932:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5932:32:12"
															},
															"nativeSrc": "5929:52:12",
															"nodeType": "YulIf",
															"src": "5929:52:12"
														},
														{
															"nativeSrc": "5990:26:12",
															"nodeType": "YulAssignment",
															"src": "5990:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6006:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6006:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6000:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "6000:5:12"
																},
																"nativeSrc": "6000:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6000:16:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5990:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5990:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "5838:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5885:9:12",
														"nodeType": "YulTypedName",
														"src": "5885:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5896:7:12",
														"nodeType": "YulTypedName",
														"src": "5896:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5908:6:12",
														"nodeType": "YulTypedName",
														"src": "5908:6:12",
														"type": ""
													}
												],
												"src": "5838:184:12"
											},
											{
												"body": {
													"nativeSrc": "6059:152:12",
													"nodeType": "YulBlock",
													"src": "6059:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6076:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6076:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6079:77:12",
																		"nodeType": "YulLiteral",
																		"src": "6079:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6069:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6069:6:12"
																},
																"nativeSrc": "6069:88:12",
																"nodeType": "YulFunctionCall",
																"src": "6069:88:12"
															},
															"nativeSrc": "6069:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "6069:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6173:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6173:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6176:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6176:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6166:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6166:6:12"
																},
																"nativeSrc": "6166:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6166:15:12"
															},
															"nativeSrc": "6166:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6166:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6197:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6200:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6200:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6190:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6190:6:12"
																},
																"nativeSrc": "6190:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6190:15:12"
															},
															"nativeSrc": "6190:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6190:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6027:184:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6027:184:12"
											},
											{
												"body": {
													"nativeSrc": "6264:77:12",
													"nodeType": "YulBlock",
													"src": "6264:77:12",
													"statements": [
														{
															"nativeSrc": "6274:16:12",
															"nodeType": "YulAssignment",
															"src": "6274:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6285:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6285:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6288:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6288:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6281:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6281:3:12"
																},
																"nativeSrc": "6281:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6281:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6274:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6274:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6313:22:12",
																"nodeType": "YulBlock",
																"src": "6313:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6315:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6315:16:12"
																			},
																			"nativeSrc": "6315:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6315:18:12"
																		},
																		"nativeSrc": "6315:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6315:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6305:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6305:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6308:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6308:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6302:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6302:2:12"
																},
																"nativeSrc": "6302:10:12",
																"nodeType": "YulFunctionCall",
																"src": "6302:10:12"
															},
															"nativeSrc": "6299:36:12",
															"nodeType": "YulIf",
															"src": "6299:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6216:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6247:1:12",
														"nodeType": "YulTypedName",
														"src": "6247:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6250:1:12",
														"nodeType": "YulTypedName",
														"src": "6250:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6256:3:12",
														"nodeType": "YulTypedName",
														"src": "6256:3:12",
														"type": ""
													}
												],
												"src": "6216:125:12"
											},
											{
												"body": {
													"nativeSrc": "6520:166:12",
													"nodeType": "YulBlock",
													"src": "6520:166:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6537:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6537:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6548:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6548:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6530:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6530:6:12"
																},
																"nativeSrc": "6530:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6530:21:12"
															},
															"nativeSrc": "6530:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "6530:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6571:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6571:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6582:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6582:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6567:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6567:3:12"
																		},
																		"nativeSrc": "6567:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6567:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6587:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6587:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6560:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6560:6:12"
																},
																"nativeSrc": "6560:30:12",
																"nodeType": "YulFunctionCall",
																"src": "6560:30:12"
															},
															"nativeSrc": "6560:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "6560:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6610:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6610:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6621:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6621:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6606:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6606:3:12"
																		},
																		"nativeSrc": "6606:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6606:18:12"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f42414c",
																		"kind": "string",
																		"nativeSrc": "6626:18:12",
																		"nodeType": "YulLiteral",
																		"src": "6626:18:12",
																		"type": "",
																		"value": "INSUFFICIENT_BAL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6599:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6599:6:12"
																},
																"nativeSrc": "6599:46:12",
																"nodeType": "YulFunctionCall",
																"src": "6599:46:12"
															},
															"nativeSrc": "6599:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "6599:46:12"
														},
														{
															"nativeSrc": "6654:26:12",
															"nodeType": "YulAssignment",
															"src": "6654:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6666:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6666:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6677:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6677:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6662:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6662:3:12"
																},
																"nativeSrc": "6662:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6662:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6654:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6654:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2204223a7bbd7b9038b89e38862936a74c38617cdd0a5a77f69c308f09676d00__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6346:340:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6497:9:12",
														"nodeType": "YulTypedName",
														"src": "6497:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6511:4:12",
														"nodeType": "YulTypedName",
														"src": "6511:4:12",
														"type": ""
													}
												],
												"src": "6346:340:12"
											},
											{
												"body": {
													"nativeSrc": "6743:116:12",
													"nodeType": "YulBlock",
													"src": "6743:116:12",
													"statements": [
														{
															"nativeSrc": "6753:20:12",
															"nodeType": "YulAssignment",
															"src": "6753:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6768:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6768:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6771:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6771:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6764:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6764:3:12"
																},
																"nativeSrc": "6764:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6764:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6753:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6753:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6831:22:12",
																"nodeType": "YulBlock",
																"src": "6831:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6833:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6833:16:12"
																			},
																			"nativeSrc": "6833:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6833:18:12"
																		},
																		"nativeSrc": "6833:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6833:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6802:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "6802:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6795:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "6795:6:12"
																				},
																				"nativeSrc": "6795:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6795:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6809:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "6809:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6816:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "6816:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6825:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "6825:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6812:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "6812:3:12"
																						},
																						"nativeSrc": "6812:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "6812:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6806:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "6806:2:12"
																				},
																				"nativeSrc": "6806:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6806:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6792:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "6792:2:12"
																		},
																		"nativeSrc": "6792:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6792:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6785:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6785:6:12"
																},
																"nativeSrc": "6785:45:12",
																"nodeType": "YulFunctionCall",
																"src": "6785:45:12"
															},
															"nativeSrc": "6782:71:12",
															"nodeType": "YulIf",
															"src": "6782:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6691:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6722:1:12",
														"nodeType": "YulTypedName",
														"src": "6722:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6725:1:12",
														"nodeType": "YulTypedName",
														"src": "6725:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6731:7:12",
														"nodeType": "YulTypedName",
														"src": "6731:7:12",
														"type": ""
													}
												],
												"src": "6691:168:12"
											},
											{
												"body": {
													"nativeSrc": "6910:228:12",
													"nodeType": "YulBlock",
													"src": "6910:228:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6941:168:12",
																"nodeType": "YulBlock",
																"src": "6941:168:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6962:1:12",
																					"nodeType": "YulLiteral",
																					"src": "6962:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6965:77:12",
																					"nodeType": "YulLiteral",
																					"src": "6965:77:12",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6955:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "6955:6:12"
																			},
																			"nativeSrc": "6955:88:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6955:88:12"
																		},
																		"nativeSrc": "6955:88:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6955:88:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7063:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7063:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7066:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7066:4:12",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7056:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7056:6:12"
																			},
																			"nativeSrc": "7056:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7056:15:12"
																		},
																		"nativeSrc": "7056:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7056:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7091:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7091:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7094:4:12",
																					"nodeType": "YulLiteral",
																					"src": "7094:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7084:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7084:6:12"
																			},
																			"nativeSrc": "7084:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7084:15:12"
																		},
																		"nativeSrc": "7084:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7084:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6930:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6930:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6923:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:12"
																},
																"nativeSrc": "6923:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6923:9:12"
															},
															"nativeSrc": "6920:189:12",
															"nodeType": "YulIf",
															"src": "6920:189:12"
														},
														{
															"nativeSrc": "7118:14:12",
															"nodeType": "YulAssignment",
															"src": "7118:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7127:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7127:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7130:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7130:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7123:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7123:3:12"
																},
																"nativeSrc": "7123:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7123:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "7118:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "7118:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6864:274:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6895:1:12",
														"nodeType": "YulTypedName",
														"src": "6895:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6898:1:12",
														"nodeType": "YulTypedName",
														"src": "6898:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6904:1:12",
														"nodeType": "YulTypedName",
														"src": "6904:1:12",
														"type": ""
													}
												],
												"src": "6864:274:12"
											},
											{
												"body": {
													"nativeSrc": "7192:79:12",
													"nodeType": "YulBlock",
													"src": "7192:79:12",
													"statements": [
														{
															"nativeSrc": "7202:17:12",
															"nodeType": "YulAssignment",
															"src": "7202:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7214:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7214:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7217:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7217:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7210:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7210:3:12"
																},
																"nativeSrc": "7210:9:12",
																"nodeType": "YulFunctionCall",
																"src": "7210:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7202:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7202:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7243:22:12",
																"nodeType": "YulBlock",
																"src": "7243:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7245:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "7245:16:12"
																			},
																			"nativeSrc": "7245:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7245:18:12"
																		},
																		"nativeSrc": "7245:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7245:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7234:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "7234:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7240:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "7240:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7231:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "7231:2:12"
																},
																"nativeSrc": "7231:11:12",
																"nodeType": "YulFunctionCall",
																"src": "7231:11:12"
															},
															"nativeSrc": "7228:37:12",
															"nodeType": "YulIf",
															"src": "7228:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7143:128:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7174:1:12",
														"nodeType": "YulTypedName",
														"src": "7174:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7177:1:12",
														"nodeType": "YulTypedName",
														"src": "7177:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7183:4:12",
														"nodeType": "YulTypedName",
														"src": "7183:4:12",
														"type": ""
													}
												],
												"src": "7143:128:12"
											},
											{
												"body": {
													"nativeSrc": "7405:168:12",
													"nodeType": "YulBlock",
													"src": "7405:168:12",
													"statements": [
														{
															"nativeSrc": "7415:26:12",
															"nodeType": "YulAssignment",
															"src": "7415:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7427:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7427:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7438:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7438:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7423:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7423:3:12"
																},
																"nativeSrc": "7423:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7423:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7415:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7415:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7457:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7457:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7472:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7472:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7480:42:12",
																				"nodeType": "YulLiteral",
																				"src": "7480:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7468:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7468:3:12"
																		},
																		"nativeSrc": "7468:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7468:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7450:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7450:6:12"
																},
																"nativeSrc": "7450:74:12",
																"nodeType": "YulFunctionCall",
																"src": "7450:74:12"
															},
															"nativeSrc": "7450:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "7450:74:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7544:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7544:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7555:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7555:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7540:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7540:3:12"
																		},
																		"nativeSrc": "7540:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7540:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7560:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7560:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7533:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7533:6:12"
																},
																"nativeSrc": "7533:34:12",
																"nodeType": "YulFunctionCall",
																"src": "7533:34:12"
															},
															"nativeSrc": "7533:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "7533:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7276:297:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7366:9:12",
														"nodeType": "YulTypedName",
														"src": "7366:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7377:6:12",
														"nodeType": "YulTypedName",
														"src": "7377:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7385:6:12",
														"nodeType": "YulTypedName",
														"src": "7385:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7396:4:12",
														"nodeType": "YulTypedName",
														"src": "7396:4:12",
														"type": ""
													}
												],
												"src": "7276:297:12"
											},
											{
												"body": {
													"nativeSrc": "7656:199:12",
													"nodeType": "YulBlock",
													"src": "7656:199:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7702:16:12",
																"nodeType": "YulBlock",
																"src": "7702:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7711:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7711:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7714:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7714:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7704:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7704:6:12"
																			},
																			"nativeSrc": "7704:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7704:12:12"
																		},
																		"nativeSrc": "7704:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7704:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7677:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7677:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7686:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7686:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7673:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7673:3:12"
																		},
																		"nativeSrc": "7673:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7673:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7698:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7698:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7669:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7669:3:12"
																},
																"nativeSrc": "7669:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7669:32:12"
															},
															"nativeSrc": "7666:52:12",
															"nodeType": "YulIf",
															"src": "7666:52:12"
														},
														{
															"nativeSrc": "7727:29:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7727:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7746:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7746:9:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7740:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7740:5:12"
																},
																"nativeSrc": "7740:16:12",
																"nodeType": "YulFunctionCall",
																"src": "7740:16:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7731:5:12",
																	"nodeType": "YulTypedName",
																	"src": "7731:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7809:16:12",
																"nodeType": "YulBlock",
																"src": "7809:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7818:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7818:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7821:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7821:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7811:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7811:6:12"
																			},
																			"nativeSrc": "7811:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7811:12:12"
																		},
																		"nativeSrc": "7811:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7811:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7778:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7778:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7799:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "7799:5:12"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7792:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "7792:6:12"
																						},
																						"nativeSrc": "7792:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "7792:13:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7785:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "7785:6:12"
																				},
																				"nativeSrc": "7785:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7785:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7775:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7775:2:12"
																		},
																		"nativeSrc": "7775:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7775:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7768:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7768:6:12"
																},
																"nativeSrc": "7768:40:12",
																"nodeType": "YulFunctionCall",
																"src": "7768:40:12"
															},
															"nativeSrc": "7765:60:12",
															"nodeType": "YulIf",
															"src": "7765:60:12"
														},
														{
															"nativeSrc": "7834:15:12",
															"nodeType": "YulAssignment",
															"src": "7834:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "7844:5:12",
																"nodeType": "YulIdentifier",
																"src": "7844:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7834:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7834:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7578:277:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7622:9:12",
														"nodeType": "YulTypedName",
														"src": "7622:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7633:7:12",
														"nodeType": "YulTypedName",
														"src": "7633:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7645:6:12",
														"nodeType": "YulTypedName",
														"src": "7645:6:12",
														"type": ""
													}
												],
												"src": "7578:277:12"
											},
											{
												"body": {
													"nativeSrc": "8034:172:12",
													"nodeType": "YulBlock",
													"src": "8034:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8051:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8051:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8062:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8062:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8044:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:12"
																},
																"nativeSrc": "8044:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8044:21:12"
															},
															"nativeSrc": "8044:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8044:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8085:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8085:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8096:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8096:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8081:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8081:3:12"
																		},
																		"nativeSrc": "8081:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8081:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8101:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8101:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8074:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8074:6:12"
																},
																"nativeSrc": "8074:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8074:30:12"
															},
															"nativeSrc": "8074:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8074:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8124:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8124:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8135:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8135:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8120:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8120:3:12"
																		},
																		"nativeSrc": "8120:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8120:18:12"
																	},
																	{
																		"hexValue": "535441424c455f5452414e534645525f4641494c4544",
																		"kind": "string",
																		"nativeSrc": "8140:24:12",
																		"nodeType": "YulLiteral",
																		"src": "8140:24:12",
																		"type": "",
																		"value": "STABLE_TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8113:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8113:6:12"
																},
																"nativeSrc": "8113:52:12",
																"nodeType": "YulFunctionCall",
																"src": "8113:52:12"
															},
															"nativeSrc": "8113:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "8113:52:12"
														},
														{
															"nativeSrc": "8174:26:12",
															"nodeType": "YulAssignment",
															"src": "8174:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8186:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8186:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8197:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8197:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8182:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8182:3:12"
																},
																"nativeSrc": "8182:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8182:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8174:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8174:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f4d1a6d7d8a25833c643917dbdc7ad6ec4bfa4e2dea45c3be822af24a621e299__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7860:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8011:9:12",
														"nodeType": "YulTypedName",
														"src": "8011:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8025:4:12",
														"nodeType": "YulTypedName",
														"src": "8025:4:12",
														"type": ""
													}
												],
												"src": "7860:346:12"
											},
											{
												"body": {
													"nativeSrc": "8385:162:12",
													"nodeType": "YulBlock",
													"src": "8385:162:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8402:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8402:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8413:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8413:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8395:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8395:6:12"
																},
																"nativeSrc": "8395:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8395:21:12"
															},
															"nativeSrc": "8395:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8395:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8436:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8436:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8447:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8447:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8432:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8432:3:12"
																		},
																		"nativeSrc": "8432:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8432:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8452:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8452:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8425:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8425:6:12"
																},
																"nativeSrc": "8425:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8425:30:12"
															},
															"nativeSrc": "8425:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8425:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8475:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8475:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8486:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8486:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8471:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8471:3:12"
																		},
																		"nativeSrc": "8471:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8471:18:12"
																	},
																	{
																		"hexValue": "53574545505f4641494c4544",
																		"kind": "string",
																		"nativeSrc": "8491:14:12",
																		"nodeType": "YulLiteral",
																		"src": "8491:14:12",
																		"type": "",
																		"value": "SWEEP_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8464:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8464:6:12"
																},
																"nativeSrc": "8464:42:12",
																"nodeType": "YulFunctionCall",
																"src": "8464:42:12"
															},
															"nativeSrc": "8464:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "8464:42:12"
														},
														{
															"nativeSrc": "8515:26:12",
															"nodeType": "YulAssignment",
															"src": "8515:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8527:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8527:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8538:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8523:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8523:3:12"
																},
																"nativeSrc": "8523:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8523:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8515:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8515:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87d1d38fa197450bc123268bc8a27ff3ab3aa012371a74033ddcd71362d34110__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8211:336:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8362:9:12",
														"nodeType": "YulTypedName",
														"src": "8362:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8376:4:12",
														"nodeType": "YulTypedName",
														"src": "8376:4:12",
														"type": ""
													}
												],
												"src": "8211:336:12"
											},
											{
												"body": {
													"nativeSrc": "8726:171:12",
													"nodeType": "YulBlock",
													"src": "8726:171:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8743:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8743:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8754:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8754:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8736:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8736:6:12"
																},
																"nativeSrc": "8736:21:12",
																"nodeType": "YulFunctionCall",
																"src": "8736:21:12"
															},
															"nativeSrc": "8736:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "8736:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8777:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8777:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8788:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8788:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8773:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8773:3:12"
																		},
																		"nativeSrc": "8773:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8773:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8793:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8793:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8766:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8766:6:12"
																},
																"nativeSrc": "8766:30:12",
																"nodeType": "YulFunctionCall",
																"src": "8766:30:12"
															},
															"nativeSrc": "8766:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "8766:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8816:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8816:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8827:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8827:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8812:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8812:3:12"
																		},
																		"nativeSrc": "8812:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8812:18:12"
																	},
																	{
																		"hexValue": "41525241595f4c454e4754485f4d49534d41544348",
																		"kind": "string",
																		"nativeSrc": "8832:23:12",
																		"nodeType": "YulLiteral",
																		"src": "8832:23:12",
																		"type": "",
																		"value": "ARRAY_LENGTH_MISMATCH"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8805:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8805:6:12"
																},
																"nativeSrc": "8805:51:12",
																"nodeType": "YulFunctionCall",
																"src": "8805:51:12"
															},
															"nativeSrc": "8805:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "8805:51:12"
														},
														{
															"nativeSrc": "8865:26:12",
															"nodeType": "YulAssignment",
															"src": "8865:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8877:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8877:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8888:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8888:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8873:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8873:3:12"
																},
																"nativeSrc": "8873:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8873:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8865:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8865:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8552:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8703:9:12",
														"nodeType": "YulTypedName",
														"src": "8703:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8717:4:12",
														"nodeType": "YulTypedName",
														"src": "8717:4:12",
														"type": ""
													}
												],
												"src": "8552:345:12"
											},
											{
												"body": {
													"nativeSrc": "9076:172:12",
													"nodeType": "YulBlock",
													"src": "9076:172:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9093:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9093:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9104:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9104:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9086:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9086:6:12"
																},
																"nativeSrc": "9086:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9086:21:12"
															},
															"nativeSrc": "9086:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9086:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9127:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9127:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9138:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9138:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9123:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9123:3:12"
																		},
																		"nativeSrc": "9123:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9123:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9143:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9143:2:12",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9116:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9116:6:12"
																},
																"nativeSrc": "9116:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9116:30:12"
															},
															"nativeSrc": "9116:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9116:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9166:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9166:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9177:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9177:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9162:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9162:3:12"
																		},
																		"nativeSrc": "9162:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9162:18:12"
																	},
																	{
																		"hexValue": "494e53554646494349454e545f41444d494e5f42414c",
																		"kind": "string",
																		"nativeSrc": "9182:24:12",
																		"nodeType": "YulLiteral",
																		"src": "9182:24:12",
																		"type": "",
																		"value": "INSUFFICIENT_ADMIN_BAL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9155:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9155:6:12"
																},
																"nativeSrc": "9155:52:12",
																"nodeType": "YulFunctionCall",
																"src": "9155:52:12"
															},
															"nativeSrc": "9155:52:12",
															"nodeType": "YulExpressionStatement",
															"src": "9155:52:12"
														},
														{
															"nativeSrc": "9216:26:12",
															"nodeType": "YulAssignment",
															"src": "9216:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9228:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9228:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9239:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9239:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9224:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9224:3:12"
																},
																"nativeSrc": "9224:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9224:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9216:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9216:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_214decfc806888f72503545abf1650c3cb8a88f29582b5986097444c27d475ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8902:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9053:9:12",
														"nodeType": "YulTypedName",
														"src": "9053:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9067:4:12",
														"nodeType": "YulTypedName",
														"src": "9067:4:12",
														"type": ""
													}
												],
												"src": "8902:346:12"
											},
											{
												"body": {
													"nativeSrc": "9285:152:12",
													"nodeType": "YulBlock",
													"src": "9285:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9302:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9302:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9305:77:12",
																		"nodeType": "YulLiteral",
																		"src": "9305:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9295:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9295:6:12"
																},
																"nativeSrc": "9295:88:12",
																"nodeType": "YulFunctionCall",
																"src": "9295:88:12"
															},
															"nativeSrc": "9295:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "9295:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9399:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9399:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9402:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9402:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9392:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9392:6:12"
																},
																"nativeSrc": "9392:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9392:15:12"
															},
															"nativeSrc": "9392:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9392:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9423:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9423:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9426:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9426:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9416:6:12"
																},
																"nativeSrc": "9416:15:12",
																"nodeType": "YulFunctionCall",
																"src": "9416:15:12"
															},
															"nativeSrc": "9416:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "9416:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9253:184:12",
												"nodeType": "YulFunctionDefinition",
												"src": "9253:184:12"
											},
											{
												"body": {
													"nativeSrc": "9512:177:12",
													"nodeType": "YulBlock",
													"src": "9512:177:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9558:16:12",
																"nodeType": "YulBlock",
																"src": "9558:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9567:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9567:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9570:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9570:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9560:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9560:6:12"
																			},
																			"nativeSrc": "9560:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9560:12:12"
																		},
																		"nativeSrc": "9560:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9560:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9533:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9533:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9542:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9542:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9529:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9529:3:12"
																		},
																		"nativeSrc": "9529:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9529:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9554:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9554:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9525:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9525:3:12"
																},
																"nativeSrc": "9525:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9525:32:12"
															},
															"nativeSrc": "9522:52:12",
															"nodeType": "YulIf",
															"src": "9522:52:12"
														},
														{
															"nativeSrc": "9583:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9583:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9609:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9609:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9596:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "9596:12:12"
																},
																"nativeSrc": "9596:23:12",
																"nodeType": "YulFunctionCall",
																"src": "9596:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "9587:5:12",
																	"nodeType": "YulTypedName",
																	"src": "9587:5:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9653:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9653:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "9628:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "9628:24:12"
																},
																"nativeSrc": "9628:31:12",
																"nodeType": "YulFunctionCall",
																"src": "9628:31:12"
															},
															"nativeSrc": "9628:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "9628:31:12"
														},
														{
															"nativeSrc": "9668:15:12",
															"nodeType": "YulAssignment",
															"src": "9668:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "9678:5:12",
																"nodeType": "YulIdentifier",
																"src": "9678:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "9668:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9668:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9442:247:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9478:9:12",
														"nodeType": "YulTypedName",
														"src": "9478:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9489:7:12",
														"nodeType": "YulTypedName",
														"src": "9489:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9501:6:12",
														"nodeType": "YulTypedName",
														"src": "9501:6:12",
														"type": ""
													}
												],
												"src": "9442:247:12"
											},
											{
												"body": {
													"nativeSrc": "9868:167:12",
													"nodeType": "YulBlock",
													"src": "9868:167:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9885:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9885:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9896:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9896:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9878:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9878:6:12"
																},
																"nativeSrc": "9878:21:12",
																"nodeType": "YulFunctionCall",
																"src": "9878:21:12"
															},
															"nativeSrc": "9878:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "9878:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9919:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9919:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9930:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9930:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9915:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9915:3:12"
																		},
																		"nativeSrc": "9915:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9915:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9935:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9935:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9908:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9908:6:12"
																},
																"nativeSrc": "9908:30:12",
																"nodeType": "YulFunctionCall",
																"src": "9908:30:12"
															},
															"nativeSrc": "9908:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "9908:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9958:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9958:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9969:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9969:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9954:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9954:3:12"
																		},
																		"nativeSrc": "9954:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9954:18:12"
																	},
																	{
																		"hexValue": "494e56414c49445f5052494e434950414c",
																		"kind": "string",
																		"nativeSrc": "9974:19:12",
																		"nodeType": "YulLiteral",
																		"src": "9974:19:12",
																		"type": "",
																		"value": "INVALID_PRINCIPAL"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9947:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9947:6:12"
																},
																"nativeSrc": "9947:47:12",
																"nodeType": "YulFunctionCall",
																"src": "9947:47:12"
															},
															"nativeSrc": "9947:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "9947:47:12"
														},
														{
															"nativeSrc": "10003:26:12",
															"nodeType": "YulAssignment",
															"src": "10003:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10015:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10015:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10026:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10026:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10011:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10011:3:12"
																},
																"nativeSrc": "10011:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10011:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10003:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10003:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7cb342cb595ec1fa3179b8cca4a95fc160e3e9ba84273d658095957106dd18c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9694:341:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9845:9:12",
														"nodeType": "YulTypedName",
														"src": "9845:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9859:4:12",
														"nodeType": "YulTypedName",
														"src": "9859:4:12",
														"type": ""
													}
												],
												"src": "9694:341:12"
											},
											{
												"body": {
													"nativeSrc": "10214:164:12",
													"nodeType": "YulBlock",
													"src": "10214:164:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10231:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10231:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10242:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10242:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10224:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10224:6:12"
																},
																"nativeSrc": "10224:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10224:21:12"
															},
															"nativeSrc": "10224:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10224:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10265:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10265:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10276:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10276:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10261:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10261:3:12"
																		},
																		"nativeSrc": "10261:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10261:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10281:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10281:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10254:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10254:6:12"
																},
																"nativeSrc": "10254:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10254:30:12"
															},
															"nativeSrc": "10254:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10254:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10304:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10304:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10315:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10315:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10300:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10300:3:12"
																		},
																		"nativeSrc": "10300:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10300:18:12"
																	},
																	{
																		"hexValue": "494e56414c49445f535550504c59",
																		"kind": "string",
																		"nativeSrc": "10320:16:12",
																		"nodeType": "YulLiteral",
																		"src": "10320:16:12",
																		"type": "",
																		"value": "INVALID_SUPPLY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10293:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10293:6:12"
																},
																"nativeSrc": "10293:44:12",
																"nodeType": "YulFunctionCall",
																"src": "10293:44:12"
															},
															"nativeSrc": "10293:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "10293:44:12"
														},
														{
															"nativeSrc": "10346:26:12",
															"nodeType": "YulAssignment",
															"src": "10346:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10358:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10358:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10369:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10354:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10354:3:12"
																},
																"nativeSrc": "10354:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10354:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10346:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10346:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_25441db5b8ffe88664d2ec001eb1590f25a295726428902d60a1f9e95e736afd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10040:338:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10191:9:12",
														"nodeType": "YulTypedName",
														"src": "10191:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10205:4:12",
														"nodeType": "YulTypedName",
														"src": "10205:4:12",
														"type": ""
													}
												],
												"src": "10040:338:12"
											},
											{
												"body": {
													"nativeSrc": "10557:170:12",
													"nodeType": "YulBlock",
													"src": "10557:170:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10574:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10574:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10585:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10585:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10567:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10567:6:12"
																},
																"nativeSrc": "10567:21:12",
																"nodeType": "YulFunctionCall",
																"src": "10567:21:12"
															},
															"nativeSrc": "10567:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "10567:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10608:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10608:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10619:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10619:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10604:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10604:3:12"
																		},
																		"nativeSrc": "10604:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10604:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10624:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10624:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10597:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10597:6:12"
																},
																"nativeSrc": "10597:30:12",
																"nodeType": "YulFunctionCall",
																"src": "10597:30:12"
															},
															"nativeSrc": "10597:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "10597:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10647:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10647:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10658:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10658:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10643:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10643:3:12"
																		},
																		"nativeSrc": "10643:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10643:18:12"
																	},
																	{
																		"hexValue": "494e56414c49445f544f4b454e5f535550504c59",
																		"kind": "string",
																		"nativeSrc": "10663:22:12",
																		"nodeType": "YulLiteral",
																		"src": "10663:22:12",
																		"type": "",
																		"value": "INVALID_TOKEN_SUPPLY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10636:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10636:6:12"
																},
																"nativeSrc": "10636:50:12",
																"nodeType": "YulFunctionCall",
																"src": "10636:50:12"
															},
															"nativeSrc": "10636:50:12",
															"nodeType": "YulExpressionStatement",
															"src": "10636:50:12"
														},
														{
															"nativeSrc": "10695:26:12",
															"nodeType": "YulAssignment",
															"src": "10695:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10707:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10707:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10718:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10718:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10703:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10703:3:12"
																},
																"nativeSrc": "10703:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10703:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10695:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10695:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf9f72848977dbd5a0caa5dc319c57d87cc2289f8ecb5225f8a7c2d1fe6d7f56__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10383:344:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10534:9:12",
														"nodeType": "YulTypedName",
														"src": "10534:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10548:4:12",
														"nodeType": "YulTypedName",
														"src": "10548:4:12",
														"type": ""
													}
												],
												"src": "10383:344:12"
											},
											{
												"body": {
													"nativeSrc": "10913:217:12",
													"nodeType": "YulBlock",
													"src": "10913:217:12",
													"statements": [
														{
															"nativeSrc": "10923:27:12",
															"nodeType": "YulAssignment",
															"src": "10923:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10935:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10935:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10946:3:12",
																		"nodeType": "YulLiteral",
																		"src": "10946:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10931:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10931:3:12"
																},
																"nativeSrc": "10931:19:12",
																"nodeType": "YulFunctionCall",
																"src": "10931:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10923:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10923:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10966:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10966:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "10977:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10977:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10959:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10959:6:12"
																},
																"nativeSrc": "10959:25:12",
																"nodeType": "YulFunctionCall",
																"src": "10959:25:12"
															},
															"nativeSrc": "10959:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "10959:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11004:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11004:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11015:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11015:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11000:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11000:3:12"
																		},
																		"nativeSrc": "11000:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11000:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "11020:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11020:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10993:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10993:6:12"
																},
																"nativeSrc": "10993:34:12",
																"nodeType": "YulFunctionCall",
																"src": "10993:34:12"
															},
															"nativeSrc": "10993:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "10993:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11047:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11047:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11058:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11058:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11043:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11043:3:12"
																		},
																		"nativeSrc": "11043:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11043:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nativeSrc": "11067:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11067:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11075:4:12",
																				"nodeType": "YulLiteral",
																				"src": "11075:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11063:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11063:3:12"
																		},
																		"nativeSrc": "11063:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11063:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11036:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11036:6:12"
																},
																"nativeSrc": "11036:45:12",
																"nodeType": "YulFunctionCall",
																"src": "11036:45:12"
															},
															"nativeSrc": "11036:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "11036:45:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11101:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11101:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11112:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11112:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11097:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11097:3:12"
																		},
																		"nativeSrc": "11097:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11097:18:12"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "11117:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11117:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11090:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11090:6:12"
																},
																"nativeSrc": "11090:34:12",
																"nodeType": "YulFunctionCall",
																"src": "11090:34:12"
															},
															"nativeSrc": "11090:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "11090:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint8_t_uint256__to_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "10732:398:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10858:9:12",
														"nodeType": "YulTypedName",
														"src": "10858:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "10869:6:12",
														"nodeType": "YulTypedName",
														"src": "10869:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10877:6:12",
														"nodeType": "YulTypedName",
														"src": "10877:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10885:6:12",
														"nodeType": "YulTypedName",
														"src": "10885:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10893:6:12",
														"nodeType": "YulTypedName",
														"src": "10893:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10904:4:12",
														"nodeType": "YulTypedName",
														"src": "10904:4:12",
														"type": ""
													}
												],
												"src": "10732:398:12"
											},
											{
												"body": {
													"nativeSrc": "11292:241:12",
													"nodeType": "YulBlock",
													"src": "11292:241:12",
													"statements": [
														{
															"nativeSrc": "11302:26:12",
															"nodeType": "YulAssignment",
															"src": "11302:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11314:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11314:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11325:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11325:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11310:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11310:3:12"
																},
																"nativeSrc": "11310:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11310:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11302:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11302:4:12"
																}
															]
														},
														{
															"nativeSrc": "11337:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "11337:52:12",
															"value": {
																"kind": "number",
																"nativeSrc": "11347:42:12",
																"nodeType": "YulLiteral",
																"src": "11347:42:12",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11341:2:12",
																	"nodeType": "YulTypedName",
																	"src": "11341:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11405:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11405:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11420:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11420:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11428:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11428:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11416:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11416:3:12"
																		},
																		"nativeSrc": "11416:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11416:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11398:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11398:6:12"
																},
																"nativeSrc": "11398:34:12",
																"nodeType": "YulFunctionCall",
																"src": "11398:34:12"
															},
															"nativeSrc": "11398:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "11398:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11452:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11452:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11463:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11463:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11448:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11448:3:12"
																		},
																		"nativeSrc": "11448:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11448:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "11472:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11472:6:12"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "11480:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "11480:2:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11468:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11468:3:12"
																		},
																		"nativeSrc": "11468:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11468:15:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11441:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11441:6:12"
																},
																"nativeSrc": "11441:43:12",
																"nodeType": "YulFunctionCall",
																"src": "11441:43:12"
															},
															"nativeSrc": "11441:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "11441:43:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11504:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11504:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11515:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11515:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11500:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11500:3:12"
																		},
																		"nativeSrc": "11500:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11500:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "11520:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "11520:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11493:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11493:6:12"
																},
																"nativeSrc": "11493:34:12",
																"nodeType": "YulFunctionCall",
																"src": "11493:34:12"
															},
															"nativeSrc": "11493:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "11493:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "11135:398:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11245:9:12",
														"nodeType": "YulTypedName",
														"src": "11245:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11256:6:12",
														"nodeType": "YulTypedName",
														"src": "11256:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11264:6:12",
														"nodeType": "YulTypedName",
														"src": "11264:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11272:6:12",
														"nodeType": "YulTypedName",
														"src": "11272:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11283:4:12",
														"nodeType": "YulTypedName",
														"src": "11283:4:12",
														"type": ""
													}
												],
												"src": "11135:398:12"
											},
											{
												"body": {
													"nativeSrc": "11712:165:12",
													"nodeType": "YulBlock",
													"src": "11712:165:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11729:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11729:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11740:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11740:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11722:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11722:6:12"
																},
																"nativeSrc": "11722:21:12",
																"nodeType": "YulFunctionCall",
																"src": "11722:21:12"
															},
															"nativeSrc": "11722:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "11722:21:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11763:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11763:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11774:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11774:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11759:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11759:3:12"
																		},
																		"nativeSrc": "11759:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11759:18:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11779:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11779:2:12",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11752:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11752:6:12"
																},
																"nativeSrc": "11752:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11752:30:12"
															},
															"nativeSrc": "11752:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "11752:30:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11802:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11802:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11813:2:12",
																				"nodeType": "YulLiteral",
																				"src": "11813:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11798:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11798:3:12"
																		},
																		"nativeSrc": "11798:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11798:18:12"
																	},
																	{
																		"hexValue": "5452414e534645525f4641494c4544",
																		"kind": "string",
																		"nativeSrc": "11818:17:12",
																		"nodeType": "YulLiteral",
																		"src": "11818:17:12",
																		"type": "",
																		"value": "TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11791:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11791:6:12"
																},
																"nativeSrc": "11791:45:12",
																"nodeType": "YulFunctionCall",
																"src": "11791:45:12"
															},
															"nativeSrc": "11791:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "11791:45:12"
														},
														{
															"nativeSrc": "11845:26:12",
															"nodeType": "YulAssignment",
															"src": "11845:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11857:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "11857:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11868:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11868:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11853:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11853:3:12"
																},
																"nativeSrc": "11853:18:12",
																"nodeType": "YulFunctionCall",
																"src": "11853:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11845:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "11845:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11538:339:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11689:9:12",
														"nodeType": "YulTypedName",
														"src": "11689:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11703:4:12",
														"nodeType": "YulTypedName",
														"src": "11703:4:12",
														"type": ""
													}
												],
												"src": "11538:339:12"
											},
											{
												"body": {
													"nativeSrc": "12011:119:12",
													"nodeType": "YulBlock",
													"src": "12011:119:12",
													"statements": [
														{
															"nativeSrc": "12021:26:12",
															"nodeType": "YulAssignment",
															"src": "12021:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12033:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12033:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12044:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12044:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12029:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12029:3:12"
																},
																"nativeSrc": "12029:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12029:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12021:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12021:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12063:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12063:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12074:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12074:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12056:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12056:6:12"
																},
																"nativeSrc": "12056:25:12",
																"nodeType": "YulFunctionCall",
																"src": "12056:25:12"
															},
															"nativeSrc": "12056:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "12056:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12101:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12101:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12112:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12112:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12097:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12097:3:12"
																		},
																		"nativeSrc": "12097:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12097:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12117:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12117:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12090:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12090:6:12"
																},
																"nativeSrc": "12090:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12090:34:12"
															},
															"nativeSrc": "12090:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12090:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11882:248:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11972:9:12",
														"nodeType": "YulTypedName",
														"src": "11972:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11983:6:12",
														"nodeType": "YulTypedName",
														"src": "11983:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11991:6:12",
														"nodeType": "YulTypedName",
														"src": "11991:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12002:4:12",
														"nodeType": "YulTypedName",
														"src": "12002:4:12",
														"type": ""
													}
												],
												"src": "11882:248:12"
											},
											{
												"body": {
													"nativeSrc": "12182:88:12",
													"nodeType": "YulBlock",
													"src": "12182:88:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "12213:22:12",
																"nodeType": "YulBlock",
																"src": "12213:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12215:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12215:16:12"
																			},
																			"nativeSrc": "12215:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12215:18:12"
																		},
																		"nativeSrc": "12215:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12215:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12198:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12198:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12209:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12209:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "12205:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12205:3:12"
																		},
																		"nativeSrc": "12205:6:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12205:6:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12195:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12195:2:12"
																},
																"nativeSrc": "12195:17:12",
																"nodeType": "YulFunctionCall",
																"src": "12195:17:12"
															},
															"nativeSrc": "12192:43:12",
															"nodeType": "YulIf",
															"src": "12192:43:12"
														},
														{
															"nativeSrc": "12244:20:12",
															"nodeType": "YulAssignment",
															"src": "12244:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12255:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12255:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12262:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12262:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12251:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12251:3:12"
																},
																"nativeSrc": "12251:13:12",
																"nodeType": "YulFunctionCall",
																"src": "12251:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12244:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12244:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "12135:135:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12164:5:12",
														"nodeType": "YulTypedName",
														"src": "12164:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12174:3:12",
														"nodeType": "YulTypedName",
														"src": "12174:3:12",
														"type": ""
													}
												],
												"src": "12135:135:12"
											},
											{
												"body": {
													"nativeSrc": "12320:130:12",
													"nodeType": "YulBlock",
													"src": "12320:130:12",
													"statements": [
														{
															"nativeSrc": "12330:31:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12330:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12349:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12349:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12356:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12356:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12345:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12345:3:12"
																},
																"nativeSrc": "12345:16:12",
																"nodeType": "YulFunctionCall",
																"src": "12345:16:12"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "12334:7:12",
																	"nodeType": "YulTypedName",
																	"src": "12334:7:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12391:22:12",
																"nodeType": "YulBlock",
																"src": "12391:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12393:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "12393:16:12"
																			},
																			"nativeSrc": "12393:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12393:18:12"
																		},
																		"nativeSrc": "12393:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12393:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "12376:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "12376:7:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12385:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12385:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12373:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12373:2:12"
																},
																"nativeSrc": "12373:17:12",
																"nodeType": "YulFunctionCall",
																"src": "12373:17:12"
															},
															"nativeSrc": "12370:43:12",
															"nodeType": "YulIf",
															"src": "12370:43:12"
														},
														{
															"nativeSrc": "12422:22:12",
															"nodeType": "YulAssignment",
															"src": "12422:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "12433:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "12433:7:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12442:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12442:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12429:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12429:3:12"
																},
																"nativeSrc": "12429:15:12",
																"nodeType": "YulFunctionCall",
																"src": "12429:15:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12422:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12422:3:12"
																}
															]
														}
													]
												},
												"name": "increment_t_uint8",
												"nativeSrc": "12275:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12302:5:12",
														"nodeType": "YulTypedName",
														"src": "12302:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12312:3:12",
														"nodeType": "YulTypedName",
														"src": "12312:3:12",
														"type": ""
													}
												],
												"src": "12275:175:12"
											},
											{
												"body": {
													"nativeSrc": "12592:119:12",
													"nodeType": "YulBlock",
													"src": "12592:119:12",
													"statements": [
														{
															"nativeSrc": "12602:26:12",
															"nodeType": "YulAssignment",
															"src": "12602:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12614:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12614:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12625:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12625:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12610:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12610:3:12"
																},
																"nativeSrc": "12610:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12610:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12602:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12602:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12644:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12644:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "12655:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12655:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12637:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12637:6:12"
																},
																"nativeSrc": "12637:25:12",
																"nodeType": "YulFunctionCall",
																"src": "12637:25:12"
															},
															"nativeSrc": "12637:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "12637:25:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12682:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12682:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12693:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12693:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12678:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12678:3:12"
																		},
																		"nativeSrc": "12678:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12678:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12698:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12671:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12671:6:12"
																},
																"nativeSrc": "12671:34:12",
																"nodeType": "YulFunctionCall",
																"src": "12671:34:12"
															},
															"nativeSrc": "12671:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "12671:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12455:256:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12553:9:12",
														"nodeType": "YulTypedName",
														"src": "12553:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12564:6:12",
														"nodeType": "YulTypedName",
														"src": "12564:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12572:6:12",
														"nodeType": "YulTypedName",
														"src": "12572:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12583:4:12",
														"nodeType": "YulTypedName",
														"src": "12583:4:12",
														"type": ""
													}
												],
												"src": "12455:256:12"
											},
											{
												"body": {
													"nativeSrc": "12771:382:12",
													"nodeType": "YulBlock",
													"src": "12771:382:12",
													"statements": [
														{
															"nativeSrc": "12781:22:12",
															"nodeType": "YulAssignment",
															"src": "12781:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12795:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12795:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "12798:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12798:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "12791:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12791:3:12"
																},
																"nativeSrc": "12791:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12791:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12781:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12781:6:12"
																}
															]
														},
														{
															"nativeSrc": "12812:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "12812:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12842:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12842:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12848:1:12",
																		"nodeType": "YulLiteral",
																		"src": "12848:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12838:3:12"
																},
																"nativeSrc": "12838:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12838:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12816:18:12",
																	"nodeType": "YulTypedName",
																	"src": "12816:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12889:31:12",
																"nodeType": "YulBlock",
																"src": "12889:31:12",
																"statements": [
																	{
																		"nativeSrc": "12891:27:12",
																		"nodeType": "YulAssignment",
																		"src": "12891:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12905:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "12905:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12913:4:12",
																					"nodeType": "YulLiteral",
																					"src": "12913:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12901:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "12901:3:12"
																			},
																			"nativeSrc": "12901:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12901:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12891:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12891:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12869:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "12869:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12862:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12862:6:12"
																},
																"nativeSrc": "12862:26:12",
																"nodeType": "YulFunctionCall",
																"src": "12862:26:12"
															},
															"nativeSrc": "12859:61:12",
															"nodeType": "YulIf",
															"src": "12859:61:12"
														},
														{
															"body": {
																"nativeSrc": "12979:168:12",
																"nodeType": "YulBlock",
																"src": "12979:168:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13000:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13000:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13003:77:12",
																					"nodeType": "YulLiteral",
																					"src": "13003:77:12",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12993:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12993:6:12"
																			},
																			"nativeSrc": "12993:88:12",
																			"nodeType": "YulFunctionCall",
																			"src": "12993:88:12"
																		},
																		"nativeSrc": "12993:88:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "12993:88:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13101:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13101:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13104:4:12",
																					"nodeType": "YulLiteral",
																					"src": "13104:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "13094:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13094:6:12"
																			},
																			"nativeSrc": "13094:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13094:15:12"
																		},
																		"nativeSrc": "13094:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13094:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "13129:1:12",
																					"nodeType": "YulLiteral",
																					"src": "13129:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13132:4:12",
																					"nodeType": "YulLiteral",
																					"src": "13132:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "13122:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13122:6:12"
																			},
																			"nativeSrc": "13122:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "13122:15:12"
																		},
																		"nativeSrc": "13122:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "13122:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12935:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "12935:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12958:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12958:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12966:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12966:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12955:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "12955:2:12"
																		},
																		"nativeSrc": "12955:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12955:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12932:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "12932:2:12"
																},
																"nativeSrc": "12932:38:12",
																"nodeType": "YulFunctionCall",
																"src": "12932:38:12"
															},
															"nativeSrc": "12929:218:12",
															"nodeType": "YulIf",
															"src": "12929:218:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12716:437:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12751:4:12",
														"nodeType": "YulTypedName",
														"src": "12751:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12760:6:12",
														"nodeType": "YulTypedName",
														"src": "12760:6:12",
														"type": ""
													}
												],
												"src": "12716:437:12"
											},
											{
												"body": {
													"nativeSrc": "13287:168:12",
													"nodeType": "YulBlock",
													"src": "13287:168:12",
													"statements": [
														{
															"nativeSrc": "13297:26:12",
															"nodeType": "YulAssignment",
															"src": "13297:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13309:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13309:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13320:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13320:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13305:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13305:3:12"
																},
																"nativeSrc": "13305:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13305:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13297:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13297:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13339:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13339:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13354:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13354:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13362:42:12",
																				"nodeType": "YulLiteral",
																				"src": "13362:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13350:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13350:3:12"
																		},
																		"nativeSrc": "13350:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13350:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13332:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13332:6:12"
																},
																"nativeSrc": "13332:74:12",
																"nodeType": "YulFunctionCall",
																"src": "13332:74:12"
															},
															"nativeSrc": "13332:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "13332:74:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13426:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13426:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13437:2:12",
																				"nodeType": "YulLiteral",
																				"src": "13437:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13422:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13422:3:12"
																		},
																		"nativeSrc": "13422:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13422:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13442:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13442:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13415:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13415:6:12"
																},
																"nativeSrc": "13415:34:12",
																"nodeType": "YulFunctionCall",
																"src": "13415:34:12"
															},
															"nativeSrc": "13415:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "13415:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "13158:297:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13248:9:12",
														"nodeType": "YulTypedName",
														"src": "13248:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13259:6:12",
														"nodeType": "YulTypedName",
														"src": "13259:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13267:6:12",
														"nodeType": "YulTypedName",
														"src": "13267:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13278:4:12",
														"nodeType": "YulTypedName",
														"src": "13278:4:12",
														"type": ""
													}
												],
												"src": "13158:297:12"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$1108__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_ERC3643Token_$2114_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint8_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_decode_tuple_t_contract$_ERC3643Token_$2114t_uint256t_uint256t_uint8t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(0, 0) }\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_2204223a7bbd7b9038b89e38862936a74c38617cdd0a5a77f69c308f09676d00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"INSUFFICIENT_BAL\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_f4d1a6d7d8a25833c643917dbdc7ad6ec4bfa4e2dea45c3be822af24a621e299__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"STABLE_TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87d1d38fa197450bc123268bc8a27ff3ab3aa012371a74033ddcd71362d34110__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"SWEEP_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ARRAY_LENGTH_MISMATCH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_214decfc806888f72503545abf1650c3cb8a88f29582b5986097444c27d475ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"INSUFFICIENT_ADMIN_BAL\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d7cb342cb595ec1fa3179b8cca4a95fc160e3e9ba84273d658095957106dd18c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"INVALID_PRINCIPAL\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_25441db5b8ffe88664d2ec001eb1590f25a295726428902d60a1f9e95e736afd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"INVALID_SUPPLY\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bf9f72848977dbd5a0caa5dc319c57d87cc2289f8ecb5225f8a7c2d1fe6d7f56__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"INVALID_TOKEN_SUPPLY\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint8_t_uint256__to_t_uint256_t_uint256_t_uint8_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint8(value) -> ret\n    {\n        let value_1 := and(value, 0xff)\n        if eq(value_1, 0xff) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_rational_0_by_1_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1342": [
									{
										"length": 32,
										"start": 558
									},
									{
										"length": 32,
										"start": 2046
									},
									{
										"length": 32,
										"start": 2352
									},
									{
										"length": 32,
										"start": 4137
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a25760003560e01c80635c975abb116100ee5780639612df5c11610097578063bef6f54011610071578063bef6f54014610400578063d547741f14610413578063eac989f814610426578063f0f9243b1461043b57600080fd5b80639612df5c146103d2578063a217fddf146103e5578063bd85b039146103ed57600080fd5b80638456cb59116100c85780638456cb5914610380578063897a36511461038857806391d148541461039b57600080fd5b80635c975abb146103595780636ea056a9146103645780637b3baab41461037757600080fd5b8063248a9ca31161015057806336568abe1161012a57806336568abe1461032b5780633f4ba83a1461033e578063441a3e701461034657600080fd5b8063248a9ca31461026857806326c259621461028b5780632f2ff15d1461031857600080fd5b80630bfed82a116101815780630bfed82a1461021757806318160ddd1461022157806322be3de11461022957600080fd5b8062fdd58e146101a757806301ffc9a7146101cd57806309a01608146101f0575b600080fd5b6101ba6101b5366004611707565b610444565b6040519081526020015b60405180910390f35b6101e06101db366004611733565b6104c7565b60405190151581526020016101c4565b6101ba7f250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db698053781565b61021f61052e565b005b6101ba610538565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101c4565b6101ba610276366004611764565b60009081526020819052604090206001015490565b6102de610299366004611764565b60056020819052600091825260409091208054600182015460028301546003840154600485015494909501546001600160a01b03909316949193909260ff9092169186565b604080516001600160a01b03909716875260208701959095529385019290925260ff166060840152608083015260a082015260c0016101c4565b61021f61032636600461177d565b610567565b61021f61033936600461177d565b610592565b61021f6105e3565b61021f6103543660046117ad565b6105f9565b60015460ff166101e0565b61021f610372366004611707565b6108ff565b6101ba60045481565b61021f6109e9565b61021f61039636600461181b565b6109fc565b6101e06103a936600461177d565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61021f6103e0366004611895565b610cc0565b6101ba600081565b6101ba6103fb366004611764565b610f2d565b61021f61040e366004611764565b610fbc565b61021f61042136600461177d565b6112ab565b61042e6112d0565b6040516101c491906118ed565b6101ba60035481565b6000818152600560205260408082205490516370a0823160e01b81526001600160a01b038581166004830152909116906370a0823190602401602060405180830381865afa15801561049a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104be919061193c565b90505b92915050565b60006001600160e01b031982167f7965db0b0000000000000000000000000000000000000000000000000000000014806104c157507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316146104c1565b61053661135e565b565b6000805b6003548110156105635761054f81610f2d565b610559908361196b565b915060010161053c565b5090565b60008281526020819052604090206001015461058281611407565b61058c8383611411565b50505050565b6001600160a01b03811633146105d4576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105de82826114bb565b505050565b60006105ee81611407565b6105f661153e565b50565b610601611590565b60008281526005602052604090819020805491516370a0823160e01b815233600482015290916001600160a01b031690839082906370a0823190602401602060405180830381865afa15801561065b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067f919061193c565b10156106d25760405162461bcd60e51b815260206004820152601060248201527f494e53554646494349454e545f42414c0000000000000000000000000000000060448201526064015b60405180910390fd5b6000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610736919061193c565b848460050154610746919061197e565b6107509190611995565b90508083600501600082825461076691906119b7565b90915550506040517f9dc29fac000000000000000000000000000000000000000000000000000000008152336004820152602481018590526001600160a01b03831690639dc29fac90604401600060405180830381600087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b505060405163a9059cbb60e01b8152336004820152602481018490527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316925063a9059cbb91506044016020604051808303816000875af1158015610851573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087591906119ca565b6108c15760405162461bcd60e51b815260206004820152601660248201527f535441424c455f5452414e534645525f4641494c45440000000000000000000060448201526064016106c9565b604051818152859033907ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060200160405180910390a35050505050565b600061090a81611407565b60405163a9059cbb60e01b81526001600160a01b038481166004830152602482018490527f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610979573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099d91906119ca565b6105de5760405162461bcd60e51b815260206004820152600c60248201527f53574545505f4641494c4544000000000000000000000000000000000000000060448201526064016106c9565b60006109f481611407565b6105f66115cd565b6000610a0781611407565b6000868152600560205260409020546001600160a01b0316848314610a6e5760405162461bcd60e51b815260206004820152601560248201527f41525241595f4c454e4754485f4d49534d41544348000000000000000000000060448201526064016106c9565b610aaa84848080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525061160892505050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa158015610aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b12919061193c565b1015610b605760405162461bcd60e51b815260206004820152601660248201527f494e53554646494349454e545f41444d494e5f42414c0000000000000000000060448201526064016106c9565b60005b85811015610cb657816001600160a01b031663a9059cbb888884818110610b8c57610b8c6119ec565b9050602002016020810190610ba19190611a02565b878785818110610bb357610bb36119ec565b6040516001600160e01b031960e087901b1681526001600160a01b03909416600485015260200291909101356024830152506044016020604051808303816000875af1158015610c07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2b91906119ca565b50868682818110610c3e57610c3e6119ec565b9050602002016020810190610c539190611a02565b6001600160a01b0316887fb6bcab815b7a952b8759f2f92fc9981dc1156f6c11bf4dc7e9cb3036495e653a878785818110610c9057610c906119ec565b90506020020135604051610ca691815260200190565b60405180910390a3600101610b63565b5050505050505050565b6000610ccb81611407565b60008511610d1b5760405162461bcd60e51b815260206004820152601160248201527f494e56414c49445f5052494e434950414c00000000000000000000000000000060448201526064016106c9565b60008211610d6b5760405162461bcd60e51b815260206004820152600e60248201527f494e56414c49445f535550504c5900000000000000000000000000000000000060448201526064016106c9565b856001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dcd919061193c565b8214610e1b5760405162461bcd60e51b815260206004820152601460248201527f494e56414c49445f544f4b454e5f535550504c5900000000000000000000000060448201526064016106c9565b600354610e2981600161196b565b60039081556040805160c0810182526001600160a01b038a8116825260208083018b81528385018b815260ff8b8116606080880182815260006080808b0182815260a08c018381528f84526005808c52938e90209c518d547fffffffffffffffffffffffff0000000000000000000000000000000000000000169c169b909b178c55975160018c0155955160028b015590519a8901805460ff19169b9094169a909a17909255925160048701559351949096019390935583518b81529081018a905292830191909152810185905282917f564b343ad33dbf7eb84ef778355be83df7b0a44ce6021e56d7bd757a03c03544910160405180910390a250505050505050565b60008181526005602090815260408083205481517f18160ddd00000000000000000000000000000000000000000000000000000000815291516001600160a01b03909116926318160ddd92600480820193918290030181865afa158015610f98573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c1919061193c565b610fc4611590565b7f250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db6980537610fee81611407565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af115801561107a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109e91906119ca565b6110ea5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106c9565b6110f261135e565b8160005b60ff8160ff161080156111095750600082115b156112675760005b600354811080156111225750600083115b15611256576000818152600560205260409020600381015460ff84811691161461114c5750611246565b600084826004015411156111605784611166565b81600401545b90508082600401600082825461117c91906119b7565b9250508190555080826005016000828254611197919061196b565b909155506111a7905081866119b7565b9450600085836001015411156111bd57856111c3565b82600101545b9050808360010160008282546111d991906119b7565b92505081905550808360050160008282546111f4919061196b565b90915550611204905081876119b7565b604080518481526020810184905291975085917fc679124717471d056fe130fb8066ce200851eec03c00256ee1158b7d2354036f910160405180910390a25050505b61124f81611a1f565b9050611111565b5061126081611a38565b90506110f6565b50604080516000815260208101839052600019917fc679124717471d056fe130fb8066ce200851eec03c00256ee1158b7d2354036f910160405180910390a2505050565b6000828152602081905260409020600101546112c681611407565b61058c83836114bb565b600280546112dd90611a57565b80601f016020809104026020016040519081016040528092919081815260200182805461130990611a57565b80156113565780601f1061132b57610100808354040283529160200191611356565b820191906000526020600020905b81548152906001019060200180831161133957829003601f168201915b505050505081565b60006004544261136e91906119b7565b90508060000361137b5750565b4260045560005b60035481101561140357600081815260056020526040812060018101549091036113ac57506113fb565b600064496cebb80084836002015484600101546113c9919061197e565b6113d3919061197e565b6113dd9190611995565b9050808260040160008282546113f3919061196b565b909155505050505b600101611382565b5050565b6105f6813361164a565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166114b3576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561146b3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016104c1565b5060006104c1565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16156114b3576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45060016104c1565b6115466116b6565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60015460ff1615610536576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6115d5611590565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611573565b6000805b825181101561164457828181518110611627576116276119ec565b60200260200101518261163a919061196b565b915060010161160c565b50919050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16611403576040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602481018390526044016106c9565b60015460ff16610536576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001600160a01b03811681146105f657600080fd5b6000806040838503121561171a57600080fd5b8235611725816116f2565b946020939093013593505050565b60006020828403121561174557600080fd5b81356001600160e01b03198116811461175d57600080fd5b9392505050565b60006020828403121561177657600080fd5b5035919050565b6000806040838503121561179057600080fd5b8235915060208301356117a2816116f2565b809150509250929050565b600080604083850312156117c057600080fd5b50508035926020909101359150565b60008083601f8401126117e157600080fd5b50813567ffffffffffffffff8111156117f957600080fd5b6020830191508360208260051b850101111561181457600080fd5b9250929050565b60008060008060006060868803121561183357600080fd5b85359450602086013567ffffffffffffffff8082111561185257600080fd5b61185e89838a016117cf565b9096509450604088013591508082111561187757600080fd5b50611884888289016117cf565b969995985093965092949392505050565b600080600080600060a086880312156118ad57600080fd5b85356118b8816116f2565b94506020860135935060408601359250606086013560ff811681146118dc57600080fd5b949793965091946080013592915050565b60006020808352835180602085015260005b8181101561191b578581018301518582016040015282016118ff565b506000604082860101526040601f19601f8301168501019250505092915050565b60006020828403121561194e57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156104c1576104c1611955565b80820281158282048414176104c1576104c1611955565b6000826119b257634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156104c1576104c1611955565b6000602082840312156119dc57600080fd5b8151801515811461175d57600080fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215611a1457600080fd5b813561175d816116f2565b600060018201611a3157611a31611955565b5060010190565b600060ff821660ff8103611a4e57611a4e611955565b60010192915050565b600181811c90821680611a6b57607f821691505b60208210810361164457634e487b7160e01b600052602260045260246000fdfea26469706673582212203fda974b9d73d244202ae7c03d275c28f0c0156d9039d135031062fadbd523fb64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5C975ABB GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x9612DF5C GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xBEF6F540 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBEF6F540 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x413 JUMPI DUP1 PUSH4 0xEAC989F8 EQ PUSH2 0x426 JUMPI DUP1 PUSH4 0xF0F9243B EQ PUSH2 0x43B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9612DF5C EQ PUSH2 0x3D2 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x380 JUMPI DUP1 PUSH4 0x897A3651 EQ PUSH2 0x388 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x6EA056A9 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x7B3BAAB4 EQ PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x150 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x12A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x32B JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x33E JUMPI DUP1 PUSH4 0x441A3E70 EQ PUSH2 0x346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x26C25962 EQ PUSH2 0x28B JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFED82A GT PUSH2 0x181 JUMPI DUP1 PUSH4 0xBFED82A EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x22BE3DE1 EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1A7 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x9A01608 EQ PUSH2 0x1F0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1BA PUSH2 0x1B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E0 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1733 JUMP JUMPDEST PUSH2 0x4C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x1BA PUSH32 0x250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537 DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x52E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BA PUSH2 0x538 JUMP JUMPDEST PUSH2 0x250 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2DE PUSH2 0x299 CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD SWAP5 SWAP1 SWAP6 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 SWAP2 SWAP4 SWAP1 SWAP3 PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 DUP7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP8 AND DUP8 MSTORE PUSH1 0x20 DUP8 ADD SWAP6 SWAP1 SWAP6 MSTORE SWAP4 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0xFF AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD PUSH2 0x1C4 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x326 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x567 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x339 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x592 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x17AD JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x372 CALLDATASIZE PUSH1 0x4 PUSH2 0x1707 JUMP JUMPDEST PUSH2 0x8FF JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x9E9 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x396 CALLDATASIZE PUSH1 0x4 PUSH2 0x181B JUMP JUMPDEST PUSH2 0x9FC JUMP JUMPDEST PUSH2 0x1E0 PUSH2 0x3A9 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x21F PUSH2 0x3E0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1895 JUMP JUMPDEST PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1BA PUSH2 0x3FB CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x21F PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x1764 JUMP JUMPDEST PUSH2 0xFBC JUMP JUMPDEST PUSH2 0x21F PUSH2 0x421 CALLDATASIZE PUSH1 0x4 PUSH2 0x177D JUMP JUMPDEST PUSH2 0x12AB JUMP JUMPDEST PUSH2 0x42E PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C4 SWAP2 SWAP1 PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x1BA PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x49A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x4C1 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x536 PUSH2 0x135E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x563 JUMPI PUSH2 0x54F DUP2 PUSH2 0xF2D JUMP JUMPDEST PUSH2 0x559 SWAP1 DUP4 PUSH2 0x196B JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x53C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x582 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x58C DUP4 DUP4 PUSH2 0x1411 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5DE DUP3 DUP3 PUSH2 0x14BB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EE DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x153E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD SWAP2 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP4 SWAP1 DUP3 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x65B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x67F SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST LT ISZERO PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F42414C00000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST DUP5 DUP5 PUSH1 0x5 ADD SLOAD PUSH2 0x746 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x750 SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0x9DC29FAC00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x9DC29FAC SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 POP PUSH4 0xA9059CBB SWAP2 POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x851 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x875 SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x8C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x535441424C455F5452414E534645525F4641494C454400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE DUP6 SWAP1 CALLER SWAP1 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x90A DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x979 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53574545505F4641494C45440000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F4 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x5F6 PUSH2 0x15CD JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA07 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 DUP4 EQ PUSH2 0xA6E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x41525241595F4C454E4754485F4D49534D415443480000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0xAAA DUP5 DUP5 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1608 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB12 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST LT ISZERO PUSH2 0xB60 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E53554646494349454E545F41444D494E5F42414C00000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0xCB6 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB DUP9 DUP9 DUP5 DUP2 DUP2 LT PUSH2 0xB8C JUMPI PUSH2 0xB8C PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xBA1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0xBB3 JUMPI PUSH2 0xBB3 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP8 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x20 MUL SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD PUSH1 0x24 DUP4 ADD MSTORE POP PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC07 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC2B SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST POP DUP7 DUP7 DUP3 DUP2 DUP2 LT PUSH2 0xC3E JUMPI PUSH2 0xC3E PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH32 0xB6BCAB815B7A952B8759F2F92FC9981DC1156F6C11BF4DC7E9CB3036495E653A DUP8 DUP8 DUP6 DUP2 DUP2 LT PUSH2 0xC90 JUMPI PUSH2 0xC90 PUSH2 0x19EC JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0xCA6 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 ADD PUSH2 0xB63 JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCCB DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x0 DUP6 GT PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F5052494E434950414C000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F535550504C59000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x18160DDD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDA9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDCD SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST DUP3 EQ PUSH2 0xE1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x494E56414C49445F544F4B454E5F535550504C59000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0xE29 DUP2 PUSH1 0x1 PUSH2 0x196B JUMP JUMPDEST PUSH1 0x3 SWAP1 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP12 DUP2 MSTORE DUP4 DUP6 ADD DUP12 DUP2 MSTORE PUSH1 0xFF DUP12 DUP2 AND PUSH1 0x60 DUP1 DUP9 ADD DUP3 DUP2 MSTORE PUSH1 0x0 PUSH1 0x80 DUP1 DUP12 ADD DUP3 DUP2 MSTORE PUSH1 0xA0 DUP13 ADD DUP4 DUP2 MSTORE DUP16 DUP5 MSTORE PUSH1 0x5 DUP1 DUP13 MSTORE SWAP4 DUP15 SWAP1 KECCAK256 SWAP13 MLOAD DUP14 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND SWAP13 AND SWAP12 SWAP1 SWAP12 OR DUP13 SSTORE SWAP8 MLOAD PUSH1 0x1 DUP13 ADD SSTORE SWAP6 MLOAD PUSH1 0x2 DUP12 ADD SSTORE SWAP1 MLOAD SWAP11 DUP10 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP12 SWAP1 SWAP5 AND SWAP11 SWAP1 SWAP11 OR SWAP1 SWAP3 SSTORE SWAP3 MLOAD PUSH1 0x4 DUP8 ADD SSTORE SWAP4 MLOAD SWAP5 SWAP1 SWAP7 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP12 DUP2 MSTORE SWAP1 DUP2 ADD DUP11 SWAP1 MSTORE SWAP3 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 ADD DUP6 SWAP1 MSTORE DUP3 SWAP2 PUSH32 0x564B343AD33DBF7EB84EF778355BE83DF7B0A44CE6021E56D7BD757A03C03544 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP2 MLOAD PUSH32 0x18160DDD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 PUSH4 0x18160DDD SWAP3 PUSH1 0x4 DUP1 DUP3 ADD SWAP4 SWAP2 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x193C JUMP JUMPDEST PUSH2 0xFC4 PUSH2 0x1590 JUMP JUMPDEST PUSH32 0x250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537 PUSH2 0xFEE DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x107A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x109E SWAP2 SWAP1 PUSH2 0x19CA JUMP JUMPDEST PUSH2 0x10EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5452414E534645525F4641494C45440000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH2 0x10F2 PUSH2 0x135E JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST PUSH1 0xFF DUP2 PUSH1 0xFF AND LT DUP1 ISZERO PUSH2 0x1109 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x1267 JUMPI PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT DUP1 ISZERO PUSH2 0x1122 JUMPI POP PUSH1 0x0 DUP4 GT JUMPDEST ISZERO PUSH2 0x1256 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x114C JUMPI POP PUSH2 0x1246 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 PUSH1 0x4 ADD SLOAD GT ISZERO PUSH2 0x1160 JUMPI DUP5 PUSH2 0x1166 JUMP JUMPDEST DUP2 PUSH1 0x4 ADD SLOAD JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117C SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1197 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11A7 SWAP1 POP DUP2 DUP7 PUSH2 0x19B7 JUMP JUMPDEST SWAP5 POP PUSH1 0x0 DUP6 DUP4 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x11BD JUMPI DUP6 PUSH2 0x11C3 JUMP JUMPDEST DUP3 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11D9 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP4 PUSH1 0x5 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x11F4 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1204 SWAP1 POP DUP2 DUP8 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP8 POP DUP6 SWAP2 PUSH32 0xC679124717471D056FE130FB8066CE200851EEC03C00256EE1158B7D2354036F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMPDEST PUSH2 0x124F DUP2 PUSH2 0x1A1F JUMP JUMPDEST SWAP1 POP PUSH2 0x1111 JUMP JUMPDEST POP PUSH2 0x1260 DUP2 PUSH2 0x1A38 JUMP JUMPDEST SWAP1 POP PUSH2 0x10F6 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 NOT SWAP2 PUSH32 0xC679124717471D056FE130FB8066CE200851EEC03C00256EE1158B7D2354036F SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x12C6 DUP2 PUSH2 0x1407 JUMP JUMPDEST PUSH2 0x58C DUP4 DUP4 PUSH2 0x14BB JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x12DD SWAP1 PUSH2 0x1A57 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1309 SWAP1 PUSH2 0x1A57 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1356 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x132B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1356 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1339 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD TIMESTAMP PUSH2 0x136E SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 SUB PUSH2 0x137B JUMPI POP JUMP JUMPDEST TIMESTAMP PUSH1 0x4 SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x3 SLOAD DUP2 LT ISZERO PUSH2 0x1403 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 SWAP2 SUB PUSH2 0x13AC JUMPI POP PUSH2 0x13FB JUMP JUMPDEST PUSH1 0x0 PUSH5 0x496CEBB800 DUP5 DUP4 PUSH1 0x2 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x13C9 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x13D3 SWAP2 SWAP1 PUSH2 0x197E JUMP JUMPDEST PUSH2 0x13DD SWAP2 SWAP1 PUSH2 0x1995 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x13F3 SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1382 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x5F6 DUP2 CALLER PUSH2 0x164A JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x14B3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x146B CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C1 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4C1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14B3 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x4C1 JUMP JUMPDEST PUSH2 0x1546 PUSH2 0x16B6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15D5 PUSH2 0x1590 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1573 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x1644 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1627 JUMPI PUSH2 0x1627 PUSH2 0x19EC JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH2 0x163A SWAP2 SWAP1 PUSH2 0x196B JUMP JUMPDEST SWAP2 POP PUSH1 0x1 ADD PUSH2 0x160C JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1403 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6C9 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x536 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1725 DUP2 PUSH2 0x16F2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1745 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x175D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1776 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1790 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x17A2 DUP2 PUSH2 0x16F2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x17E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x1814 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1833 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1852 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x185E DUP10 DUP4 DUP11 ADD PUSH2 0x17CF JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1877 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1884 DUP9 DUP3 DUP10 ADD PUSH2 0x17CF JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x18AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x18B8 DUP2 PUSH2 0x16F2 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x18DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 SWAP8 SWAP4 SWAP7 POP SWAP2 SWAP5 PUSH1 0x80 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x191B JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x18FF JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x194E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1955 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x19B2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI PUSH2 0x4C1 PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x175D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x175D DUP2 PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1A31 JUMPI PUSH2 0x1A31 PUSH2 0x1955 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND PUSH1 0xFF DUP2 SUB PUSH2 0x1A4E JUMPI PUSH2 0x1A4E PUSH2 0x1955 JUMP JUMPDEST PUSH1 0x1 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1A6B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1644 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODEHASH 0xDA SWAP8 0x4B SWAP14 PUSH20 0xD244202AE7C03D275C28F0C0156D9039D1350310 PUSH3 0xFADBD5 0x23 0xFB PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "289:6574:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6720:141;;;;;;:::i;:::-;;:::i;:::-;;;639:25:12;;;627:2;612:18;6720:141:10;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;1177:14:12;;1170:22;1152:41;;1140:2;1125:18;2565:202:0;1012:187:12;342:66:10;;382:26;342:66;;3286:65;;;:::i;:::-;;6543:171;;;:::i;674:30::-;;;;;;;;-1:-1:-1;;;;;1565:55:12;;;1547:74;;1535:2;1520:18;674:30:10;1386:241:12;3810:120:0;;;;;;:::i;:::-;3875:7;3901:12;;;;;;;;;;:22;;;;3810:120;776:43:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;776:43:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2324:55:12;;;2306:74;;2411:2;2396:18;;2389:34;;;;2439:18;;;2432:34;;;;2514:4;2502:17;2497:2;2482:18;;2475:45;2551:3;2536:19;;2529:35;2595:3;2580:19;;2573:35;2293:3;2278:19;776:43:10;2002:612:12;4226:136:0;;;;;;:::i;:::-;;:::i;5328:245::-;;;;;;:::i;:::-;;:::i;6045:72:10:-;;;:::i;5266:553::-;;;;;;:::i;:::-;;:::i;1726:84:7:-;1796:7;;;;1726:84;;6123:150:10;;;;;;:::i;:::-;;:::i;744:26::-;;;;;;5972:68;;;:::i;2362:586::-;;;;;;:::i;:::-;;:::i;2854:136:0:-;;;;;;:::i;:::-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136;1600:756:10;;;;;;:::i;:::-;;:::i;2187:49:0:-;;2232:4;2187:49;;6418:119:10;;;;;;:::i;:::-;;:::i;3975:1140::-;;;;;;:::i;:::-;;:::i;4642:138:0:-;;;;;;:::i;:::-;;:::i;651:17:10:-;;;:::i;:::-;;;;;;;:::i;710:28::-;;;;;;6720:141;6791:7;6817:12;;;:8;:12;;;;;;:18;:37;;-1:-1:-1;;;6817:37:10;;-1:-1:-1;;;;;1565:55:12;;;6817:37:10;;;1547:74:12;6817:18:10;;;;:28;;1520:18:12;;6817:37:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6810:44;;6720:141;;;;;:::o;2565:202:0:-;2650:4;-1:-1:-1;;;;;;2673:47:0;;2688:32;2673:47;;:87;;-1:-1:-1;877:25:8;-1:-1:-1;;;;;;862:40:8;;;2724:36:0;763:146:8;3286:65:10;3328:20;:18;:20::i;:::-;3286:65::o;6543:171::-;6587:13;;6612:96;6638:13;;6633:2;:18;6612:96;;;6682:15;6694:2;6682:11;:15::i;:::-;6673:24;;;;:::i;:::-;;-1:-1:-1;6653:4:10;;6612:96;;;;6543:171;:::o;4226:136:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:6;5421:34:0;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;6045:72:10:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;6104:10:10::1;:8;:10::i;:::-;6045:72:::0;:::o;5266:553::-;1350:19:7;:17;:19::i;:::-;5345:17:10::1;5365:12:::0;;;:8:::1;:12;::::0;;;;;;5408:7;;5433:27;;-1:-1:-1;;;5433:27:10;;5449:10:::1;5433:27;::::0;::::1;1547:74:12::0;5365:12:10;;-1:-1:-1;;;;;5408:7:10::1;::::0;5464:6;;5408:7;;5433:15:::1;::::0;1520:18:12;;5433:27:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;;5425:66;;;::::0;-1:-1:-1;;;5425:66:10;;6548:2:12;5425:66:10::1;::::0;::::1;6530:21:12::0;6587:2;6567:18;;;6560:30;6626:18;6606;;;6599:46;6662:18;;5425:66:10::1;;;;;;;;;5502:15;5549:5;-1:-1:-1::0;;;;;5549:17:10::1;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5539:6;5521:1;:15;;;:24;;;;:::i;:::-;5520:48;;;;:::i;:::-;5502:66;;5597:7;5578:1;:15;;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5615:30:10::1;::::0;;;;5626:10:::1;5615:30;::::0;::::1;7450:74:12::0;7540:18;;;7533:34;;;-1:-1:-1;;;;;5615:10:10;::::1;::::0;::::1;::::0;7423:18:12;;5615:30:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;5701:36:10::1;::::0;-1:-1:-1;;;5701:36:10;;5717:10:::1;5701:36;::::0;::::1;7450:74:12::0;7540:18;;;7533:34;;;5701:6:10::1;-1:-1:-1::0;;;;;5701:15:10::1;::::0;-1:-1:-1;5701:15:10::1;::::0;-1:-1:-1;7423:18:12;;5701:36:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5693:71;;;::::0;-1:-1:-1;;;5693:71:10;;8062:2:12;5693:71:10::1;::::0;::::1;8044:21:12::0;8101:2;8081:18;;;8074:30;8140:24;8120:18;;;8113:52;8182:18;;5693:71:10::1;7860:346:12::0;5693:71:10::1;5779:33;::::0;639:25:12;;;5800:2:10;;5788:10:::1;::::0;5779:33:::1;::::0;627:2:12;612:18;5779:33:10::1;;;;;;;5335:484;;;5266:553:::0;;:::o;6123:150::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;6222:27:10::1;::::0;-1:-1:-1;;;6222:27:10;;-1:-1:-1;;;;;7468:55:12;;;6222:27:10::1;::::0;::::1;7450:74:12::0;7540:18;;;7533:34;;;6222:6:10::1;:15;::::0;::::1;::::0;7423:18:12;;6222:27:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6214:52;;;::::0;-1:-1:-1;;;6214:52:10;;8413:2:12;6214:52:10::1;::::0;::::1;8395:21:12::0;8452:2;8432:18;;;8425:30;8491:14;8471:18;;;8464:42;8523:18;;6214:52:10::1;8211:336:12::0;5972:68:10;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;6029:8:10::1;:6;:8::i;2362:586::-:0;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;2541:18:10::1;2562:12:::0;;;:8:::1;:12;::::0;;;;:18;-1:-1:-1;;;;;2562:18:10::1;2598:34:::0;;::::1;2590:68;;;::::0;-1:-1:-1;;;2590:68:10;;8754:2:12;2590:68:10::1;::::0;::::1;8736:21:12::0;8793:2;8773:18;;;8766:30;8832:23;8812:18;;;8805:51;8873:18;;2590:68:10::1;8552:345:12::0;2590:68:10::1;2710:21;2723:7;;2710:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;2710:12:10::1;::::0;-1:-1:-1;;;2710:21:10:i:1;:::-;2676:30;::::0;-1:-1:-1;;;2676:30:10;;2700:4:::1;2676:30;::::0;::::1;1547:74:12::0;-1:-1:-1;;;;;2676:15:10;::::1;::::0;::::1;::::0;1520:18:12;;2676:30:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;2668:90;;;::::0;-1:-1:-1;;;2668:90:10;;9104:2:12;2668:90:10::1;::::0;::::1;9086:21:12::0;9143:2;9123:18;;;9116:30;9182:24;9162:18;;;9155:52;9224:18;;2668:90:10::1;8902:346:12::0;2668:90:10::1;2774:9;2769:173;2789:20:::0;;::::1;2769:173;;;2830:5;-1:-1:-1::0;;;;;2830:14:10::1;;2845:9;;2855:1;2845:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2859:7;;2867:1;2859:10;;;;;;;:::i;:::-;2830:40;::::0;-1:-1:-1;;;;;;2830:40:10::1;::::0;;;;;;-1:-1:-1;;;;;7468:55:12;;;2830:40:10::1;::::0;::::1;7450:74:12::0;2859:10:10::1;;::::0;;;::::1;;7540:18:12::0;;;7533:34;-1:-1:-1;7423:18:12;;2830:40:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2906:9;;2916:1;2906:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2889:42:10::1;2902:2;2889:42;2920:7;;2928:1;2920:10;;;;;;;:::i;:::-;;;;;;;2889:42;;;;639:25:12::0;;627:2;612:18;;493:177;2889:42:10::1;;;;;;;;2811:3;;2769:173;;;;2531:417;2362:586:::0;;;;;;:::o;1600:756::-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;1828:1:10::1;1816:9;:13;1808:43;;;::::0;-1:-1:-1;;;1808:43:10;;9896:2:12;1808:43:10::1;::::0;::::1;9878:21:12::0;9935:2;9915:18;;;9908:30;9974:19;9954:18;;;9947:47;10011:18;;1808:43:10::1;9694:341:12::0;1808:43:10::1;1878:1;1869:6;:10;1861:37;;;::::0;-1:-1:-1;;;1861:37:10;;10242:2:12;1861:37:10::1;::::0;::::1;10224:21:12::0;10281:2;10261:18;;;10254:30;10320:16;10300:18;;;10293:44;10354:18;;1861:37:10::1;10040:338:12::0;1861:37:10::1;1926:5;-1:-1:-1::0;;;;;1926:17:10::1;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1916:6;:29;1908:62;;;::::0;-1:-1:-1;;;1908:62:10;;10585:2:12;1908:62:10::1;::::0;::::1;10567:21:12::0;10624:2;10604:18;;;10597:30;10663:22;10643:18;;;10636:50;10703:18;;1908:62:10::1;10383:344:12::0;1908:62:10::1;1994:13;::::0;2033:6:::1;1994:13:::0;2038:1:::1;2033:6;:::i;:::-;2017:13;:22:::0;;;2065:209:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;2065:209:10;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;;;;::::1;::::0;;::::1;::::0;;;;;;;-1:-1:-1;2065:209:10;;;;;;;;;;;;;2050:12;;;:8:::1;:12:::0;;;;;;;:224;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;;-1:-1:-1;2050:224:10;::::1;::::0;;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;-1:-1:-1;;2050:224:10::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;;;2290:59;;10959:25:12;;;11000:18;;;10993:34;;;11043:18;;;11036:45;;;;11097:18;;11090:34;;;2050:12:10;;2290:59:::1;::::0;10931:19:12;2290:59:10::1;;;;;;;1798:558;1600:756:::0;;;;;;:::o;6418:119::-;6472:7;6498:12;;;:8;:12;;;;;;;;:18;:32;;;;;;;-1:-1:-1;;;;;6498:18:10;;;;:30;;:32;;;;;;;;;;;:18;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3975:1140::-;1350:19:7;:17;:19::i;:::-;382:26:10::1;2464:16:0;2475:4;2464:10;:16::i;:::-;4114:54:10::2;::::0;;;;4134:10:::2;4114:54;::::0;::::2;11398:34:12::0;4154:4:10::2;11448:18:12::0;;;11441:43;11500:18;;;11493:34;;;4114:6:10::2;-1:-1:-1::0;;;;;4114:19:10::2;::::0;::::2;::::0;11310:18:12;;4114:54:10::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4106:82;;;::::0;-1:-1:-1;;;4106:82:10;;11740:2:12;4106:82:10::2;::::0;::::2;11722:21:12::0;11779:2;11759:18;;;11752:30;11818:17;11798:18;;;11791:45;11853:18;;4106:82:10::2;11538:339:12::0;4106:82:10::2;4198:20;:18;:20::i;:::-;4249:6:::0;4229:17:::2;4266:761;4288:3;4284:1;:7;;;:24;;;;;4307:1;4295:9;:13;4284:24;4266:761;;;4334:10;4329:688;4355:13;;4350:2;:18;:35;;;;;4384:1;4372:9;:13;4350:35;4329:688;;;4411:17;4431:12:::0;;;:8:::2;:12;::::0;;;;4465:11:::2;::::0;::::2;::::0;:16:::2;::::0;;::::2;:11:::0;::::2;:16;4461:30;;4483:8;;;4461:30;4510:14;4548:9;4527:1;:17;;;:30;;:62;;4580:9;4527:62;;;4560:1;:17;;;4527:62;4510:79;;4628:6;4607:1;:17;;;:27;;;;;;;:::i;:::-;;;;;;;;4672:6;4652:1;:15;;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4696:26:10::2;::::0;-1:-1:-1;4716:6:10;4696:26;::::2;:::i;:::-;;;4741:15;4774:9;4759:1;:11;;;:24;;:50;;4800:9;4759:50;;;4786:1;:11;;;4759:50;4741:68;;4846:7;4827:1;:11;;;:26;;;;;;;:::i;:::-;;;;;;;;4890:7;4871:1;:15;;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;4915:26:10::2;::::0;-1:-1:-1;4934:7:10;4915:26;::::2;:::i;:::-;4965:37;::::0;;12056:25:12;;;12112:2;12097:18;;12090:34;;;4915:26:10;;-1:-1:-1;4982:2:10;;4965:37:::2;::::0;12029:18:12;4965:37:10::2;;;;;;;4393:624;;;4329:688;4387:4;::::0;::::2;:::i;:::-;;;4329:688;;;-1:-1:-1::0;4310:3:10::2;::::0;::::2;:::i;:::-;;;4266:761;;;-1:-1:-1::0;5042:49:10::2;::::0;;5078:1:::2;12056:25:12::0;;12112:2;12097:18;;12090:34;;;-1:-1:-1;;5059:17:10;5042:49:::2;::::0;12029:18:12;5042:49:10::2;;;;;;;4096:1019;1379:1:7::1;3975:1140:10::0;:::o;4642:138:0:-;3875:7;3901:12;;;;;;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;651:17:10:-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3358:455::-;3407:10;3438:11;;3420:15;:29;;;;:::i;:::-;3407:42;;3463:2;3469:1;3463:7;3459:20;;3472:7;3358:455::o;3459:20::-;3502:15;3488:11;:29;3534:10;3529:278;3555:13;;3550:2;:18;3529:278;;;3590:17;3610:12;;;:8;:12;;;;;3640:11;;;;3610:12;;3640:16;3636:30;;3658:8;;;3636:30;3680:16;3735:17;3728:2;3714:1;:11;;;3700:1;:11;;;:25;;;;:::i;:::-;:30;;;;:::i;:::-;3699:54;;;;:::i;:::-;3680:73;;3788:8;3767:1;:17;;;:29;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;3529:278:10;3570:4;;3529:278;;;;3397:416;3358:455::o;3199:103:0:-;3265:30;3276:4;735:10:6;3265::0;:30::i;6179:316::-;6256:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:6;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6732:317;6810:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6826:217;;;6900:5;6868:12;;;;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:6;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;2586:117:7;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:7::1;::::0;;2674:22:::1;735:10:6::0;2683:12:7::1;2674:22;::::0;-1:-1:-1;;;;;1565:55:12;;;1547:74;;1535:2;1520:18;2674:22:7::1;;;;;;;2586:117::o:0;1878:128::-;1796:7;;;;1939:61;;;1974:15;;;;;;;;;;;;;;2339:115;1350:19;:17;:19::i;:::-;2408:4:::1;2398:14:::0;;-1:-1:-1;;2398:14:7::1;::::0;::::1;::::0;;2427:20:::1;735:10:6::0;2434:12:7::1;656:96:6::0;2954:175:10;3021:11;;3044:79;3068:3;:10;3064:1;:14;3044:79;;;3106:3;3110:1;3106:6;;;;;;;;:::i;:::-;;;;;;;3099:13;;;;;:::i;:::-;;-1:-1:-1;3080:3:10;;3044:79;;;;2954:175;;;:::o;3432:197:0:-;2931:4;2954:12;;;;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;3515:108;;3565:47;;;;;-1:-1:-1;;;;;7468:55:12;;3565:47:0;;;7450:74:12;7540:18;;;7533:34;;;7423:18;;3565:47:0;7276:297:12;2078:126:7;1796:7;;;;2136:62;;2172:15;;;;;;;;;;;;;;14:154:12;-1:-1:-1;;;;;93:5:12;89:54;82:5;79:65;69:93;;158:1;155;148:12;173:315;241:6;249;302:2;290:9;281:7;277:23;273:32;270:52;;;318:1;315;308:12;270:52;357:9;344:23;376:31;401:5;376:31;:::i;:::-;426:5;478:2;463:18;;;;450:32;;-1:-1:-1;;;173:315:12:o;675:332::-;733:6;786:2;774:9;765:7;761:23;757:32;754:52;;;802:1;799;792:12;754:52;841:9;828:23;-1:-1:-1;;;;;;884:5:12;880:78;873:5;870:89;860:117;;973:1;970;963:12;860:117;996:5;675:332;-1:-1:-1;;;675:332:12:o;1632:180::-;1691:6;1744:2;1732:9;1723:7;1719:23;1715:32;1712:52;;;1760:1;1757;1750:12;1712:52;-1:-1:-1;1783:23:12;;1632:180;-1:-1:-1;1632:180:12:o;2619:315::-;2687:6;2695;2748:2;2736:9;2727:7;2723:23;2719:32;2716:52;;;2764:1;2761;2754:12;2716:52;2800:9;2787:23;2777:33;;2860:2;2849:9;2845:18;2832:32;2873:31;2898:5;2873:31;:::i;:::-;2923:5;2913:15;;;2619:315;;;;;:::o;2939:248::-;3007:6;3015;3068:2;3056:9;3047:7;3043:23;3039:32;3036:52;;;3084:1;3081;3074:12;3036:52;-1:-1:-1;;3107:23:12;;;3177:2;3162:18;;;3149:32;;-1:-1:-1;2939:248:12:o;3192:367::-;3255:8;3265:6;3319:3;3312:4;3304:6;3300:17;3296:27;3286:55;;3337:1;3334;3327:12;3286:55;-1:-1:-1;3360:20:12;;3403:18;3392:30;;3389:50;;;3435:1;3432;3425:12;3389:50;3472:4;3464:6;3460:17;3448:29;;3532:3;3525:4;3515:6;3512:1;3508:14;3500:6;3496:27;3492:38;3489:47;3486:67;;;3549:1;3546;3539:12;3486:67;3192:367;;;;;:::o;3564:841::-;3695:6;3703;3711;3719;3727;3780:2;3768:9;3759:7;3755:23;3751:32;3748:52;;;3796:1;3793;3786:12;3748:52;3832:9;3819:23;3809:33;;3893:2;3882:9;3878:18;3865:32;3916:18;3957:2;3949:6;3946:14;3943:34;;;3973:1;3970;3963:12;3943:34;4012:70;4074:7;4065:6;4054:9;4050:22;4012:70;:::i;:::-;4101:8;;-1:-1:-1;3986:96:12;-1:-1:-1;4189:2:12;4174:18;;4161:32;;-1:-1:-1;4205:16:12;;;4202:36;;;4234:1;4231;4224:12;4202:36;;4273:72;4337:7;4326:8;4315:9;4311:24;4273:72;:::i;:::-;3564:841;;;;-1:-1:-1;3564:841:12;;-1:-1:-1;4364:8:12;;4247:98;3564:841;-1:-1:-1;;;3564:841:12:o;4410:639::-;4524:6;4532;4540;4548;4556;4609:3;4597:9;4588:7;4584:23;4580:33;4577:53;;;4626:1;4623;4616:12;4577:53;4665:9;4652:23;4684:31;4709:5;4684:31;:::i;:::-;4734:5;-1:-1:-1;4786:2:12;4771:18;;4758:32;;-1:-1:-1;4837:2:12;4822:18;;4809:32;;-1:-1:-1;4893:2:12;4878:18;;4865:32;4941:4;4928:18;;4916:31;;4906:59;;4961:1;4958;4951:12;4906:59;4410:639;;;;-1:-1:-1;4410:639:12;;5038:3;5023:19;5010:33;;4410:639;-1:-1:-1;;4410:639:12:o;5054:548::-;5166:4;5195:2;5224;5213:9;5206:21;5256:6;5250:13;5299:6;5294:2;5283:9;5279:18;5272:34;5324:1;5334:140;5348:6;5345:1;5342:13;5334:140;;;5443:14;;;5439:23;;5433:30;5409:17;;;5428:2;5405:26;5398:66;5363:10;;5334:140;;;5338:3;5523:1;5518:2;5509:6;5498:9;5494:22;5490:31;5483:42;5593:2;5586;5582:7;5577:2;5569:6;5565:15;5561:29;5550:9;5546:45;5542:54;5534:62;;;;5054:548;;;;:::o;5838:184::-;5908:6;5961:2;5949:9;5940:7;5936:23;5932:32;5929:52;;;5977:1;5974;5967:12;5929:52;-1:-1:-1;6000:16:12;;5838:184;-1:-1:-1;5838:184:12:o;6027:::-;-1:-1:-1;;;6076:1:12;6069:88;6176:4;6173:1;6166:15;6200:4;6197:1;6190:15;6216:125;6281:9;;;6302:10;;;6299:36;;;6315:18;;:::i;6691:168::-;6764:9;;;6795;;6812:15;;;6806:22;;6792:37;6782:71;;6833:18;;:::i;6864:274::-;6904:1;6930;6920:189;;-1:-1:-1;;;6962:1:12;6955:88;7066:4;7063:1;7056:15;7094:4;7091:1;7084:15;6920:189;-1:-1:-1;7123:9:12;;6864:274::o;7143:128::-;7210:9;;;7231:11;;;7228:37;;;7245:18;;:::i;7578:277::-;7645:6;7698:2;7686:9;7677:7;7673:23;7669:32;7666:52;;;7714:1;7711;7704:12;7666:52;7746:9;7740:16;7799:5;7792:13;7785:21;7778:5;7775:32;7765:60;;7821:1;7818;7811:12;9253:184;-1:-1:-1;;;9302:1:12;9295:88;9402:4;9399:1;9392:15;9426:4;9423:1;9416:15;9442:247;9501:6;9554:2;9542:9;9533:7;9529:23;9525:32;9522:52;;;9570:1;9567;9560:12;9522:52;9609:9;9596:23;9628:31;9653:5;9628:31;:::i;12135:135::-;12174:3;12195:17;;;12192:43;;12215:18;;:::i;:::-;-1:-1:-1;12262:1:12;12251:13;;12135:135::o;12275:175::-;12312:3;12356:4;12349:5;12345:16;12385:4;12376:7;12373:17;12370:43;;12393:18;;:::i;:::-;12442:1;12429:15;;12275:175;-1:-1:-1;;12275:175:12:o;12716:437::-;12795:1;12791:12;;;;12838;;;12859:61;;12913:4;12905:6;12901:17;12891:27;;12859:61;12966:2;12958:6;12955:14;12935:18;12932:38;12929:218;;-1:-1:-1;;;13000:1:12;12993:88;13104:4;13101:1;13094:15;13132:4;13129:1;13122:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1369800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "251",
								"SERVICER_ROLE()": "275",
								"accrueAllInterest()": "infinite",
								"balanceOf(address,uint256)": "infinite",
								"createTranche(address,uint256,uint256,uint8,uint256)": "infinite",
								"depositAndDistribute(uint256)": "infinite",
								"distributeToInvestors(uint256,address[],uint256[])": "infinite",
								"getRoleAdmin(bytes32)": "2482",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "2738",
								"lastAccrual()": "2374",
								"nextTrancheId()": "2394",
								"pause()": "infinite",
								"paused()": "2350",
								"renounceRole(bytes32,address)": "29025",
								"revokeRole(bytes32,address)": "infinite",
								"stable()": "infinite",
								"supportsInterface(bytes4)": "505",
								"sweep(address,uint256)": "infinite",
								"totalSupply()": "infinite",
								"totalSupply(uint256)": "infinite",
								"tranches(uint256)": "13243",
								"unpause()": "infinite",
								"uri()": "infinite",
								"withdraw(uint256,uint256)": "infinite"
							},
							"internal": {
								"_accrueAllInterest()": "infinite",
								"_totalAmount(uint256[] memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1205,
									"end": 1444,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1266,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1263,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1269,
									"end": 1273,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1266,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 1263,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1263,
									"end": 1273,
									"name": "tag",
									"source": 10,
									"value": "6"
								},
								{
									"begin": 1263,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1283,
									"end": 1299,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1283,
									"end": 1299,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1283,
									"end": 1299,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 1283,
									"end": 1299,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1351,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2232,
									"end": 2236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1340,
									"end": 1350,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1319,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1309,
									"end": 1351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1309,
									"end": 1351,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1309,
									"end": 1351,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1361,
									"end": 1398,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 382,
									"end": 408,
									"name": "PUSH",
									"source": 10,
									"value": "250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537"
								},
								{
									"begin": 1387,
									"end": 1397,
									"name": "CALLER",
									"source": 10
								},
								{
									"begin": 1361,
									"end": 1371,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 1361,
									"end": 1398,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1361,
									"end": 1398,
									"name": "tag",
									"source": 10,
									"value": "10"
								},
								{
									"begin": 1361,
									"end": 1398,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1422,
									"end": 1437,
									"name": "TIMESTAMP",
									"source": 10
								},
								{
									"begin": 1408,
									"end": 1419,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1408,
									"end": 1437,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1370,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 250,
									"end": 256,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 258,
									"end": 264,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 311,
									"end": 313,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 299,
									"end": 308,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 290,
									"end": 297,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 286,
									"end": 309,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 282,
									"end": 314,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 279,
									"end": 331,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 279,
									"end": 331,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 279,
									"end": 331,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 327,
									"end": 328,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 325,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 317,
									"end": 329,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 279,
									"end": 331,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 279,
									"end": 331,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 353,
									"end": 369,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 353,
									"end": 369,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 398,
									"end": 429,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 398,
									"end": 429,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 388,
									"end": 430,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 388,
									"end": 430,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 378,
									"end": 448,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 378,
									"end": 448,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 444,
									"end": 445,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 442,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 434,
									"end": 446,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 378,
									"end": 448,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 378,
									"end": 448,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 491,
									"end": 493,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 522,
									"end": 540,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 522,
									"end": 540,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 522,
									"end": 540,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 516,
									"end": 541,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 467,
									"end": 472,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 467,
									"end": 472,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 491,
									"end": 493,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 590,
									"end": 604,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 590,
									"end": 604,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 590,
									"end": 604,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 587,
									"end": 621,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 587,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 587,
									"end": 621,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 617,
									"end": 618,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 614,
									"end": 615,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 607,
									"end": 619,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 587,
									"end": 621,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 587,
									"end": 621,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 655,
									"end": 661,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 644,
									"end": 653,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 640,
									"end": 662,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 630,
									"end": 662,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 630,
									"end": 662,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 700,
									"end": 707,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 693,
									"end": 697,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 689,
									"end": 691,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 685,
									"end": 698,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 681,
									"end": 708,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 671,
									"end": 726,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 671,
									"end": 726,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 720,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 712,
									"end": 724,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 671,
									"end": 726,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 671,
									"end": 726,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 751,
									"end": 753,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 745,
									"end": 754,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 773,
									"end": 775,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 769,
									"end": 771,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 766,
									"end": 776,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 763,
									"end": 799,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 763,
									"end": 799,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 763,
									"end": 799,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 779,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 797,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 779,
									"end": 797,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 779,
									"end": 797,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 779,
									"end": 797,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 854,
									"end": 856,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 848,
									"end": 857,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 822,
									"end": 824,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 908,
									"end": 921,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 908,
									"end": 921,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 904,
									"end": 926,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 904,
									"end": 926,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 904,
									"end": 926,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 928,
									"end": 930,
									"name": "PUSH",
									"source": 12,
									"value": "3F"
								},
								{
									"begin": 900,
									"end": 931,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 896,
									"end": 936,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 884,
									"end": 937,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 884,
									"end": 937,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 884,
									"end": 937,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 952,
									"end": 970,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 952,
									"end": 970,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 952,
									"end": 970,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 972,
									"end": 994,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 972,
									"end": 994,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 972,
									"end": 994,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 949,
									"end": 995,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 946,
									"end": 1018,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 946,
									"end": 1018,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 946,
									"end": 1018,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 998,
									"end": 1016,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 998,
									"end": 1016,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 998,
									"end": 1016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 998,
									"end": 1016,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 998,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1038,
									"end": 1048,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1027,
									"end": 1049,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1073,
									"end": 1075,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1065,
									"end": 1071,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1058,
									"end": 1076,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1113,
									"end": 1120,
									"name": "DUP10",
									"source": 12
								},
								{
									"begin": 1108,
									"end": 1110,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1103,
									"end": 1105,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1099,
									"end": 1101,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1095,
									"end": 1106,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1091,
									"end": 1111,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1088,
									"end": 1121,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1085,
									"end": 1138,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1085,
									"end": 1138,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1085,
									"end": 1138,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1134,
									"end": 1135,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1131,
									"end": 1132,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1124,
									"end": 1136,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1085,
									"end": 1138,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1085,
									"end": 1138,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1156,
									"end": 1157,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1147,
									"end": 1157,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1157,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1180,
									"end": 1182,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1177,
									"end": 1178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1174,
									"end": 1183,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1268,
									"end": 1278,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1268,
									"end": 1278,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1268,
									"end": 1278,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1264,
									"end": 1283,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1264,
									"end": 1283,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1258,
									"end": 1284,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1237,
									"end": 1251,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1237,
									"end": 1251,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1237,
									"end": 1251,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1256,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1256,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1226,
									"end": 1285,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1201,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1201,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1201,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1191,
									"end": 1201,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1166,
									"end": 1295,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1337,
									"end": 1338,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1332,
									"end": 1334,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1327,
									"end": 1329,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1319,
									"end": 1325,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1304,
									"end": 1339,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1358,
									"end": 1364,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "SWAP7",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1348,
									"end": 1364,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1370,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1370,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1370,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1370,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1370,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 1370,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1454,
									"end": 1455,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1450,
									"end": 1462,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1497,
									"end": 1509,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1572,
									"end": 1576,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 1564,
									"end": 1570,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1560,
									"end": 1577,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1577,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1550,
									"end": 1577,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 1518,
									"end": 1579,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1625,
									"end": 1627,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1617,
									"end": 1623,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1614,
									"end": 1628,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1594,
									"end": 1612,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1591,
									"end": 1629,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1671,
									"end": 1681,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 1666,
									"end": 1669,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 1662,
									"end": 1682,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1683,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1706,
									"end": 1710,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 1703,
									"end": 1704,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 1696,
									"end": 1711,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1731,
									"end": 1732,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1724,
									"end": 1739,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1588,
									"end": 1749,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1375,
									"end": 1755,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1375,
									"end": 1755,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 2429,
									"name": "tag",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 1886,
									"end": 2429,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1988,
									"end": 1990,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1983,
									"end": 1986,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1980,
									"end": 1991,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1977,
									"end": 2423,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1977,
									"end": 2423,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1977,
									"end": 2423,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2024,
									"end": 2025,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2048,
									"end": 2053,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2045,
									"end": 2046,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2038,
									"end": 2054,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2092,
									"end": 2096,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2089,
									"end": 2090,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2079,
									"end": 2097,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 2162,
									"end": 2164,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2150,
									"end": 2160,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2146,
									"end": 2165,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2143,
									"end": 2144,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2139,
									"end": 2166,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2133,
									"end": 2137,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2129,
									"end": 2167,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2198,
									"end": 2202,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2186,
									"end": 2196,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2183,
									"end": 2203,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2180,
									"end": 2227,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2180,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2180,
									"end": 2227,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2221,
									"end": 2225,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 2180,
									"end": 2227,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 2180,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2276,
									"end": 2278,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 2271,
									"end": 2274,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2267,
									"end": 2279,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2264,
									"end": 2265,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 2260,
									"end": 2280,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2254,
									"end": 2258,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2250,
									"end": 2281,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2240,
									"end": 2281,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2240,
									"end": 2281,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2349,
									"end": 2351,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2342,
									"end": 2347,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2339,
									"end": 2352,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2394,
									"end": 2411,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2394,
									"end": 2411,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2394,
									"end": 2411,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2375,
									"end": 2376,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2364,
									"end": 2377,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 2331,
									"end": 2413,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2338,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2338,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2335,
									"end": 2338,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1977,
									"end": 2423,
									"name": "tag",
									"source": 12,
									"value": "46"
								},
								{
									"begin": 1977,
									"end": 2423,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 2429,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 2429,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 2429,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1886,
									"end": 2429,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 3950,
									"name": "tag",
									"source": 12,
									"value": "7"
								},
								{
									"begin": 2605,
									"end": 3950,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 2735,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2725,
									"end": 2735,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2747,
									"end": 2777,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2747,
									"end": 2777,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2744,
									"end": 2800,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2744,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2744,
									"end": 2800,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2780,
									"end": 2798,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "21"
								},
								{
									"begin": 2780,
									"end": 2798,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2780,
									"end": 2798,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 2780,
									"end": 2798,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2809,
									"end": 2906,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2899,
									"end": 2905,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2897,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2891,
									"end": 2895,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2885,
									"end": 2896,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2897,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 2859,
									"end": 2897,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2859,
									"end": 2897,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2859,
									"end": 2897,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2853,
									"end": 2857,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2809,
									"end": 2906,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2809,
									"end": 2906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2809,
									"end": 2906,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2809,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2961,
									"end": 2965,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3018,
									"end": 3020,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 3007,
									"end": 3021,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3007,
									"end": 3021,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3035,
									"end": 3036,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3030,
									"end": 3693,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3693,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3693,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3030,
									"end": 3693,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3737,
									"end": 3738,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3754,
									"end": 3760,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3751,
									"end": 3840,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3751,
									"end": 3840,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 3751,
									"end": 3840,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3806,
									"end": 3825,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3806,
									"end": 3825,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3806,
									"end": 3825,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3800,
									"end": 3826,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3751,
									"end": 3840,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 3751,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2562,
									"end": 2563,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2558,
									"end": 2569,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2569,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2569,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2554,
									"end": 2578,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2550,
									"end": 2579,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2540,
									"end": 2580,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2586,
									"end": 2587,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2582,
									"end": 2593,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2582,
									"end": 2593,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2582,
									"end": 2593,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2537,
									"end": 2594,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3853,
									"end": 3934,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3853,
									"end": 3934,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3000,
									"end": 3944,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 3000,
									"end": 3944,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3030,
									"end": 3693,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 3030,
									"end": 3693,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1833,
									"end": 1834,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1826,
									"end": 1840,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1826,
									"end": 1840,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1826,
									"end": 1840,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1870,
									"end": 1874,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1857,
									"end": 1875,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1857,
									"end": 1875,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3066,
									"end": 3086,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3066,
									"end": 3086,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3066,
									"end": 3086,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3198,
									"end": 3205,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3195,
									"end": 3196,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3192,
									"end": 3206,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3287,
									"end": 3306,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3287,
									"end": 3306,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 3287,
									"end": 3306,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3281,
									"end": 3307,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3308,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3266,
									"end": 3308,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3406,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3406,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3406,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3379,
									"end": 3406,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 3347,
									"end": 3348,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3335,
									"end": 3349,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3335,
									"end": 3349,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3335,
									"end": 3349,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3335,
									"end": 3349,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3214,
									"end": 3233,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3214,
									"end": 3233,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 3184,
									"end": 3420,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3188,
									"end": 3191,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3448,
									"end": 3454,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3439,
									"end": 3446,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3436,
									"end": 3455,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3433,
									"end": 3634,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3433,
									"end": 3634,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 3433,
									"end": 3634,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3528,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3528,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3509,
									"end": 3528,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3503,
									"end": 3529,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3592,
									"end": 3593,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 3588,
									"end": 3602,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 3588,
									"end": 3602,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3588,
									"end": 3602,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3604,
									"end": 3607,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 3584,
									"end": 3608,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3580,
									"end": 3617,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3576,
									"end": 3618,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3561,
									"end": 3619,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3546,
									"end": 3620,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3546,
									"end": 3620,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 3433,
									"end": 3634,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 3433,
									"end": 3634,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3680,
									"end": 3681,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3664,
									"end": 3678,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3664,
									"end": 3678,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3664,
									"end": 3678,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3660,
									"end": 3682,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3647,
									"end": 3683,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3647,
									"end": 3683,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2605,
									"end": 3950,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 3950,
									"name": "tag",
									"source": 12,
									"value": "26"
								},
								{
									"begin": 2605,
									"end": 3950,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "1342"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 289,
									"end": 6863,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203fda974b9d73d244202ae7c03d275c28f0c0156d9039d135031062fadbd523fb64736f6c63430008180033",
									".code": [
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "9612DF5C"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "BEF6F540"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "BEF6F540"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "D547741F"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "EAC989F8"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "F0F9243B"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "9612DF5C"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "A217FDDF"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "BD85B039"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "8456CB59"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "897A3651"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "91D14854"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "5C975ABB"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "6EA056A9"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "7B3BAAB4"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "36568ABE"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "3F4BA83A"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "441A3E70"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "248A9CA3"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "26C25962"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "2F2FF15D"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "BFED82A"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "BFED82A"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "22BE3DE1"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "FDD58E"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A7"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "9A01608"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 289,
											"end": 6863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 6720,
											"end": 6861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 6720,
											"end": 6861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 639,
											"end": 664,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 639,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 639,
											"end": 664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1191,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1177,
											"end": 1191,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1193,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1193,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1140,
											"end": 1142,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1125,
											"end": 1143,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1012,
											"end": 1199,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 342,
											"end": 408,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 342,
											"end": 408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 342,
											"end": 408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 382,
											"end": 408,
											"name": "PUSH",
											"source": 10,
											"value": "250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537"
										},
										{
											"begin": 342,
											"end": 408,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 342,
											"end": 408,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3286,
											"end": 3351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6714,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 6543,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6543,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 6543,
											"end": 6714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 704,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 674,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1342"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 674,
											"end": 704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 674,
											"end": 704,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 674,
											"end": 704,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 704,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1621,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 674,
											"end": 704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 1386,
											"end": 1627,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 776,
											"end": 819,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 776,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 776,
											"end": 819,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 776,
											"end": 819,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2324,
											"end": 2379,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2379,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 2324,
											"end": 2379,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2306,
											"end": 2380,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2306,
											"end": 2380,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2411,
											"end": 2413,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 2396,
											"end": 2414,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 2389,
											"end": 2423,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2439,
											"end": 2457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2432,
											"end": 2466,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2514,
											"end": 2518,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 2502,
											"end": 2519,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2497,
											"end": 2499,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2482,
											"end": 2500,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2475,
											"end": 2520,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2551,
											"end": 2554,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2536,
											"end": 2555,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2536,
											"end": 2555,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2529,
											"end": 2564,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2595,
											"end": 2598,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2580,
											"end": 2599,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2608,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2293,
											"end": 2296,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 2278,
											"end": 2297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 776,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 2002,
											"end": 2614,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6045,
											"end": 6117,
											"name": "tag",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 6045,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6045,
											"end": 6117,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 6045,
											"end": 6117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 5266,
											"end": 5819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5266,
											"end": 5819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "tag",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1726,
											"end": 1810,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 6123,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 6123,
											"end": 6273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 744,
											"end": 770,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 744,
											"end": 770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 744,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 744,
											"end": 770,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 744,
											"end": 770,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 744,
											"end": 770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 744,
											"end": 770,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 6040,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 5972,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5972,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5972,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 5972,
											"end": 6040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 2362,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2362,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "105"
										},
										{
											"begin": 1600,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "tag",
											"source": 10,
											"value": "104"
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1600,
											"end": 2356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 6418,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6418,
											"end": 6537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "tag",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "62"
										},
										{
											"begin": 3975,
											"end": 5115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3975,
											"end": 5115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 651,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "123"
										},
										{
											"begin": 651,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 710,
											"end": 738,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 710,
											"end": 738,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 710,
											"end": 738,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 710,
											"end": 738,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6791,
											"end": 6798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6825,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6829,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6845,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 6817,
											"end": 6845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "tag",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6817,
											"end": 6854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 6817,
											"end": 6854,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6854,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6810,
											"end": 6854,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6720,
											"end": 6861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 862,
											"end": 902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3286,
											"end": 3351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3328,
											"end": 3346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3328,
											"end": 3348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 3328,
											"end": 3348,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3286,
											"end": 3351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6714,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 6543,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6587,
											"end": 6600,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6600,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6638,
											"end": 6651,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 6638,
											"end": 6651,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6633,
											"end": 6651,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6694,
											"end": 6696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6693,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6682,
											"end": 6697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6682,
											"end": 6697,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 6682,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6673,
											"end": 6697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6697,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 6673,
											"end": 6697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6697,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 6673,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6673,
											"end": 6697,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6653,
											"end": 6657,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 6653,
											"end": 6657,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6612,
											"end": 6708,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6714,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6543,
											"end": 6714,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6045,
											"end": 6117,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 6045,
											"end": 6117,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6104,
											"end": 6114,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6104,
											"end": 6112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 6104,
											"end": 6114,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6104,
											"end": 6114,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6104,
											"end": 6114,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6117,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 7,
											"value": "168"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5365,
											"end": 5377,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5433,
											"end": 5460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5459,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5433,
											"end": 5460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5365,
											"end": 5377,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5408,
											"end": 5415,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5408,
											"end": 5415,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5448,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 5433,
											"end": 5448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5460,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5433,
											"end": 5460,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 5433,
											"end": 5460,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5470,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5433,
											"end": 5470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5491,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5425,
											"end": 5491,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6548,
											"end": 6550,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5425,
											"end": 5491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6530,
											"end": 6551,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6587,
											"end": 6589,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6560,
											"end": 6590,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6626,
											"end": 6644,
											"name": "PUSH",
											"source": 12,
											"value": "494E53554646494349454E545F42414C00000000000000000000000000000000"
										},
										{
											"begin": 6606,
											"end": 6624,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 6606,
											"end": 6624,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6606,
											"end": 6624,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6599,
											"end": 6645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 6662,
											"end": 6680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 5425,
											"end": 5491,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5554,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5549,
											"end": 5566,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5568,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 5549,
											"end": 5568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 5549,
											"end": 5568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5545,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5522,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5521,
											"end": 5536,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5521,
											"end": 5545,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5545,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 5521,
											"end": 5545,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5521,
											"end": 5545,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 5521,
											"end": 5545,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5520,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 5520,
											"end": 5568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5520,
											"end": 5568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "183"
										},
										{
											"begin": 5520,
											"end": 5568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5568,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5502,
											"end": 5568,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5597,
											"end": 5604,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5579,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5578,
											"end": 5593,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5593,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 5578,
											"end": 5604,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "185"
										},
										{
											"begin": 5578,
											"end": 5604,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5578,
											"end": 5604,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "PUSH",
											"source": 10,
											"value": "9DC29FAC00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5626,
											"end": 5636,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "9DC29FAC"
										},
										{
											"begin": 5615,
											"end": 5625,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5645,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 5615,
											"end": 5645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5737,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5701,
											"end": 5737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5717,
											"end": 5727,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5701,
											"end": 5737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5701,
											"end": 5707,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1342"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5701,
											"end": 5716,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5716,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5701,
											"end": 5716,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 5701,
											"end": 5716,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5737,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 5701,
											"end": 5737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 5701,
											"end": 5737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5693,
											"end": 5764,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5693,
											"end": 5764,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5764,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8062,
											"end": 8064,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5693,
											"end": 5764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8044,
											"end": 8065,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8101,
											"end": 8103,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8081,
											"end": 8099,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8074,
											"end": 8104,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8140,
											"end": 8164,
											"name": "PUSH",
											"source": 12,
											"value": "535441424C455F5452414E534645525F4641494C454400000000000000000000"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8120,
											"end": 8138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8113,
											"end": 8165,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8182,
											"end": 8200,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 7860,
											"end": 8206,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 5693,
											"end": 5764,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5779,
											"end": 5812,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 639,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 639,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 639,
											"end": 664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5800,
											"end": 5802,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5800,
											"end": 5802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5798,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 5788,
											"end": 5798,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 5779,
											"end": 5812,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5779,
											"end": 5812,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5335,
											"end": 5819,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5266,
											"end": 5819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 6123,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6222,
											"end": 6228,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1342"
										},
										{
											"begin": 6222,
											"end": 6237,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 6222,
											"end": 6237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6249,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 6222,
											"end": 6249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 6222,
											"end": 6249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 6214,
											"end": 6266,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6214,
											"end": 6266,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6214,
											"end": 6266,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6266,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8413,
											"end": 8415,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6214,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6214,
											"end": 6266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6266,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8395,
											"end": 8416,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8452,
											"end": 8454,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8432,
											"end": 8450,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8425,
											"end": 8455,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8491,
											"end": 8505,
											"name": "PUSH",
											"source": 12,
											"value": "53574545505F4641494C45440000000000000000000000000000000000000000"
										},
										{
											"begin": 8471,
											"end": 8489,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8471,
											"end": 8489,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8471,
											"end": 8489,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8464,
											"end": 8506,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8523,
											"end": 8541,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6214,
											"end": 6266,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8211,
											"end": 8547,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5972,
											"end": 6040,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 5972,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6029,
											"end": 6037,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 6029,
											"end": 6035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 6029,
											"end": 6037,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2562,
											"end": 2574,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2574,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2562,
											"end": 2580,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2562,
											"end": 2580,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2632,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2598,
											"end": 2632,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2658,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2590,
											"end": 2658,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2658,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8754,
											"end": 8756,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2590,
											"end": 2658,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8736,
											"end": 8757,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8793,
											"end": 8795,
											"name": "PUSH",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8773,
											"end": 8791,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 8796,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8832,
											"end": 8855,
											"name": "PUSH",
											"source": 12,
											"value": "41525241595F4C454E4754485F4D49534D415443480000000000000000000000"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8812,
											"end": 8830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8805,
											"end": 8856,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 8873,
											"end": 8891,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8552,
											"end": 8897,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 2590,
											"end": 2658,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2723,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2723,
											"end": 2730,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2710,
											"end": 2722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2710,
											"end": 2722,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2710,
											"end": 2731,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 2710,
											"end": 2731,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2706,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2676,
											"end": 2706,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2700,
											"end": 2704,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 2706,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1547,
											"end": 1621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2676,
											"end": 2691,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2691,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 2676,
											"end": 2691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2706,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 2676,
											"end": 2706,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "228"
										},
										{
											"begin": 2676,
											"end": 2706,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2731,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2676,
											"end": 2731,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2668,
											"end": 2758,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2668,
											"end": 2758,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2758,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9104,
											"end": 9106,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2668,
											"end": 2758,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9086,
											"end": 9107,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9143,
											"end": 9145,
											"name": "PUSH",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9123,
											"end": 9141,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9116,
											"end": 9146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9182,
											"end": 9206,
											"name": "PUSH",
											"source": 12,
											"value": "494E53554646494349454E545F41444D494E5F42414C00000000000000000000"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9162,
											"end": 9180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9155,
											"end": 9207,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9224,
											"end": 9242,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 9224,
											"end": 9242,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 8902,
											"end": 9248,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "229"
										},
										{
											"begin": 2668,
											"end": 2758,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2774,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2789,
											"end": 2809,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 2844,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "A9059CBB"
										},
										{
											"begin": 2845,
											"end": 2854,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2854,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2855,
											"end": 2856,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2845,
											"end": 2857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "236"
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2845,
											"end": 2857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 2845,
											"end": 2857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2866,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2867,
											"end": 2868,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2859,
											"end": 2869,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7450,
											"end": 7524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2870,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2830,
											"end": 2870,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2830,
											"end": 2870,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2915,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2915,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2916,
											"end": 2917,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2906,
											"end": 2918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 2906,
											"end": 2918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 2906,
											"end": 2918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 2904,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B6BCAB815B7A952B8759F2F92FC9981DC1156F6C11BF4DC7E9CB3036495E653A"
										},
										{
											"begin": 2920,
											"end": 2927,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2927,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2929,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 2920,
											"end": 2930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2920,
											"end": 2930,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 639,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 639,
											"end": 664,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 627,
											"end": 629,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 612,
											"end": 630,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 612,
											"end": 630,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 493,
											"end": 670,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2931,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 2811,
											"end": 2814,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2811,
											"end": 2814,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "232"
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2769,
											"end": 2942,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2948,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2362,
											"end": 2948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "tag",
											"source": 10,
											"value": "106"
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1828,
											"end": 1829,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 1825,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1816,
											"end": 1829,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1808,
											"end": 1851,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1808,
											"end": 1851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1851,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9896,
											"end": 9898,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1808,
											"end": 1851,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9878,
											"end": 9899,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9935,
											"end": 9937,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9908,
											"end": 9938,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9974,
											"end": 9993,
											"name": "PUSH",
											"source": 12,
											"value": "494E56414C49445F5052494E434950414C000000000000000000000000000000"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9954,
											"end": 9972,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9947,
											"end": 9994,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10011,
											"end": 10029,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10011,
											"end": 10029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 9694,
											"end": 10035,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 1808,
											"end": 1851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1878,
											"end": 1879,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1875,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1869,
											"end": 1879,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1861,
											"end": 1898,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1861,
											"end": 1898,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10242,
											"end": 10244,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1861,
											"end": 1898,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10224,
											"end": 10245,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10281,
											"end": 10283,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10261,
											"end": 10279,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10254,
											"end": 10284,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10320,
											"end": 10336,
											"name": "PUSH",
											"source": 12,
											"value": "494E56414C49445F535550504C59000000000000000000000000000000000000"
										},
										{
											"begin": 10300,
											"end": 10318,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10300,
											"end": 10318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10300,
											"end": 10318,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10293,
											"end": 10337,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10354,
											"end": 10372,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 10040,
											"end": 10378,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "259"
										},
										{
											"begin": 1861,
											"end": 1898,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1931,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1943,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1943,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1945,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1926,
											"end": 1945,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 1926,
											"end": 1945,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 1922,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1916,
											"end": 1945,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1908,
											"end": 1970,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1908,
											"end": 1970,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1970,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10585,
											"end": 10587,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1908,
											"end": 1970,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10567,
											"end": 10588,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10624,
											"end": 10626,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10604,
											"end": 10622,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10597,
											"end": 10627,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10663,
											"end": 10685,
											"name": "PUSH",
											"source": 12,
											"value": "494E56414C49445F544F4B454E5F535550504C59000000000000000000000000"
										},
										{
											"begin": 10643,
											"end": 10661,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 10643,
											"end": 10661,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10643,
											"end": 10661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10636,
											"end": 10686,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 10703,
											"end": 10721,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 10383,
											"end": 10727,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 1908,
											"end": 1970,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1994,
											"end": 2007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1994,
											"end": 2007,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2033,
											"end": 2039,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 2033,
											"end": 2039,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2033,
											"end": 2039,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 2033,
											"end": 2039,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2017,
											"end": 2039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2039,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2039,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2065,
											"end": 2274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP16",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP15",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP13",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "DUP14",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP13",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "DUP12",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP12",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP11",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2274,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10959,
											"end": 10984,
											"name": "DUP12",
											"source": 12
										},
										{
											"begin": 10959,
											"end": 10984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10959,
											"end": 10984,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11000,
											"end": 11018,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11027,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 11027,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11043,
											"end": 11061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11081,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11036,
											"end": 11081,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11097,
											"end": 11115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11097,
											"end": 11115,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11090,
											"end": 11124,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11090,
											"end": 11124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11090,
											"end": 11124,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2050,
											"end": 2062,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "564B343AD33DBF7EB84EF778355BE83DF7B0A44CE6021E56D7BD757A03C03544"
										},
										{
											"begin": 2290,
											"end": 2349,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10931,
											"end": 10950,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2290,
											"end": 2349,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 1798,
											"end": 2356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1600,
											"end": 2356,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "tag",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 6418,
											"end": 6537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6472,
											"end": 6479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6506,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6510,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 10,
											"value": "18160DDD"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 6498,
											"end": 6530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 382,
											"end": 408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "250B76734A070A69C7B3930477DD35007AD9C9D0952E97903FDAFB2DB6980537"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2475,
											"end": 2479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 2464,
											"end": 2480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4168,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4114,
											"end": 4168,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4144,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4114,
											"end": 4168,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11398,
											"end": 11432,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4154,
											"end": 4158,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 11448,
											"end": 11466,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11448,
											"end": 11466,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11448,
											"end": 11466,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11441,
											"end": 11484,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11500,
											"end": 11518,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11500,
											"end": 11518,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11500,
											"end": 11518,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11527,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11527,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11493,
											"end": 11527,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4120,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "1342"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4114,
											"end": 4133,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4133,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "23B872DD"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11310,
											"end": 11328,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4168,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 4114,
											"end": 4168,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "284"
										},
										{
											"begin": 4114,
											"end": 4168,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4106,
											"end": 4188,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4188,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4188,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11742,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4106,
											"end": 4188,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11722,
											"end": 11743,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11779,
											"end": 11781,
											"name": "PUSH",
											"source": 12,
											"value": "F"
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11759,
											"end": 11777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11752,
											"end": 11782,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11818,
											"end": 11835,
											"name": "PUSH",
											"source": 12,
											"value": "5452414E534645525F4641494C45440000000000000000000000000000000000"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11816,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11791,
											"end": 11836,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 11853,
											"end": 11871,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 11538,
											"end": 11877,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "285"
										},
										{
											"begin": 4106,
											"end": 4188,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4218,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 4198,
											"end": 4216,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 4198,
											"end": 4218,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4218,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "288"
										},
										{
											"begin": 4198,
											"end": 4218,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4249,
											"end": 4255,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4229,
											"end": 4246,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4288,
											"end": 4291,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4284,
											"end": 4285,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4291,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4284,
											"end": 4291,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4291,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4308,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4308,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4308,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 4284,
											"end": 4308,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4308,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4307,
											"end": 4308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4295,
											"end": 4304,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4295,
											"end": 4308,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4284,
											"end": 4308,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "292"
										},
										{
											"begin": 4284,
											"end": 4308,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4334,
											"end": 4344,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4355,
											"end": 4368,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4355,
											"end": 4368,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4352,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4368,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4385,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4385,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4385,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4350,
											"end": 4385,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4385,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4384,
											"end": 4385,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4372,
											"end": 4381,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4372,
											"end": 4385,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4350,
											"end": 4385,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "296"
										},
										{
											"begin": 4350,
											"end": 4385,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4411,
											"end": 4428,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4431,
											"end": 4443,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4431,
											"end": 4443,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4476,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4481,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4465,
											"end": 4481,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4481,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4476,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4476,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4465,
											"end": 4481,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4461,
											"end": 4491,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4461,
											"end": 4491,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4491,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4483,
											"end": 4491,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4483,
											"end": 4491,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4461,
											"end": 4491,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "297"
										},
										{
											"begin": 4461,
											"end": 4491,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4524,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4557,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4528,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4544,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4527,
											"end": 4544,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4544,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4557,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4557,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4580,
											"end": 4589,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "298"
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4561,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4577,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4560,
											"end": 4577,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4560,
											"end": 4577,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 4527,
											"end": 4589,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4589,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4510,
											"end": 4589,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 4634,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4608,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4624,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4607,
											"end": 4624,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4624,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4607,
											"end": 4634,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "300"
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4607,
											"end": 4634,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4678,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4653,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4652,
											"end": 4667,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4667,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4652,
											"end": 4678,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "301"
										},
										{
											"begin": 4652,
											"end": 4678,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4696,
											"end": 4722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4716,
											"end": 4722,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4722,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4722,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4696,
											"end": 4722,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4722,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "302"
										},
										{
											"begin": 4696,
											"end": 4722,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4722,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4696,
											"end": 4722,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4756,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4774,
											"end": 4783,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4760,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4770,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4759,
											"end": 4770,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4770,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4783,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4783,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4800,
											"end": 4809,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4787,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4797,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4786,
											"end": 4797,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4786,
											"end": 4797,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "304"
										},
										{
											"begin": 4759,
											"end": 4809,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4809,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4741,
											"end": 4809,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4846,
											"end": 4853,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4828,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4827,
											"end": 4838,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4838,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4827,
											"end": 4853,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "305"
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4827,
											"end": 4853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4890,
											"end": 4897,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4872,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 4871,
											"end": 4886,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4886,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 4871,
											"end": 4897,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "306"
										},
										{
											"begin": 4871,
											"end": 4897,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4897,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4915,
											"end": 4941,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4915,
											"end": 4941,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4934,
											"end": 4941,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4941,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4941,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 4915,
											"end": 4941,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4941,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "307"
										},
										{
											"begin": 4915,
											"end": 4941,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 12056,
											"end": 12081,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12056,
											"end": 12081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12056,
											"end": 12081,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4915,
											"end": 4941,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4915,
											"end": 4941,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C679124717471D056FE130FB8066CE200851EEC03C00256EE1158B7D2354036F"
										},
										{
											"begin": 4965,
											"end": 5002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4965,
											"end": 5002,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 5017,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 5017,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 5017,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "295"
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4391,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4387,
											"end": 4391,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4391,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "311"
										},
										{
											"begin": 4387,
											"end": 4391,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4391,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "310"
										},
										{
											"begin": 4387,
											"end": 4391,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4391,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4387,
											"end": 4391,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "293"
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "294"
										},
										{
											"begin": 4329,
											"end": 5017,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4310,
											"end": 4313,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4310,
											"end": 4313,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4313,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "313"
										},
										{
											"begin": 4310,
											"end": 4313,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4313,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "312"
										},
										{
											"begin": 4310,
											"end": 4313,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4313,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4310,
											"end": 4313,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "289"
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 4266,
											"end": 5027,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5091,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5091,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5078,
											"end": 5079,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12081,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12056,
											"end": 12081,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12112,
											"end": 12114,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12097,
											"end": 12115,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12090,
											"end": 12124,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "C679124717471D056FE130FB8066CE200851EEC03C00256EE1158B7D2354036F"
										},
										{
											"begin": 5042,
											"end": 5091,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5042,
											"end": 5091,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 4096,
											"end": 5115,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1379,
											"end": 1380,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3975,
											"end": 5115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3975,
											"end": 5115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "121"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 651,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "321"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "322"
										},
										{
											"begin": 651,
											"end": 668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "323"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "325"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "326"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 651,
											"end": 668,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 651,
											"end": 668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3813,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 3358,
											"end": 3813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3417,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3438,
											"end": 3449,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3438,
											"end": 3449,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3435,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "186"
										},
										{
											"begin": 3420,
											"end": 3449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "tag",
											"source": 10,
											"value": "329"
										},
										{
											"begin": 3420,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3449,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3463,
											"end": 3465,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3469,
											"end": 3470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3463,
											"end": 3470,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3479,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3459,
											"end": 3479,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3472,
											"end": 3479,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3479,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 3459,
											"end": 3479,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3502,
											"end": 3517,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3488,
											"end": 3499,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3488,
											"end": 3517,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3534,
											"end": 3544,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "tag",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3568,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3555,
											"end": 3568,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3552,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3550,
											"end": 3568,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3590,
											"end": 3607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3618,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3651,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3640,
											"end": 3651,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3651,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3656,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3658,
											"end": 3666,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "tag",
											"source": 10,
											"value": "334"
										},
										{
											"begin": 3636,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3735,
											"end": 3752,
											"name": "PUSH",
											"source": 10,
											"value": "496CEBB800"
										},
										{
											"begin": 3728,
											"end": 3730,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3714,
											"end": 3725,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3701,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3711,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3700,
											"end": 3711,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3711,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3700,
											"end": 3725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 3700,
											"end": 3725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3700,
											"end": 3730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3730,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "182"
										},
										{
											"begin": 3700,
											"end": 3730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3700,
											"end": 3730,
											"name": "tag",
											"source": 10,
											"value": "336"
										},
										{
											"begin": 3700,
											"end": 3730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3699,
											"end": 3753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "184"
										},
										{
											"begin": 3699,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3753,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 3699,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3680,
											"end": 3753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3788,
											"end": 3796,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3784,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3767,
											"end": 3796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "tag",
											"source": 10,
											"value": "338"
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3767,
											"end": 3796,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "tag",
											"source": 10,
											"value": "333"
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3570,
											"end": 3574,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3570,
											"end": 3574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "331"
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3529,
											"end": 3807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3397,
											"end": 3813,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3358,
											"end": 3813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 2586,
											"end": 2703,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1597,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 1597,
											"end": 1613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 1597,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2644,
											"end": 2659,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2659,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 2683,
											"end": 2695,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1565,
											"end": 1620,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1621,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1621,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2674,
											"end": 2696,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2586,
											"end": 2703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "tag",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1878,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 1939,
											"end": 2000,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1974,
											"end": 1989,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 2339,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 1350,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "169"
										},
										{
											"begin": 1350,
											"end": 1369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 1350,
											"end": 1369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2412,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2398,
											"end": 2412,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2427,
											"end": 2447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2446,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2954,
											"end": 3129,
											"name": "tag",
											"source": 10,
											"value": "224"
										},
										{
											"begin": 2954,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3021,
											"end": 3032,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3021,
											"end": 3032,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3068,
											"end": 3078,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3065,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3078,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 3106,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3106,
											"end": 3112,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3099,
											"end": 3112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "tag",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3099,
											"end": 3112,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3080,
											"end": 3083,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3080,
											"end": 3083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3044,
											"end": 3123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2954,
											"end": 3129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7468,
											"end": 7523,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7450,
											"end": 7524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7540,
											"end": 7558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7533,
											"end": 7567,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 7423,
											"end": 7441,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 7276,
											"end": 7573,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 2078,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1803,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 2136,
											"end": 2198,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2172,
											"end": 2187,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 14,
											"end": 168,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 14,
											"end": 168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 89,
											"end": 143,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 82,
											"end": 87,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 79,
											"end": 144,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 69,
											"end": 162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 69,
											"end": 162,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 158,
											"end": 159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 156,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 148,
											"end": 160,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 173,
											"end": 488,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 173,
											"end": 488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 241,
											"end": 247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 255,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 302,
											"end": 304,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 299,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 281,
											"end": 288,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 277,
											"end": 300,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 273,
											"end": 305,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 270,
											"end": 322,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 270,
											"end": 322,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 270,
											"end": 322,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 318,
											"end": 319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 315,
											"end": 316,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 308,
											"end": 320,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 270,
											"end": 322,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 270,
											"end": 322,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 357,
											"end": 366,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 344,
											"end": 367,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 376,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 401,
											"end": 406,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 376,
											"end": 407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 376,
											"end": 407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 376,
											"end": 407,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 376,
											"end": 407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 426,
											"end": 431,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 463,
											"end": 481,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 463,
											"end": 481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 450,
											"end": 482,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 450,
											"end": 482,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 173,
											"end": 488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 675,
											"end": 1007,
											"name": "tag",
											"source": 12,
											"value": "43"
										},
										{
											"begin": 675,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 733,
											"end": 739,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 786,
											"end": 788,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 774,
											"end": 783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 765,
											"end": 772,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 761,
											"end": 784,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 757,
											"end": 789,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 806,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 754,
											"end": 806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 754,
											"end": 806,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 802,
											"end": 803,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 800,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 792,
											"end": 804,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 754,
											"end": 806,
											"name": "tag",
											"source": 12,
											"value": "394"
										},
										{
											"begin": 754,
											"end": 806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 841,
											"end": 850,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 828,
											"end": 851,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 884,
											"end": 889,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 880,
											"end": 958,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 873,
											"end": 878,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 870,
											"end": 959,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 860,
											"end": 977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 860,
											"end": 977,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 973,
											"end": 974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 970,
											"end": 971,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 963,
											"end": 975,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 860,
											"end": 977,
											"name": "tag",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 860,
											"end": 977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 675,
											"end": 1007,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 675,
											"end": 1007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1812,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 1632,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1691,
											"end": 1697,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1746,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1732,
											"end": 1741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1719,
											"end": 1742,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1715,
											"end": 1747,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1764,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1712,
											"end": 1764,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1757,
											"end": 1758,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1750,
											"end": 1762,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1712,
											"end": 1764,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 1712,
											"end": 1764,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1783,
											"end": 1806,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1783,
											"end": 1806,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1812,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1632,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2934,
											"name": "tag",
											"source": 12,
											"value": "73"
										},
										{
											"begin": 2619,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2687,
											"end": 2693,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2701,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2748,
											"end": 2750,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2736,
											"end": 2745,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2727,
											"end": 2734,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2723,
											"end": 2746,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2719,
											"end": 2751,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 2768,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 2768,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 2716,
											"end": 2768,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2754,
											"end": 2766,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 2768,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 2716,
											"end": 2768,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2800,
											"end": 2809,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2787,
											"end": 2810,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 2810,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2777,
											"end": 2810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2860,
											"end": 2862,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2832,
											"end": 2864,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2898,
											"end": 2903,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2904,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 2873,
											"end": 2904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2873,
											"end": 2904,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 2873,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2923,
											"end": 2928,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2928,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2934,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2934,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2939,
											"end": 3187,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 2939,
											"end": 3187,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3021,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3068,
											"end": 3070,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3047,
											"end": 3054,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3066,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3039,
											"end": 3071,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3081,
											"end": 3082,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3074,
											"end": 3086,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 3036,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3107,
											"end": 3130,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3162,
											"end": 3180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3149,
											"end": 3181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2939,
											"end": 3187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3559,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 3192,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3255,
											"end": 3263,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3265,
											"end": 3271,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3319,
											"end": 3322,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3312,
											"end": 3316,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 3304,
											"end": 3310,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3300,
											"end": 3317,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3296,
											"end": 3323,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3341,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 3286,
											"end": 3341,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3337,
											"end": 3338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3334,
											"end": 3335,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3327,
											"end": 3339,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3286,
											"end": 3341,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 3286,
											"end": 3341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3360,
											"end": 3380,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3380,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3403,
											"end": 3421,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3392,
											"end": 3422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3392,
											"end": 3422,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3435,
											"end": 3436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3425,
											"end": 3437,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 3389,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3472,
											"end": 3476,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3464,
											"end": 3470,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3460,
											"end": 3477,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3448,
											"end": 3477,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3448,
											"end": 3477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3532,
											"end": 3535,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3525,
											"end": 3529,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3515,
											"end": 3521,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3512,
											"end": 3513,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 3508,
											"end": 3522,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 3500,
											"end": 3506,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3496,
											"end": 3523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3530,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3489,
											"end": 3536,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 3486,
											"end": 3553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3546,
											"end": 3547,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3551,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3553,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 3486,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3559,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3559,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3559,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3559,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3192,
											"end": 3559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3695,
											"end": 3701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3709,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 3717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3719,
											"end": 3725,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3782,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 3766,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 3755,
											"end": 3778,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3751,
											"end": 3783,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3748,
											"end": 3800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3748,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 3748,
											"end": 3800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3798,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3748,
											"end": 3800,
											"name": "tag",
											"source": 12,
											"value": "414"
										},
										{
											"begin": 3748,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3819,
											"end": 3842,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 3842,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 3809,
											"end": 3842,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3893,
											"end": 3895,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3882,
											"end": 3891,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 3878,
											"end": 3896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3865,
											"end": 3897,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 3934,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3957,
											"end": 3959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3949,
											"end": 3955,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3946,
											"end": 3960,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3977,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3977,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 3943,
											"end": 3977,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3973,
											"end": 3974,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3970,
											"end": 3971,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3963,
											"end": 3975,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3943,
											"end": 3977,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 3943,
											"end": 3977,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4074,
											"end": 4081,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP11",
											"source": 12
										},
										{
											"begin": 4050,
											"end": 4072,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4082,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 4012,
											"end": 4082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4012,
											"end": 4082,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 4012,
											"end": 4082,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4101,
											"end": 4109,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3986,
											"end": 4082,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4189,
											"end": 4191,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4174,
											"end": 4192,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4161,
											"end": 4193,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4161,
											"end": 4193,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4205,
											"end": 4221,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4205,
											"end": 4221,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4205,
											"end": 4221,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4238,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4238,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4202,
											"end": 4238,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4234,
											"end": 4235,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4231,
											"end": 4232,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4224,
											"end": 4236,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4238,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 4202,
											"end": 4238,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4238,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4337,
											"end": 4344,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4326,
											"end": 4334,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4315,
											"end": 4324,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 4311,
											"end": 4335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 4273,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4273,
											"end": 4345,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 4273,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "SWAP10",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "SWAP9",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4364,
											"end": 4372,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4364,
											"end": 4372,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4247,
											"end": 4345,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 3564,
											"end": 4405,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3564,
											"end": 4405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4524,
											"end": 4530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4532,
											"end": 4538,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4540,
											"end": 4546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4554,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4556,
											"end": 4562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4609,
											"end": 4612,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4597,
											"end": 4606,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4588,
											"end": 4595,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 4584,
											"end": 4607,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 4580,
											"end": 4613,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 4577,
											"end": 4630,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4577,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 4577,
											"end": 4630,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4616,
											"end": 4628,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4577,
											"end": 4630,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 4577,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4665,
											"end": 4674,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4652,
											"end": 4675,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 4709,
											"end": 4714,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 4684,
											"end": 4715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4684,
											"end": 4715,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 4684,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4734,
											"end": 4739,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4786,
											"end": 4788,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4771,
											"end": 4789,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4790,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4758,
											"end": 4790,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4837,
											"end": 4839,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4809,
											"end": 4841,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4809,
											"end": 4841,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4893,
											"end": 4895,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4878,
											"end": 4896,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4865,
											"end": 4897,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 4941,
											"end": 4945,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4928,
											"end": 4946,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4947,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4916,
											"end": 4947,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4965,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4906,
											"end": 4965,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 4961,
											"end": 4962,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 4959,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4951,
											"end": 4963,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4906,
											"end": 4965,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 4906,
											"end": 4965,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "SWAP7",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 5038,
											"end": 5041,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5023,
											"end": 5042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5010,
											"end": 5043,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 5010,
											"end": 5043,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4410,
											"end": 5049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4410,
											"end": 5049,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5602,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 5054,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5166,
											"end": 5170,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5195,
											"end": 5197,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5224,
											"end": 5226,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5213,
											"end": 5222,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5206,
											"end": 5227,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5250,
											"end": 5263,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5299,
											"end": 5305,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5294,
											"end": 5296,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5292,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5272,
											"end": 5306,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5324,
											"end": 5325,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5345,
											"end": 5346,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5342,
											"end": 5355,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5457,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5457,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5443,
											"end": 5457,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5462,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5439,
											"end": 5462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5433,
											"end": 5463,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5426,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5426,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5409,
											"end": 5426,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5428,
											"end": 5430,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5405,
											"end": 5431,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5398,
											"end": 5464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5363,
											"end": 5373,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 5334,
											"end": 5474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5338,
											"end": 5341,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5523,
											"end": 5524,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5520,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5509,
											"end": 5515,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5498,
											"end": 5507,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5494,
											"end": 5516,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5490,
											"end": 5521,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5483,
											"end": 5525,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5593,
											"end": 5595,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5586,
											"end": 5588,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5582,
											"end": 5589,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5577,
											"end": 5579,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 5569,
											"end": 5575,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5565,
											"end": 5580,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5561,
											"end": 5590,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5550,
											"end": 5559,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5546,
											"end": 5591,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5542,
											"end": 5596,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5596,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5534,
											"end": 5596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5602,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5602,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5602,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5838,
											"end": 6022,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 5838,
											"end": 6022,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5908,
											"end": 5914,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5961,
											"end": 5963,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5949,
											"end": 5958,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 5947,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5936,
											"end": 5959,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5932,
											"end": 5964,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5981,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5929,
											"end": 5981,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5977,
											"end": 5978,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5967,
											"end": 5979,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5929,
											"end": 5981,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 5929,
											"end": 5981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6000,
											"end": 6016,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5838,
											"end": 6022,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5838,
											"end": 6022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6211,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6027,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6077,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6069,
											"end": 6157,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6176,
											"end": 6180,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6173,
											"end": 6174,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6166,
											"end": 6181,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6200,
											"end": 6204,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6197,
											"end": 6198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6190,
											"end": 6205,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6216,
											"end": 6341,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6216,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6290,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6290,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6281,
											"end": 6290,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6302,
											"end": 6312,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6335,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6299,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6299,
											"end": 6335,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6315,
											"end": 6333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6315,
											"end": 6333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6691,
											"end": 6859,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 6691,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 6773,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 6773,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6764,
											"end": 6773,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6795,
											"end": 6804,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6812,
											"end": 6827,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 6792,
											"end": 6829,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 6782,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6782,
											"end": 6853,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 6833,
											"end": 6851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 6833,
											"end": 6851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 7138,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 6864,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6904,
											"end": 6905,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6930,
											"end": 6931,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 7109,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6920,
											"end": 7109,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6962,
											"end": 6963,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 7043,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7070,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 7063,
											"end": 7064,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7056,
											"end": 7071,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7094,
											"end": 7098,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 7091,
											"end": 7092,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7084,
											"end": 7099,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6920,
											"end": 7109,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 6920,
											"end": 7109,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7132,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7123,
											"end": 7132,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 7138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7143,
											"end": 7271,
											"name": "tag",
											"source": 12,
											"value": "186"
										},
										{
											"begin": 7143,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7210,
											"end": 7219,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7242,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7242,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7265,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7228,
											"end": 7265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 7228,
											"end": 7265,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7245,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "127"
										},
										{
											"begin": 7245,
											"end": 7263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 7245,
											"end": 7263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7578,
											"end": 7855,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 7578,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7645,
											"end": 7651,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7698,
											"end": 7700,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7677,
											"end": 7684,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7673,
											"end": 7696,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7669,
											"end": 7701,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7714,
											"end": 7715,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7711,
											"end": 7712,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7704,
											"end": 7716,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7666,
											"end": 7718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7746,
											"end": 7755,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7740,
											"end": 7756,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7799,
											"end": 7804,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7792,
											"end": 7805,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7785,
											"end": 7806,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7775,
											"end": 7807,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7765,
											"end": 7825,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 7765,
											"end": 7825,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7821,
											"end": 7822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7818,
											"end": 7819,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7811,
											"end": 7823,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9253,
											"end": 9437,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 9253,
											"end": 9437,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9302,
											"end": 9303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9295,
											"end": 9383,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9402,
											"end": 9406,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 9399,
											"end": 9400,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9392,
											"end": 9407,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9426,
											"end": 9430,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 9423,
											"end": 9424,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9416,
											"end": 9431,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9442,
											"end": 9689,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 9442,
											"end": 9689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9501,
											"end": 9507,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9556,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9542,
											"end": 9551,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9533,
											"end": 9540,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9529,
											"end": 9552,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9557,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9522,
											"end": 9574,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9522,
											"end": 9574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 9522,
											"end": 9574,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9570,
											"end": 9571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9568,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9560,
											"end": 9572,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9522,
											"end": 9574,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 9522,
											"end": 9574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9609,
											"end": 9618,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9596,
											"end": 9619,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 9628,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "395"
										},
										{
											"begin": 9653,
											"end": 9658,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9628,
											"end": 9659,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 9628,
											"end": 9659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12135,
											"end": 12270,
											"name": "tag",
											"source": 12,
											"value": "311"
										},
										{
											"begin": 12135,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12174,
											"end": 12177,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12195,
											"end": 12212,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12195,
											"end": 12212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12195,
											"end": 12212,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12192,
											"end": 12235,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 12192,
											"end": 12235,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 12215,
											"end": 12233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 12215,
											"end": 12233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12262,
											"end": 12263,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12251,
											"end": 12264,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12251,
											"end": 12264,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12135,
											"end": 12270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12450,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 12275,
											"end": 12450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12312,
											"end": 12315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12356,
											"end": 12360,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12349,
											"end": 12354,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12345,
											"end": 12361,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12385,
											"end": 12389,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 12376,
											"end": 12383,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12373,
											"end": 12390,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12370,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 12370,
											"end": 12413,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 12393,
											"end": 12411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12442,
											"end": 12443,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12429,
											"end": 12444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12429,
											"end": 12444,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12275,
											"end": 12450,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12275,
											"end": 12450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12716,
											"end": 13153,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 12716,
											"end": 13153,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12795,
											"end": 12796,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 12791,
											"end": 12803,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12838,
											"end": 12850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12838,
											"end": 12850,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12838,
											"end": 12850,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 12859,
											"end": 12920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12917,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 12905,
											"end": 12911,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12901,
											"end": 12918,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 12918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12891,
											"end": 12918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12859,
											"end": 12920,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 12859,
											"end": 12920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12966,
											"end": 12968,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12958,
											"end": 12964,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12955,
											"end": 12969,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 12935,
											"end": 12953,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12932,
											"end": 12970,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12929,
											"end": 13147,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 12929,
											"end": 13147,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13000,
											"end": 13001,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12993,
											"end": 13081,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13104,
											"end": 13108,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 13101,
											"end": 13102,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 13094,
											"end": 13109,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13132,
											"end": 13136,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 13129,
											"end": 13130,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13137,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/CMBS20Demo.sol",
								"contracts/ERC3643Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"SERVICER_ROLE()": "09a01608",
							"accrueAllInterest()": "0bfed82a",
							"balanceOf(address,uint256)": "00fdd58e",
							"createTranche(address,uint256,uint256,uint8,uint256)": "9612df5c",
							"depositAndDistribute(uint256)": "bef6f540",
							"distributeToInvestors(uint256,address[],uint256[])": "897a3651",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"lastAccrual()": "7b3baab4",
							"nextTrancheId()": "f0f9243b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"stable()": "22be3de1",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweep(address,uint256)": "6ea056a9",
							"totalSupply()": "18160ddd",
							"totalSupply(uint256)": "bd85b039",
							"tranches(uint256)": "26c25962",
							"unpause()": "3f4ba83a",
							"uri()": "eac989f8",
							"withdraw(uint256,uint256)": "441a3e70"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_stable\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distribution\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"interestPaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principalPaid\",\"type\":\"uint256\"}],\"name\":\"PaymentAllocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"couponBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"seniority\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"TrancheCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SERVICER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"accrueAllInterest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC3643Token\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"couponBps\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"seniority\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"createTranche\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositAndDistribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"investors\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"name\":\"distributeToInvestors\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastAccrual\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTrancheId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stable\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sweep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"tranches\",\"outputs\":[{\"internalType\":\"contract ERC3643Token\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"couponBps\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"seniority\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"accruedInterest\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cashAvailable\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CMBS20Demo.sol\":\"CMBS20Demo\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9d6f6f6600a2bec622f699081b58350873b5e63ce05464d17d674a290bb8a7c\",\"dweb:/ipfs/QmQKVzSQY1PM3Bid4QhgVVZyx6B4Jx7XgaQzLKHj38vJz8\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/CMBS20Demo.sol\":{\"keccak256\":\"0x0251ccd8acd98162f583a6fc98e6d239ff707f38ff3f38984eba1298e3d8de4a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e959b7a6edfd676af77a92a9f4f6f89535dd2ae1c9820a0029566a460ccb3577\",\"dweb:/ipfs/Qmb3YdpvLDxAvrQ2VkP88xNXNe2LKAvAWKc8s5ZGoUpa1a\"]},\"contracts/ERC3643Token.sol\":{\"keccak256\":\"0x074611c4cf4aa06c34659c7ef1df67fb7b6a5145982209df0b8fd5e4544e55f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd6b594146c9ef5bff20e37df1ac18d8323476af0edf830f25ad7c585093860\",\"dweb:/ipfs/QmNPmYHtBcyDk8DXTxgriqkjH2NxwvGzDq2qTh5GmqgdnQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							},
							{
								"astId": 1173,
								"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 1339,
								"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
								"label": "uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 1344,
								"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
								"label": "nextTrancheId",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1346,
								"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
								"label": "lastAccrual",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1351,
								"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
								"label": "tranches",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Tranche)1337_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(ERC3643Token)2114": {
								"encoding": "inplace",
								"label": "contract ERC3643Token",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_mapping(t_uint256,t_struct(Tranche)1337_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CMBS20Demo.Tranche)",
								"numberOfBytes": "32",
								"value": "t_struct(Tranche)1337_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Tranche)1337_storage": {
								"encoding": "inplace",
								"label": "struct CMBS20Demo.Tranche",
								"members": [
									{
										"astId": 1326,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "token",
										"offset": 0,
										"slot": "0",
										"type": "t_contract(ERC3643Token)2114"
									},
									{
										"astId": 1328,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "principal",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1330,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "couponBps",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1332,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "seniority",
										"offset": 0,
										"slot": "3",
										"type": "t_uint8"
									},
									{
										"astId": 1334,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "accruedInterest",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1336,
										"contract": "contracts/CMBS20Demo.sol:CMBS20Demo",
										"label": "cashAvailable",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/ERC3643Token.sol": {
				"ERC3643Token": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "CONTROLLER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/ERC3643Token.sol\":174:1292  contract ERC3643Token is ERC20, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/ERC3643Token.sol\":371:884  constructor() ERC20(\"TrancheTokenA\", \"TTA\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0d\n  dup2\n  mstore\n  0x20\n  add\n  shl(0x98, 0x5472616e636865546f6b656e41)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe8, 0x545441)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_5\n  swap2\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_6\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/ERC3643Token.sol\":446:488  0x47574C311cD6C7F8b07CF18d776a25719c61EE22 */\n  0x47574c311cd6c7f8b07cf18d776a25719c61ee22\n  swap2\n  pop\n  dup2\n  swap1\n  pop\n    /* \"contracts/ERC3643Token.sol\":425:443  address controller */\n  0x00\n    /* \"contracts/ERC3643Token.sol\":659:673  10**decimals() */\n  tag_11\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n  0x12\n    /* \"contracts/ERC3643Token.sol\":659:661  10 */\n  0x0a\n    /* \"contracts/ERC3643Token.sol\":659:673  10**decimals() */\n  tag_12\n  jump\t// in\ntag_11:\n    /* \"contracts/ERC3643Token.sol\":647:673  1_000_000 * 10**decimals() */\n  tag_13\n  swap1\n    /* \"contracts/ERC3643Token.sol\":647:656  1_000_000 */\n  0x0f4240\n    /* \"contracts/ERC3643Token.sol\":647:673  1_000_000 * 10**decimals() */\n  tag_14\n  jump\t// in\ntag_13:\n    /* \"contracts/ERC3643Token.sol\":623:673  uint256 initialSupply = 1_000_000 * 10**decimals() */\n  swap1\n  pop\n    /* \"contracts/ERC3643Token.sol\":702:744  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n  0x00\n    /* \"contracts/ERC3643Token.sol\":733:743  msg.sender */\n  caller\n    /* \"contracts/ERC3643Token.sol\":702:712  _grantRole */\n  tag_16\n    /* \"contracts/ERC3643Token.sol\":702:744  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_15:\n  pop\n    /* \"contracts/ERC3643Token.sol\":754:793  _grantRole(CONTROLLER_ROLE, controller) */\n  tag_17\n    /* \"contracts/ERC3643Token.sol\":268:296  keccak256(\"CONTROLLER_ROLE\") */\n  0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n    /* \"contracts/ERC3643Token.sol\":782:792  controller */\n  dup5\n    /* \"contracts/ERC3643Token.sol\":754:764  _grantRole */\n  tag_16\n    /* \"contracts/ERC3643Token.sol\":754:793  _grantRole(CONTROLLER_ROLE, controller) */\n  jump\t// in\ntag_17:\n  pop\n    /* \"contracts/ERC3643Token.sol\":803:834  _grantRole(MINTER_ROLE, minter) */\n  tag_18\n    /* \"contracts/ERC3643Token.sol\":340:364  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/ERC3643Token.sol\":827:833  minter */\n  dup4\n    /* \"contracts/ERC3643Token.sol\":803:813  _grantRole */\n  tag_16\n    /* \"contracts/ERC3643Token.sol\":803:834  _grantRole(MINTER_ROLE, minter) */\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/ERC3643Token.sol\":845:877  _mint(msg.sender, initialSupply) */\n  tag_19\n    /* \"contracts/ERC3643Token.sol\":851:861  msg.sender */\n  caller\n    /* \"contracts/ERC3643Token.sol\":863:876  initialSupply */\n  dup3\n    /* \"contracts/ERC3643Token.sol\":845:850  _mint */\n  tag_20\n    /* \"contracts/ERC3643Token.sol\":845:877  _mint(msg.sender, initialSupply) */\n  jump\t// in\ntag_19:\n    /* \"contracts/ERC3643Token.sol\":415:884  {... */\n  pop\n  pop\n  pop\n    /* \"contracts/ERC3643Token.sol\":174:1292  contract ERC3643Token is ERC20, AccessControl {... */\n  jump(tag_58)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  dup3\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n  tag_26\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x00\n  dup4\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n  0x05\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n  0x20\n  swap1\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n  tag_27\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_26:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_31\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4554:4605   */\n  mstore\n    /* \"#utility.yul\":4527:4545   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\ntag_32:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_34\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_35\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_34:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_35:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_39\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_40\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_42\n  swap1\n  pop\n  jump\ntag_39:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_43\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":4966:4998   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4948:4999   */\n  mstore\n    /* \"#utility.yul\":5015:5033   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":5008:5042   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":5058:5076   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":5051:5085   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":4921:4939   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_32\n    /* \"#utility.yul\":4746:5091   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_43:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_42:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_46\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_47)\ntag_46:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_47:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_48\n  swap2\n    /* \"#utility.yul\":5242:5267   */\n  dup2\n  mstore\n    /* \"#utility.yul\":5230:5232   */\n  0x20\n    /* \"#utility.yul\":5215:5233   */\n  add\n  swap1\n    /* \"#utility.yul\":5096:5273   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_48:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_50:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_51:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_61\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_61:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_62\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_62:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1200   */\ntag_53:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1194   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":819:824   */\n  dup2\n    /* \"#utility.yul\":816:817   */\n  0x00\n    /* \"#utility.yul\":809:825   */\n  mstore\n    /* \"#utility.yul\":863:867   */\n  0x20\n    /* \"#utility.yul\":860:861   */\n  0x00\n    /* \"#utility.yul\":850:868   */\n  keccak256\n    /* \"#utility.yul\":933:935   */\n  0x1f\n    /* \"#utility.yul\":921:931   */\n  dup6\n    /* \"#utility.yul\":917:936   */\n  add\n    /* \"#utility.yul\":914:915   */\n  0x05\n    /* \"#utility.yul\":910:937   */\n  shr\n    /* \"#utility.yul\":904:908   */\n  dup2\n    /* \"#utility.yul\":900:938   */\n  add\n    /* \"#utility.yul\":969:973   */\n  0x20\n    /* \"#utility.yul\":957:967   */\n  dup7\n    /* \"#utility.yul\":954:974   */\n  lt\n    /* \"#utility.yul\":951:998   */\n  iszero\n  tag_66\n  jumpi\n  pop\n    /* \"#utility.yul\":992:996   */\n  dup1\n    /* \"#utility.yul\":951:998   */\ntag_66:\n    /* \"#utility.yul\":1047:1049   */\n  0x1f\n    /* \"#utility.yul\":1042:1045   */\n  dup6\n    /* \"#utility.yul\":1038:1050   */\n  add\n    /* \"#utility.yul\":1035:1036   */\n  0x05\n    /* \"#utility.yul\":1031:1051   */\n  shr\n    /* \"#utility.yul\":1025:1029   */\n  dup3\n    /* \"#utility.yul\":1021:1052   */\n  add\n    /* \"#utility.yul\":1011:1052   */\n  swap2\n  pop\n    /* \"#utility.yul\":1102:1184   */\ntag_67:\n    /* \"#utility.yul\":1120:1122   */\n  dup2\n    /* \"#utility.yul\":1113:1118   */\n  dup2\n    /* \"#utility.yul\":1110:1123   */\n  lt\n    /* \"#utility.yul\":1102:1184   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1165:1182   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1146:1147   */\n  0x01\n    /* \"#utility.yul\":1135:1148   */\n  add\n    /* \"#utility.yul\":1102:1184   */\n  jump(tag_67)\ntag_69:\n    /* \"#utility.yul\":1106:1109   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1194   */\ntag_65:\n    /* \"#utility.yul\":657:1200   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1376:2721   */\ntag_6:\n    /* \"#utility.yul\":1496:1506   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1518:1548   */\n  dup2\n  gt\n    /* \"#utility.yul\":1515:1571   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":1551:1569   */\n  tag_73\n  tag_50\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1580:1677   */\n  tag_74\n    /* \"#utility.yul\":1670:1676   */\n  dup2\n    /* \"#utility.yul\":1630:1668   */\n  tag_75\n    /* \"#utility.yul\":1662:1666   */\n  dup5\n    /* \"#utility.yul\":1656:1667   */\n  sload\n    /* \"#utility.yul\":1630:1668   */\n  tag_51\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1624:1628   */\n  dup5\n    /* \"#utility.yul\":1580:1677   */\n  tag_53\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":1732:1736   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1789:1791   */\n  0x1f\n    /* \"#utility.yul\":1778:1792   */\n  dup4\n  gt\n    /* \"#utility.yul\":1806:1807   */\n  0x01\n    /* \"#utility.yul\":1801:2464   */\n  dup2\n  eq\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2508:2509   */\n  0x00\n    /* \"#utility.yul\":2525:2531   */\n  dup5\n    /* \"#utility.yul\":2522:2611   */\n  iszero\n  tag_78\n  jumpi\n  pop\n    /* \"#utility.yul\":2577:2596   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2571:2597   */\n  mload\n    /* \"#utility.yul\":2522:2611   */\ntag_78:\n  not(0x00)\n    /* \"#utility.yul\":1333:1334   */\n  0x03\n    /* \"#utility.yul\":1329:1340   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1325:1349   */\n  shr\n    /* \"#utility.yul\":1321:1350   */\n  not\n    /* \"#utility.yul\":1311:1351   */\n  and\n    /* \"#utility.yul\":1357:1358   */\n  0x01\n    /* \"#utility.yul\":1353:1364   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1308:1365   */\n  or\n    /* \"#utility.yul\":2624:2705   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1771:2715   */\n  jump(tag_69)\n    /* \"#utility.yul\":1801:2464   */\ntag_77:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1837:1857   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1955:2191   */\ntag_81:\n    /* \"#utility.yul\":1969:1976   */\n  dup3\n    /* \"#utility.yul\":1966:1967   */\n  dup2\n    /* \"#utility.yul\":1963:1977   */\n  lt\n    /* \"#utility.yul\":1955:2191   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":2058:2077   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2052:2078   */\n  mload\n    /* \"#utility.yul\":2037:2079   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2150:2177   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2118:2119   */\n  0x01\n    /* \"#utility.yul\":2106:2120   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1985:2004   */\n  dup5\n  add\n    /* \"#utility.yul\":1955:2191   */\n  jump(tag_81)\ntag_83:\n    /* \"#utility.yul\":1959:1962   */\n  pop\n    /* \"#utility.yul\":2219:2225   */\n  dup6\n    /* \"#utility.yul\":2210:2217   */\n  dup3\n    /* \"#utility.yul\":2207:2226   */\n  lt\n    /* \"#utility.yul\":2204:2405   */\n  iszero\n  tag_84\n  jumpi\n    /* \"#utility.yul\":2280:2299   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2274:2300   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2363:2364   */\n  0x03\n    /* \"#utility.yul\":2359:2373   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2375:2378   */\n  0xf8\n    /* \"#utility.yul\":2355:2379   */\n  and\n    /* \"#utility.yul\":2351:2388   */\n  shr\n    /* \"#utility.yul\":2347:2389   */\n  not\n    /* \"#utility.yul\":2332:2390   */\n  and\n    /* \"#utility.yul\":2317:2391   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2204:2405   */\ntag_84:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2451:2452   */\n  0x01\n    /* \"#utility.yul\":2435:2449   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2431:2453   */\n  add\n    /* \"#utility.yul\":2418:2454   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1376:2721   */\n  jump\t// out\n    /* \"#utility.yul\":2726:2853   */\ntag_55:\n    /* \"#utility.yul\":2787:2797   */\n  0x4e487b71\n    /* \"#utility.yul\":2782:2785   */\n  0xe0\n    /* \"#utility.yul\":2778:2798   */\n  shl\n    /* \"#utility.yul\":2775:2776   */\n  0x00\n    /* \"#utility.yul\":2768:2799   */\n  mstore\n    /* \"#utility.yul\":2818:2822   */\n  0x11\n    /* \"#utility.yul\":2815:2816   */\n  0x04\n    /* \"#utility.yul\":2808:2823   */\n  mstore\n    /* \"#utility.yul\":2842:2846   */\n  0x24\n    /* \"#utility.yul\":2839:2840   */\n  0x00\n    /* \"#utility.yul\":2832:2847   */\n  revert\n    /* \"#utility.yul\":2858:3274   */\ntag_56:\n    /* \"#utility.yul\":2947:2948   */\n  0x01\n    /* \"#utility.yul\":2984:2989   */\n  dup2\n    /* \"#utility.yul\":2947:2948   */\n  dup2\n    /* \"#utility.yul\":2998:3268   */\ntag_87:\n    /* \"#utility.yul\":3019:3026   */\n  dup1\n    /* \"#utility.yul\":3009:3017   */\n  dup6\n    /* \"#utility.yul\":3006:3027   */\n  gt\n    /* \"#utility.yul\":2998:3268   */\n  iszero\n  tag_89\n  jumpi\n    /* \"#utility.yul\":3078:3082   */\n  dup2\n    /* \"#utility.yul\":3074:3075   */\n  0x00\n    /* \"#utility.yul\":3070:3076   */\n  not\n    /* \"#utility.yul\":3066:3083   */\n  div\n    /* \"#utility.yul\":3060:3064   */\n  dup3\n    /* \"#utility.yul\":3057:3084   */\n  gt\n    /* \"#utility.yul\":3054:3107   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":3087:3105   */\n  tag_91\n  tag_55\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3137:3144   */\n  dup1\n    /* \"#utility.yul\":3127:3135   */\n  dup6\n    /* \"#utility.yul\":3123:3145   */\n  and\n    /* \"#utility.yul\":3120:3175   */\n  iszero\n  tag_92\n  jumpi\n    /* \"#utility.yul\":3157:3173   */\n  swap2\n  dup2\n  mul\n  swap2\n    /* \"#utility.yul\":3120:3175   */\ntag_92:\n    /* \"#utility.yul\":3236:3258   */\n  swap4\n  dup5\n  shr\n  swap4\n    /* \"#utility.yul\":3196:3211   */\n  swap1\n  dup1\n  mul\n  swap1\n    /* \"#utility.yul\":2998:3268   */\n  jump(tag_87)\ntag_89:\n    /* \"#utility.yul\":3002:3005   */\n  pop\n    /* \"#utility.yul\":2858:3274   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3279:4085   */\ntag_57:\n    /* \"#utility.yul\":3328:3333   */\n  0x00\n    /* \"#utility.yul\":3358:3366   */\n  dup3\n    /* \"#utility.yul\":3348:3428   */\n  tag_94\n  jumpi\n  pop\n    /* \"#utility.yul\":3399:3400   */\n  0x01\n    /* \"#utility.yul\":3413:3418   */\n  jump(tag_29)\n    /* \"#utility.yul\":3348:3428   */\ntag_94:\n    /* \"#utility.yul\":3447:3451   */\n  dup2\n    /* \"#utility.yul\":3437:3513   */\n  tag_95\n  jumpi\n  pop\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3498:3503   */\n  jump(tag_29)\n    /* \"#utility.yul\":3437:3513   */\ntag_95:\n    /* \"#utility.yul\":3529:3533   */\n  dup2\n    /* \"#utility.yul\":3547:3548   */\n  0x01\n    /* \"#utility.yul\":3542:3601   */\n  dup2\n  eq\n  tag_97\n  jumpi\n    /* \"#utility.yul\":3615:3616   */\n  0x02\n    /* \"#utility.yul\":3610:3740   */\n  dup2\n  eq\n  tag_98\n  jumpi\n    /* \"#utility.yul\":3522:3740   */\n  jump(tag_96)\n    /* \"#utility.yul\":3542:3601   */\ntag_97:\n    /* \"#utility.yul\":3572:3573   */\n  0x01\n    /* \"#utility.yul\":3563:3573   */\n  swap2\n  pop\n    /* \"#utility.yul\":3586:3591   */\n  pop\n  jump(tag_29)\n    /* \"#utility.yul\":3610:3740   */\ntag_98:\n    /* \"#utility.yul\":3647:3650   */\n  0xff\n    /* \"#utility.yul\":3637:3645   */\n  dup5\n    /* \"#utility.yul\":3634:3651   */\n  gt\n    /* \"#utility.yul\":3631:3674   */\n  iszero\n  tag_100\n  jumpi\n    /* \"#utility.yul\":3654:3672   */\n  tag_100\n  tag_55\n  jump\t// in\ntag_100:\n  pop\n  pop\n    /* \"#utility.yul\":3710:3711   */\n  0x01\n    /* \"#utility.yul\":3696:3712   */\n  dup3\n  shl\n    /* \"#utility.yul\":3725:3730   */\n  jump(tag_29)\n    /* \"#utility.yul\":3522:3740   */\ntag_96:\n  pop\n    /* \"#utility.yul\":3824:3826   */\n  0x20\n    /* \"#utility.yul\":3814:3822   */\n  dup4\n    /* \"#utility.yul\":3811:3827   */\n  lt\n    /* \"#utility.yul\":3805:3808   */\n  0x0133\n    /* \"#utility.yul\":3799:3803   */\n  dup4\n    /* \"#utility.yul\":3796:3809   */\n  lt\n    /* \"#utility.yul\":3792:3828   */\n  and\n    /* \"#utility.yul\":3786:3788   */\n  0x4e\n    /* \"#utility.yul\":3776:3784   */\n  dup5\n    /* \"#utility.yul\":3773:3789   */\n  lt\n    /* \"#utility.yul\":3768:3770   */\n  0x0b\n    /* \"#utility.yul\":3762:3766   */\n  dup5\n    /* \"#utility.yul\":3759:3771   */\n  lt\n    /* \"#utility.yul\":3755:3790   */\n  and\n    /* \"#utility.yul\":3752:3829   */\n  or\n    /* \"#utility.yul\":3749:3908   */\n  iszero\n  tag_101\n  jumpi\n  pop\n    /* \"#utility.yul\":3861:3880   */\n  dup2\n  dup2\n  exp\n    /* \"#utility.yul\":3893:3898   */\n  jump(tag_29)\n    /* \"#utility.yul\":3749:3908   */\ntag_101:\n    /* \"#utility.yul\":3940:3974   */\n  tag_102\n    /* \"#utility.yul\":3965:3973   */\n  dup4\n    /* \"#utility.yul\":3959:3963   */\n  dup4\n    /* \"#utility.yul\":3940:3974   */\n  tag_56\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":4010:4016   */\n  dup1\n    /* \"#utility.yul\":4006:4007   */\n  0x00\n    /* \"#utility.yul\":4002:4008   */\n  not\n    /* \"#utility.yul\":3998:4017   */\n  div\n    /* \"#utility.yul\":3989:3996   */\n  dup3\n    /* \"#utility.yul\":3986:4018   */\n  gt\n    /* \"#utility.yul\":3983:4041   */\n  iszero\n  tag_104\n  jumpi\n    /* \"#utility.yul\":4021:4039   */\n  tag_104\n  tag_55\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":4059:4079   */\n  mul\n  swap4\n    /* \"#utility.yul\":3279:4085   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4090:4230   */\ntag_12:\n    /* \"#utility.yul\":4148:4153   */\n  0x00\n    /* \"#utility.yul\":4177:4224   */\n  tag_106\n    /* \"#utility.yul\":4218:4222   */\n  0xff\n    /* \"#utility.yul\":4208:4216   */\n  dup5\n    /* \"#utility.yul\":4204:4223   */\n  and\n    /* \"#utility.yul\":4198:4202   */\n  dup4\n    /* \"#utility.yul\":4177:4224   */\n  tag_57\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":4168:4224   */\n  swap4\n    /* \"#utility.yul\":4090:4230   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4235:4403   */\ntag_14:\n    /* \"#utility.yul\":4308:4317   */\n  dup1\n  dup3\n  mul\n    /* \"#utility.yul\":4339:4348   */\n  dup2\n  iszero\n    /* \"#utility.yul\":4356:4371   */\n  dup3\n  dup3\n  div\n    /* \"#utility.yul\":4350:4372   */\n  dup5\n  eq\n    /* \"#utility.yul\":4336:4373   */\n  or\n    /* \"#utility.yul\":4326:4397   */\n  tag_29\n  jumpi\n    /* \"#utility.yul\":4377:4395   */\n  tag_29\n  tag_55\n  jump\t// in\n    /* \"#utility.yul\":4616:4741   */\ntag_41:\n    /* \"#utility.yul\":4681:4690   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4702:4712   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4699:4735   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":4715:4733   */\n  tag_29\n  tag_55\n  jump\t// in\n    /* \"#utility.yul\":5096:5273   */\ntag_58:\n    /* \"contracts/ERC3643Token.sol\":174:1292  contract ERC3643Token is ERC20, AccessControl {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/ERC3643Token.sol\":174:1292  contract ERC3643Token is ERC20, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xd5391393\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x91d14854\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x40c10f19\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x23b872dd\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x2f2ff15d\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup1\n      0x092c5b3b\n      gt\n      tag_29\n      jumpi\n      dup1\n      0x092c5b3b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n        /* \"#utility.yul\":516:530   */\n      swap1\n      iszero\n        /* \"#utility.yul\":509:531   */\n      iszero\n        /* \"#utility.yul\":491:532   */\n      dup2\n      mstore\n        /* \"#utility.yul\":479:481   */\n      0x20\n        /* \"#utility.yul\":464:482   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/ERC3643Token.sol\":226:296  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n    tag_5:\n      tag_40\n        /* \"contracts/ERC3643Token.sol\":268:296  keccak256(\"CONTROLLER_ROLE\") */\n      0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n        /* \"contracts/ERC3643Token.sol\":226:296  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n      dup2\n      jump\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":1242:1267   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      add\n        /* \"contracts/ERC3643Token.sol\":226:296  bytes32 public constant CONTROLLER_ROLE = keccak256(\"CONTROLLER_ROLE\") */\n      tag_34\n        /* \"#utility.yul\":1096:1273   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_30\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      jump(tag_40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_30\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_9:\n      tag_40\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3810:3930  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_10:\n      tag_63\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_11:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":2839:2875   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2827:2829   */\n      0x20\n        /* \"#utility.yul\":2812:2830   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_34\n        /* \"#utility.yul\":2697:2881   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_12:\n      tag_63\n      tag_72\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/ERC3643Token.sol\":1011:1118  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_13:\n      tag_63\n      tag_75\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_14:\n      tag_40\n      tag_78\n      calldatasize\n      0x04\n      tag_79\n      jump\t// in\n    tag_78:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_15:\n      tag_30\n      tag_83\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      swap2\n      dup3\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2854:2990  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_16:\n      tag_36\n      tag_87\n      jump\t// in\n        /* \"contracts/ERC3643Token.sol\":890:1005  function burn(address from, uint256 amount) external onlyRole(CONTROLLER_ROLE) {... */\n    tag_17:\n      tag_63\n      tag_90\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      tag_40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2232:2236  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2187:2236  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"contracts/ERC3643Token.sol\":1124:1290  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_19:\n      tag_30\n      tag_96\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n        /* \"contracts/ERC3643Token.sol\":302:364  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_20:\n      tag_40\n        /* \"contracts/ERC3643Token.sol\":340:364  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/ERC3643Token.sol\":302:364  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_21:\n      tag_63\n      tag_103\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_22:\n      tag_40\n      tag_106\n      calldatasize\n      0x04\n      tag_107\n      jump\t// in\n    tag_106:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2650:2654  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2688:2720  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2720  interfaceId == type(IAccessControl).interfaceId */\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2673:2760  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2760  super.supportsInterface(interfaceId) */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2666:2760  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2565:2767  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_117\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      dup1\n      iszero\n      tag_118\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_119\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_118)\n    tag_119:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_120:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_120\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_118:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_124:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n      swap4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_129\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_130\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_131:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_136\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4341:4345  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4347:4354  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4340  _grantRole */\n      tag_140\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4330:4355  _grantRole(role, account) */\n      jump\t// in\n    tag_139:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4226:4362  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_73:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5421:5455  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5478:5508  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5417:5519  if (callerConfirmation != _msgSender()) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      tag_145\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5541:5545  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5547:5565  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5540  _revokeRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5529:5566  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5328:5573  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/ERC3643Token.sol\":1011:1118  function mint(address to, uint256 amount) external onlyRole(MINTER_ROLE) {... */\n    tag_76:\n        /* \"contracts/ERC3643Token.sol\":340:364  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_148\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/ERC3643Token.sol\":1094:1111  _mint(to, amount) */\n      tag_145\n        /* \"contracts/ERC3643Token.sol\":1100:1102  to */\n      dup4\n        /* \"contracts/ERC3643Token.sol\":1104:1110  amount */\n      dup4\n        /* \"contracts/ERC3643Token.sol\":1094:1099  _mint */\n      tag_151\n        /* \"contracts/ERC3643Token.sol\":1094:1111  _mint(to, amount) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n        /* \"contracts/ERC3643Token.sol\":890:1005  function burn(address from, uint256 amount) external onlyRole(CONTROLLER_ROLE) {... */\n    tag_91:\n        /* \"contracts/ERC3643Token.sol\":268:296  keccak256(\"CONTROLLER_ROLE\") */\n      0x7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_161\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_161:\n        /* \"contracts/ERC3643Token.sol\":979:998  _burn(from, amount) */\n      tag_145\n        /* \"contracts/ERC3643Token.sol\":985:989  from */\n      dup4\n        /* \"contracts/ERC3643Token.sol\":991:997  amount */\n      dup4\n        /* \"contracts/ERC3643Token.sol\":979:984  _burn */\n      tag_164\n        /* \"contracts/ERC3643Token.sol\":979:998  _burn(from, amount) */\n      jump\t// in\n        /* \"contracts/ERC3643Token.sol\":1124:1290  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_97:\n        /* \"contracts/ERC3643Token.sol\":1195:1199  bool */\n      0x00\n        /* \"contracts/ERC3643Token.sol\":1218:1244  super.transfer(to, amount) */\n      tag_166\n        /* \"contracts/ERC3643Token.sol\":1233:1235  to */\n      dup4\n        /* \"contracts/ERC3643Token.sol\":1237:1243  amount */\n      dup4\n        /* \"contracts/ERC3643Token.sol\":1218:1232  super.transfer */\n      tag_167\n        /* \"contracts/ERC3643Token.sol\":1218:1244  super.transfer(to, amount) */\n      jump\t// in\n    tag_166:\n        /* \"contracts/ERC3643Token.sol\":1211:1244  return super.transfer(to, amount) */\n      swap4\n        /* \"contracts/ERC3643Token.sol\":1124:1290  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4642:4780  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3875:3882  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3907  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3913  _roles[role] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3901:3923  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      tag_170\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2475:2479  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2474  _checkRole */\n      tag_137\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2464:2480  _checkRole(role) */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4759:4763  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4765:4772  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4758  _revokeRole */\n      tag_146\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4747:4773  _revokeRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_130:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_182\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4004:4059   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3986:4060   */\n      mstore\n        /* \"#utility.yul\":4076:4094   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4069:4103   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4119:4137   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4112:4146   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3959:3977   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_182:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_187\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4303:4377   */\n      mstore\n        /* \"#utility.yul\":4276:4294   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_183\n        /* \"#utility.yul\":4157:4383   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4303:4377   */\n      mstore\n        /* \"#utility.yul\":4276:4294   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_183\n        /* \"#utility.yul\":4157:4383   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_145\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      tag_195\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3276:3280  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3275  _checkRole */\n      tag_197\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3265:3295  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_195:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3199:3302  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6179:6495  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6256:6260  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6321  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6327  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6344  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6347:6351  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6315:6351  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n      tag_201\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6397:6409  _msgSender() */\n    tag_201:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6388:6395  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6382:6386  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6370:6410  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6431:6435  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6424:6435  return true */\n      jump(tag_112)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6272:6489  if (!hasRole(role, account)) {... */\n    tag_200:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6473:6478  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6466:6478  return false */\n      jump(tag_112)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6732:7049  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6810:6814  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6826:7043  if (hasRole(role, account)) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup4\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6874  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6897  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6905  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6868:6880  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6905  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6924:6964  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6985:6989  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6978:6989  return true */\n      jump(tag_112)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n    tag_151:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0xec442f05)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4303:4377   */\n      mstore\n        /* \"#utility.yul\":4276:4294   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n      tag_183\n        /* \"#utility.yul\":4157:4383   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7965:8171  function _burn(address account, uint256 value) internal {... */\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8035:8056  account == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n      tag_213\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      shl(0xe1, 0x4b637e8f)\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8106:8107  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4303:4377   */\n      mstore\n        /* \"#utility.yul\":4276:4294   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8079:8109  ERC20InvalidSender(address(0)) */\n      tag_183\n        /* \"#utility.yul\":4157:4383   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8031:8120  if (account == address(0)) {... */\n    tag_213:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8137:8144  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8154:8155  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8158:8163  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8136  _update */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8129:8164  _update(account, address(0), value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_124\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_178:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_220\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4303:4377   */\n      mstore\n        /* \"#utility.yul\":4276:4294   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_183\n        /* \"#utility.yul\":4157:4383   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_220:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4303:4377   */\n      mstore\n        /* \"#utility.yul\":4276:4294   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_183\n        /* \"#utility.yul\":4157:4383   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_222:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_139\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_225\n      swap2\n        /* \"#utility.yul\":1242:1267   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      add\n      swap1\n        /* \"#utility.yul\":1096:1273   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_225:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_193:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_230\n      swap1\n      pop\n      jump\n    tag_227:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4004:4059   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3986:4060   */\n      mstore\n        /* \"#utility.yul\":4076:4094   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4069:4103   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":4119:4137   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4112:4146   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":3959:3977   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_183\n        /* \"#utility.yul\":3784:4152   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_231:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_233\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_234)\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_234:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_235\n      swap2\n        /* \"#utility.yul\":1242:1267   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1230:1232   */\n      0x20\n        /* \"#utility.yul\":1215:1233   */\n      add\n      swap1\n        /* \"#utility.yul\":1096:1273   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3432:3629  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2931:2935  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      dup3\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2960  _roles */\n      0x05\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2966  _roles[role] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2954:2983  _roles[role].hasRole[account] */\n      dup6\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3515:3623  if (!hasRole(role, account)) {... */\n      tag_211\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4864:4919   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4846:4920   */\n      mstore\n        /* \"#utility.yul\":4936:4954   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4929:4963   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4819:4837   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3565:3612  AccessControlUnauthorizedAccount(account, role) */\n      tag_183\n        /* \"#utility.yul\":4672:4969   */\n      jump\n        /* \"#utility.yul\":14:346   */\n    tag_32:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_244\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_244:\n        /* \"#utility.yul\":180:189   */\n      dup2\n        /* \"#utility.yul\":167:190   */\n      calldataload\n        /* \"#utility.yul\":230:296   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":223:228   */\n      dup2\n        /* \"#utility.yul\":219:297   */\n      and\n        /* \"#utility.yul\":212:217   */\n      dup2\n        /* \"#utility.yul\":209:298   */\n      eq\n        /* \"#utility.yul\":199:316   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":312:313   */\n      0x00\n        /* \"#utility.yul\":309:310   */\n      dup1\n        /* \"#utility.yul\":302:314   */\n      revert\n        /* \"#utility.yul\":543:1091   */\n    tag_39:\n        /* \"#utility.yul\":655:659   */\n      0x00\n        /* \"#utility.yul\":684:686   */\n      0x20\n        /* \"#utility.yul\":713:715   */\n      dup1\n        /* \"#utility.yul\":702:711   */\n      dup4\n        /* \"#utility.yul\":695:716   */\n      mstore\n        /* \"#utility.yul\":745:751   */\n      dup4\n        /* \"#utility.yul\":739:752   */\n      mload\n        /* \"#utility.yul\":788:794   */\n      dup1\n        /* \"#utility.yul\":783:785   */\n      0x20\n        /* \"#utility.yul\":772:781   */\n      dup6\n        /* \"#utility.yul\":768:786   */\n      add\n        /* \"#utility.yul\":761:795   */\n      mstore\n        /* \"#utility.yul\":813:814   */\n      0x00\n        /* \"#utility.yul\":823:963   */\n    tag_248:\n        /* \"#utility.yul\":837:843   */\n      dup2\n        /* \"#utility.yul\":834:835   */\n      dup2\n        /* \"#utility.yul\":831:844   */\n      lt\n        /* \"#utility.yul\":823:963   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":932:946   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":928:951   */\n      dup4\n      add\n        /* \"#utility.yul\":922:952   */\n      mload\n        /* \"#utility.yul\":898:915   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":917:919   */\n      0x40\n        /* \"#utility.yul\":894:920   */\n      add\n        /* \"#utility.yul\":887:953   */\n      mstore\n        /* \"#utility.yul\":852:862   */\n      dup3\n      add\n        /* \"#utility.yul\":823:963   */\n      jump(tag_248)\n    tag_250:\n        /* \"#utility.yul\":827:830   */\n      pop\n        /* \"#utility.yul\":1012:1013   */\n      0x00\n        /* \"#utility.yul\":1007:1009   */\n      0x40\n        /* \"#utility.yul\":998:1004   */\n      dup3\n        /* \"#utility.yul\":987:996   */\n      dup7\n        /* \"#utility.yul\":983:1005   */\n      add\n        /* \"#utility.yul\":979:1010   */\n      add\n        /* \"#utility.yul\":972:1014   */\n      mstore\n        /* \"#utility.yul\":1082:1084   */\n      0x40\n        /* \"#utility.yul\":1075:1077   */\n      0x1f\n        /* \"#utility.yul\":1071:1078   */\n      not\n        /* \"#utility.yul\":1066:1068   */\n      0x1f\n        /* \"#utility.yul\":1058:1064   */\n      dup4\n        /* \"#utility.yul\":1054:1069   */\n      add\n        /* \"#utility.yul\":1050:1079   */\n      and\n        /* \"#utility.yul\":1039:1048   */\n      dup6\n        /* \"#utility.yul\":1035:1080   */\n      add\n        /* \"#utility.yul\":1031:1085   */\n      add\n        /* \"#utility.yul\":1023:1085   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":543:1091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1278:1474   */\n    tag_241:\n        /* \"#utility.yul\":1346:1366   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1395:1449   */\n      dup2\n      and\n        /* \"#utility.yul\":1385:1450   */\n      dup2\n      eq\n        /* \"#utility.yul\":1375:1468   */\n      tag_253\n      jumpi\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1461:1462   */\n      dup1\n        /* \"#utility.yul\":1454:1466   */\n      revert\n        /* \"#utility.yul\":1375:1468   */\n    tag_253:\n        /* \"#utility.yul\":1278:1474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1479:1733   */\n    tag_46:\n        /* \"#utility.yul\":1547:1553   */\n      0x00\n        /* \"#utility.yul\":1555:1561   */\n      dup1\n        /* \"#utility.yul\":1608:1610   */\n      0x40\n        /* \"#utility.yul\":1596:1605   */\n      dup4\n        /* \"#utility.yul\":1587:1594   */\n      dup6\n        /* \"#utility.yul\":1583:1606   */\n      sub\n        /* \"#utility.yul\":1579:1611   */\n      slt\n        /* \"#utility.yul\":1576:1628   */\n      iszero\n      tag_255\n      jumpi\n        /* \"#utility.yul\":1624:1625   */\n      0x00\n        /* \"#utility.yul\":1621:1622   */\n      dup1\n        /* \"#utility.yul\":1614:1626   */\n      revert\n        /* \"#utility.yul\":1576:1628   */\n    tag_255:\n        /* \"#utility.yul\":1647:1676   */\n      tag_256\n        /* \"#utility.yul\":1666:1675   */\n      dup4\n        /* \"#utility.yul\":1647:1676   */\n      tag_241\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":1637:1676   */\n      swap5\n        /* \"#utility.yul\":1723:1725   */\n      0x20\n        /* \"#utility.yul\":1708:1726   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1695:1727   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1479:1733   */\n      jump\t// out\n        /* \"#utility.yul\":1920:2248   */\n    tag_55:\n        /* \"#utility.yul\":1997:2003   */\n      0x00\n        /* \"#utility.yul\":2005:2011   */\n      dup1\n        /* \"#utility.yul\":2013:2019   */\n      0x00\n        /* \"#utility.yul\":2066:2068   */\n      0x60\n        /* \"#utility.yul\":2054:2063   */\n      dup5\n        /* \"#utility.yul\":2045:2052   */\n      dup7\n        /* \"#utility.yul\":2041:2064   */\n      sub\n        /* \"#utility.yul\":2037:2069   */\n      slt\n        /* \"#utility.yul\":2034:2086   */\n      iszero\n      tag_259\n      jumpi\n        /* \"#utility.yul\":2082:2083   */\n      0x00\n        /* \"#utility.yul\":2079:2080   */\n      dup1\n        /* \"#utility.yul\":2072:2084   */\n      revert\n        /* \"#utility.yul\":2034:2086   */\n    tag_259:\n        /* \"#utility.yul\":2105:2134   */\n      tag_260\n        /* \"#utility.yul\":2124:2133   */\n      dup5\n        /* \"#utility.yul\":2105:2134   */\n      tag_241\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2095:2134   */\n      swap3\n      pop\n        /* \"#utility.yul\":2153:2191   */\n      tag_261\n        /* \"#utility.yul\":2187:2189   */\n      0x20\n        /* \"#utility.yul\":2176:2185   */\n      dup6\n        /* \"#utility.yul\":2172:2190   */\n      add\n        /* \"#utility.yul\":2153:2191   */\n      tag_241\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":2143:2191   */\n      swap2\n      pop\n        /* \"#utility.yul\":2238:2240   */\n      0x40\n        /* \"#utility.yul\":2227:2236   */\n      dup5\n        /* \"#utility.yul\":2223:2241   */\n      add\n        /* \"#utility.yul\":2210:2242   */\n      calldataload\n        /* \"#utility.yul\":2200:2242   */\n      swap1\n      pop\n        /* \"#utility.yul\":1920:2248   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2253:2433   */\n    tag_60:\n        /* \"#utility.yul\":2312:2318   */\n      0x00\n        /* \"#utility.yul\":2365:2367   */\n      0x20\n        /* \"#utility.yul\":2353:2362   */\n      dup3\n        /* \"#utility.yul\":2344:2351   */\n      dup5\n        /* \"#utility.yul\":2340:2363   */\n      sub\n        /* \"#utility.yul\":2336:2368   */\n      slt\n        /* \"#utility.yul\":2333:2385   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":2381:2382   */\n      0x00\n        /* \"#utility.yul\":2378:2379   */\n      dup1\n        /* \"#utility.yul\":2371:2383   */\n      revert\n        /* \"#utility.yul\":2333:2385   */\n    tag_263:\n      pop\n        /* \"#utility.yul\":2404:2427   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":2253:2433   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2438:2692   */\n    tag_65:\n        /* \"#utility.yul\":2506:2512   */\n      0x00\n        /* \"#utility.yul\":2514:2520   */\n      dup1\n        /* \"#utility.yul\":2567:2569   */\n      0x40\n        /* \"#utility.yul\":2555:2564   */\n      dup4\n        /* \"#utility.yul\":2546:2553   */\n      dup6\n        /* \"#utility.yul\":2542:2565   */\n      sub\n        /* \"#utility.yul\":2538:2570   */\n      slt\n        /* \"#utility.yul\":2535:2587   */\n      iszero\n      tag_265\n      jumpi\n        /* \"#utility.yul\":2583:2584   */\n      0x00\n        /* \"#utility.yul\":2580:2581   */\n      dup1\n        /* \"#utility.yul\":2573:2585   */\n      revert\n        /* \"#utility.yul\":2535:2587   */\n    tag_265:\n        /* \"#utility.yul\":2619:2628   */\n      dup3\n        /* \"#utility.yul\":2606:2629   */\n      calldataload\n        /* \"#utility.yul\":2596:2629   */\n      swap2\n      pop\n        /* \"#utility.yul\":2648:2686   */\n      tag_266\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2671:2680   */\n      dup5\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2648:2686   */\n      tag_241\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":2638:2686   */\n      swap1\n      pop\n        /* \"#utility.yul\":2438:2692   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2886:3072   */\n    tag_79:\n        /* \"#utility.yul\":2945:2951   */\n      0x00\n        /* \"#utility.yul\":2998:3000   */\n      0x20\n        /* \"#utility.yul\":2986:2995   */\n      dup3\n        /* \"#utility.yul\":2977:2984   */\n      dup5\n        /* \"#utility.yul\":2973:2996   */\n      sub\n        /* \"#utility.yul\":2969:3001   */\n      slt\n        /* \"#utility.yul\":2966:3018   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":3014:3015   */\n      0x00\n        /* \"#utility.yul\":3011:3012   */\n      dup1\n        /* \"#utility.yul\":3004:3016   */\n      revert\n        /* \"#utility.yul\":2966:3018   */\n    tag_269:\n        /* \"#utility.yul\":3037:3066   */\n      tag_166\n        /* \"#utility.yul\":3056:3065   */\n      dup3\n        /* \"#utility.yul\":3037:3066   */\n      tag_241\n      jump\t// in\n        /* \"#utility.yul\":3077:3337   */\n    tag_107:\n        /* \"#utility.yul\":3145:3151   */\n      0x00\n        /* \"#utility.yul\":3153:3159   */\n      dup1\n        /* \"#utility.yul\":3206:3208   */\n      0x40\n        /* \"#utility.yul\":3194:3203   */\n      dup4\n        /* \"#utility.yul\":3185:3192   */\n      dup6\n        /* \"#utility.yul\":3181:3204   */\n      sub\n        /* \"#utility.yul\":3177:3209   */\n      slt\n        /* \"#utility.yul\":3174:3226   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":3222:3223   */\n      0x00\n        /* \"#utility.yul\":3219:3220   */\n      dup1\n        /* \"#utility.yul\":3212:3224   */\n      revert\n        /* \"#utility.yul\":3174:3226   */\n    tag_272:\n        /* \"#utility.yul\":3245:3274   */\n      tag_273\n        /* \"#utility.yul\":3264:3273   */\n      dup4\n        /* \"#utility.yul\":3245:3274   */\n      tag_241\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3235:3274   */\n      swap2\n      pop\n        /* \"#utility.yul\":3293:3331   */\n      tag_266\n        /* \"#utility.yul\":3327:3329   */\n      0x20\n        /* \"#utility.yul\":3316:3325   */\n      dup5\n        /* \"#utility.yul\":3312:3330   */\n      add\n        /* \"#utility.yul\":3293:3331   */\n      tag_241\n      jump\t// in\n        /* \"#utility.yul\":3342:3779   */\n    tag_116:\n        /* \"#utility.yul\":3421:3422   */\n      0x01\n        /* \"#utility.yul\":3417:3429   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":3464:3476   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":3485:3546   */\n      tag_276\n      jumpi\n        /* \"#utility.yul\":3539:3543   */\n      0x7f\n        /* \"#utility.yul\":3531:3537   */\n      dup3\n        /* \"#utility.yul\":3527:3544   */\n      and\n        /* \"#utility.yul\":3517:3544   */\n      swap2\n      pop\n        /* \"#utility.yul\":3485:3546   */\n    tag_276:\n        /* \"#utility.yul\":3592:3594   */\n      0x20\n        /* \"#utility.yul\":3584:3590   */\n      dup3\n        /* \"#utility.yul\":3581:3595   */\n      lt\n        /* \"#utility.yul\":3561:3579   */\n      dup2\n        /* \"#utility.yul\":3558:3596   */\n      sub\n        /* \"#utility.yul\":3555:3773   */\n      tag_277\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3626:3627   */\n      0x00\n        /* \"#utility.yul\":3619:3707   */\n      mstore\n        /* \"#utility.yul\":3730:3734   */\n      0x22\n        /* \"#utility.yul\":3727:3728   */\n      0x04\n        /* \"#utility.yul\":3720:3735   */\n      mstore\n        /* \"#utility.yul\":3758:3762   */\n      0x24\n        /* \"#utility.yul\":3755:3756   */\n      0x00\n        /* \"#utility.yul\":3748:3763   */\n      revert\n        /* \"#utility.yul\":3555:3773   */\n    tag_277:\n      pop\n        /* \"#utility.yul\":3342:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4388:4667   */\n    tag_229:\n        /* \"#utility.yul\":4453:4462   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4474:4484   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4471:4661   */\n      iszero\n      tag_112\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":4514:4515   */\n      0x00\n        /* \"#utility.yul\":4507:4595   */\n      mstore\n        /* \"#utility.yul\":4618:4622   */\n      0x11\n        /* \"#utility.yul\":4615:4616   */\n      0x04\n        /* \"#utility.yul\":4608:4623   */\n      mstore\n        /* \"#utility.yul\":4646:4650   */\n      0x24\n        /* \"#utility.yul\":4643:4644   */\n      0x00\n        /* \"#utility.yul\":4636:4651   */\n      revert\n\n    auxdata: 0xa2646970667358221220c0f0149c2a2ed33dc2b7eaa036e83a3abd5dd936e9e8a170a83b252561a6d86f64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2064": {
									"entryPoint": null,
									"id": 2064,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_567": {
									"entryPoint": null,
									"id": 567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 301,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 480,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_update_837": {
									"entryPoint": 546,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 935,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1020,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1224,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5275:12",
										"nodeType": "YulBlock",
										"src": "0:5275:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:12",
													"nodeType": "YulBlock",
													"src": "46:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:12",
																		"nodeType": "YulLiteral",
																		"src": "63:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:12",
																				"nodeType": "YulLiteral",
																				"src": "70:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:12",
																				"nodeType": "YulLiteral",
																				"src": "75:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:12"
																		},
																		"nativeSrc": "66:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:12"
																},
																"nativeSrc": "56:31:12",
																"nodeType": "YulFunctionCall",
																"src": "56:31:12"
															},
															"nativeSrc": "56:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:12",
																		"nodeType": "YulLiteral",
																		"src": "103:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:12",
																		"nodeType": "YulLiteral",
																		"src": "106:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:12"
																},
																"nativeSrc": "96:15:12",
																"nodeType": "YulFunctionCall",
																"src": "96:15:12"
															},
															"nativeSrc": "96:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:12",
																		"nodeType": "YulLiteral",
																		"src": "127:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:12",
																		"nodeType": "YulLiteral",
																		"src": "130:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:12"
																},
																"nativeSrc": "120:15:12",
																"nodeType": "YulFunctionCall",
																"src": "120:15:12"
															},
															"nativeSrc": "120:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:12"
											},
											{
												"body": {
													"nativeSrc": "201:325:12",
													"nodeType": "YulBlock",
													"src": "201:325:12",
													"statements": [
														{
															"nativeSrc": "211:22:12",
															"nodeType": "YulAssignment",
															"src": "211:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "225:1:12",
																		"nodeType": "YulLiteral",
																		"src": "225:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "228:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "221:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:12"
																},
																"nativeSrc": "221:12:12",
																"nodeType": "YulFunctionCall",
																"src": "221:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "211:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:12"
																}
															]
														},
														{
															"nativeSrc": "242:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "272:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:12",
																		"nodeType": "YulLiteral",
																		"src": "278:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:12"
																},
																"nativeSrc": "268:12:12",
																"nodeType": "YulFunctionCall",
																"src": "268:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "246:18:12",
																	"nodeType": "YulTypedName",
																	"src": "246:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "319:31:12",
																"nodeType": "YulBlock",
																"src": "319:31:12",
																"statements": [
																	{
																		"nativeSrc": "321:27:12",
																		"nodeType": "YulAssignment",
																		"src": "321:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "335:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "343:4:12",
																					"nodeType": "YulLiteral",
																					"src": "343:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "331:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:12"
																			},
																			"nativeSrc": "331:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "321:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "299:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "292:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:12"
																},
																"nativeSrc": "292:26:12",
																"nodeType": "YulFunctionCall",
																"src": "292:26:12"
															},
															"nativeSrc": "289:61:12",
															"nodeType": "YulIf",
															"src": "289:61:12"
														},
														{
															"body": {
																"nativeSrc": "409:111:12",
																"nodeType": "YulBlock",
																"src": "409:111:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "430:1:12",
																					"nodeType": "YulLiteral",
																					"src": "430:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "437:3:12",
																							"nodeType": "YulLiteral",
																							"src": "437:3:12",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "442:10:12",
																							"nodeType": "YulLiteral",
																							"src": "442:10:12",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "433:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:12"
																					},
																					"nativeSrc": "433:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "423:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:12"
																			},
																			"nativeSrc": "423:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:12"
																		},
																		"nativeSrc": "423:31:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "474:1:12",
																					"nodeType": "YulLiteral",
																					"src": "474:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "477:4:12",
																					"nodeType": "YulLiteral",
																					"src": "477:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "467:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:12"
																			},
																			"nativeSrc": "467:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:12"
																		},
																		"nativeSrc": "467:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "502:1:12",
																					"nodeType": "YulLiteral",
																					"src": "502:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "505:4:12",
																					"nodeType": "YulLiteral",
																					"src": "505:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "495:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:12"
																			},
																			"nativeSrc": "495:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:12"
																		},
																		"nativeSrc": "495:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "365:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "388:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "396:2:12",
																				"nodeType": "YulLiteral",
																				"src": "396:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "385:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:12"
																		},
																		"nativeSrc": "385:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "362:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:12"
																},
																"nativeSrc": "362:38:12",
																"nodeType": "YulFunctionCall",
																"src": "362:38:12"
															},
															"nativeSrc": "359:161:12",
															"nodeType": "YulIf",
															"src": "359:161:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "146:380:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "181:4:12",
														"nodeType": "YulTypedName",
														"src": "181:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "190:6:12",
														"nodeType": "YulTypedName",
														"src": "190:6:12",
														"type": ""
													}
												],
												"src": "146:380:12"
											},
											{
												"body": {
													"nativeSrc": "587:65:12",
													"nodeType": "YulBlock",
													"src": "587:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "604:1:12",
																		"nodeType": "YulLiteral",
																		"src": "604:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "607:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "597:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:12"
																},
																"nativeSrc": "597:14:12",
																"nodeType": "YulFunctionCall",
																"src": "597:14:12"
															},
															"nativeSrc": "597:14:12",
															"nodeType": "YulExpressionStatement",
															"src": "597:14:12"
														},
														{
															"nativeSrc": "620:26:12",
															"nodeType": "YulAssignment",
															"src": "620:26:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "638:1:12",
																		"nodeType": "YulLiteral",
																		"src": "638:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "641:4:12",
																		"nodeType": "YulLiteral",
																		"src": "641:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "628:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:12"
																},
																"nativeSrc": "628:18:12",
																"nodeType": "YulFunctionCall",
																"src": "628:18:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "620:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "531:121:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "570:3:12",
														"nodeType": "YulTypedName",
														"src": "570:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "578:4:12",
														"nodeType": "YulTypedName",
														"src": "578:4:12",
														"type": ""
													}
												],
												"src": "531:121:12"
											},
											{
												"body": {
													"nativeSrc": "738:462:12",
													"nodeType": "YulBlock",
													"src": "738:462:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "771:423:12",
																"nodeType": "YulBlock",
																"src": "771:423:12",
																"statements": [
																	{
																		"nativeSrc": "785:11:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "795:1:12",
																			"nodeType": "YulLiteral",
																			"src": "795:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "789:2:12",
																				"nodeType": "YulTypedName",
																				"src": "789:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "816:1:12",
																					"nodeType": "YulLiteral",
																					"src": "816:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "819:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "819:5:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "809:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:12"
																			},
																			"nativeSrc": "809:16:12",
																			"nodeType": "YulFunctionCall",
																			"src": "809:16:12"
																		},
																		"nativeSrc": "809:16:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "809:16:12"
																	},
																	{
																		"nativeSrc": "838:30:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "838:30:12",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "860:1:12",
																					"nodeType": "YulLiteral",
																					"src": "860:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "863:4:12",
																					"nodeType": "YulLiteral",
																					"src": "863:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "850:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "850:9:12"
																			},
																			"nativeSrc": "850:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "850:18:12"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "842:4:12",
																				"nodeType": "YulTypedName",
																				"src": "842:4:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "881:57:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "881:57:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "904:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "904:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "914:1:12",
																							"nodeType": "YulLiteral",
																							"src": "914:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "921:10:12",
																									"nodeType": "YulIdentifier",
																									"src": "921:10:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "933:2:12",
																									"nodeType": "YulLiteral",
																									"src": "933:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "917:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "917:3:12"
																							},
																							"nativeSrc": "917:19:12",
																							"nodeType": "YulFunctionCall",
																							"src": "917:19:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "910:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "910:3:12"
																					},
																					"nativeSrc": "910:27:12",
																					"nodeType": "YulFunctionCall",
																					"src": "910:27:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "900:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "900:3:12"
																			},
																			"nativeSrc": "900:38:12",
																			"nodeType": "YulFunctionCall",
																			"src": "900:38:12"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "885:11:12",
																				"nodeType": "YulTypedName",
																				"src": "885:11:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "975:23:12",
																			"nodeType": "YulBlock",
																			"src": "975:23:12",
																			"statements": [
																				{
																					"nativeSrc": "977:19:12",
																					"nodeType": "YulAssignment",
																					"src": "977:19:12",
																					"value": {
																						"name": "data",
																						"nativeSrc": "992:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "992:4:12"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "977:11:12",
																							"nodeType": "YulIdentifier",
																							"src": "977:11:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "957:10:12",
																					"nodeType": "YulIdentifier",
																					"src": "957:10:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "969:4:12",
																					"nodeType": "YulLiteral",
																					"src": "969:4:12",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "954:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "954:2:12"
																			},
																			"nativeSrc": "954:20:12",
																			"nodeType": "YulFunctionCall",
																			"src": "954:20:12"
																		},
																		"nativeSrc": "951:47:12",
																		"nodeType": "YulIf",
																		"src": "951:47:12"
																	},
																	{
																		"nativeSrc": "1011:41:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1011:41:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1025:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "1025:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1035:1:12",
																							"nodeType": "YulLiteral",
																							"src": "1035:1:12",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1042:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1042:3:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1047:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1047:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1038:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1038:3:12"
																							},
																							"nativeSrc": "1038:12:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1038:12:12"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1031:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1031:3:12"
																					},
																					"nativeSrc": "1031:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1031:20:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1021:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1021:3:12"
																			},
																			"nativeSrc": "1021:31:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1021:31:12"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1015:2:12",
																				"nodeType": "YulTypedName",
																				"src": "1015:2:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1065:24:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1065:24:12",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1078:11:12",
																			"nodeType": "YulIdentifier",
																			"src": "1078:11:12"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1069:5:12",
																				"nodeType": "YulTypedName",
																				"src": "1069:5:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1163:21:12",
																			"nodeType": "YulBlock",
																			"src": "1163:21:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1172:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1172:5:12"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "1179:2:12",
																								"nodeType": "YulIdentifier",
																								"src": "1179:2:12"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1165:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1165:6:12"
																						},
																						"nativeSrc": "1165:17:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1165:17:12"
																					},
																					"nativeSrc": "1165:17:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "1165:17:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1113:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1113:5:12"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1120:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "1120:2:12"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1110:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "1110:2:12"
																			},
																			"nativeSrc": "1110:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1110:13:12"
																		},
																		"nativeSrc": "1102:82:12",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1124:26:12",
																			"nodeType": "YulBlock",
																			"src": "1124:26:12",
																			"statements": [
																				{
																					"nativeSrc": "1126:22:12",
																					"nodeType": "YulAssignment",
																					"src": "1126:22:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1139:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "1139:5:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1146:1:12",
																								"nodeType": "YulLiteral",
																								"src": "1146:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1135:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1135:3:12"
																						},
																						"nativeSrc": "1135:13:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1135:13:12"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1126:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "1126:5:12"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1106:3:12",
																			"nodeType": "YulBlock",
																			"src": "1106:3:12",
																			"statements": []
																		},
																		"src": "1102:82:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "754:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "759:2:12",
																		"nodeType": "YulLiteral",
																		"src": "759:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "751:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:12"
																},
																"nativeSrc": "751:11:12",
																"nodeType": "YulFunctionCall",
																"src": "751:11:12"
															},
															"nativeSrc": "748:446:12",
															"nodeType": "YulIf",
															"src": "748:446:12"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "657:543:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "710:5:12",
														"nodeType": "YulTypedName",
														"src": "710:5:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "717:3:12",
														"nodeType": "YulTypedName",
														"src": "717:3:12",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "722:10:12",
														"nodeType": "YulTypedName",
														"src": "722:10:12",
														"type": ""
													}
												],
												"src": "657:543:12"
											},
											{
												"body": {
													"nativeSrc": "1290:81:12",
													"nodeType": "YulBlock",
													"src": "1290:81:12",
													"statements": [
														{
															"nativeSrc": "1300:65:12",
															"nodeType": "YulAssignment",
															"src": "1300:65:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1315:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "1315:4:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1333:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1333:1:12",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1336:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "1336:3:12"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1329:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1329:3:12"
																								},
																								"nativeSrc": "1329:11:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1329:11:12"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1346:1:12",
																										"nodeType": "YulLiteral",
																										"src": "1346:1:12",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1342:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1342:3:12"
																								},
																								"nativeSrc": "1342:6:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1342:6:12"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1325:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1325:3:12"
																						},
																						"nativeSrc": "1325:24:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1325:24:12"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1321:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1321:3:12"
																				},
																				"nativeSrc": "1321:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1321:29:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:12"
																		},
																		"nativeSrc": "1311:40:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:40:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1357:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1357:1:12",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1360:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "1360:3:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1353:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:12"
																		},
																		"nativeSrc": "1353:11:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1353:11:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1308:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1308:2:12"
																},
																"nativeSrc": "1308:57:12",
																"nodeType": "YulFunctionCall",
																"src": "1308:57:12"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1300:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1300:4:12"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1205:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1267:4:12",
														"nodeType": "YulTypedName",
														"src": "1267:4:12",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1273:3:12",
														"nodeType": "YulTypedName",
														"src": "1273:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1281:4:12",
														"nodeType": "YulTypedName",
														"src": "1281:4:12",
														"type": ""
													}
												],
												"src": "1205:166:12"
											},
											{
												"body": {
													"nativeSrc": "1472:1249:12",
													"nodeType": "YulBlock",
													"src": "1472:1249:12",
													"statements": [
														{
															"nativeSrc": "1482:24:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1482:24:12",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1502:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1502:3:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1496:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1496:5:12"
																},
																"nativeSrc": "1496:10:12",
																"nodeType": "YulFunctionCall",
																"src": "1496:10:12"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1486:6:12",
																	"nodeType": "YulTypedName",
																	"src": "1486:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1549:22:12",
																"nodeType": "YulBlock",
																"src": "1549:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1551:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "1551:16:12"
																			},
																			"nativeSrc": "1551:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1551:18:12"
																		},
																		"nativeSrc": "1551:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1551:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1521:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1521:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1537:2:12",
																						"nodeType": "YulLiteral",
																						"src": "1537:2:12",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1541:1:12",
																						"nodeType": "YulLiteral",
																						"src": "1541:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1533:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1533:3:12"
																				},
																				"nativeSrc": "1533:10:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1533:10:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1545:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1545:1:12",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1529:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1529:3:12"
																		},
																		"nativeSrc": "1529:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1529:18:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1518:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1518:2:12"
																},
																"nativeSrc": "1518:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1518:30:12"
															},
															"nativeSrc": "1515:56:12",
															"nodeType": "YulIf",
															"src": "1515:56:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1624:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "1624:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1662:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "1662:4:12"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1656:5:12",
																					"nodeType": "YulIdentifier",
																					"src": "1656:5:12"
																				},
																				"nativeSrc": "1656:11:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1656:11:12"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1630:25:12",
																			"nodeType": "YulIdentifier",
																			"src": "1630:25:12"
																		},
																		"nativeSrc": "1630:38:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1630:38:12"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1670:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:12"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1580:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1580:43:12"
																},
																"nativeSrc": "1580:97:12",
																"nodeType": "YulFunctionCall",
																"src": "1580:97:12"
															},
															"nativeSrc": "1580:97:12",
															"nodeType": "YulExpressionStatement",
															"src": "1580:97:12"
														},
														{
															"nativeSrc": "1686:18:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1686:18:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1703:1:12",
																"nodeType": "YulLiteral",
																"src": "1703:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1690:9:12",
																	"nodeType": "YulTypedName",
																	"src": "1690:9:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1713:23:12",
															"nodeType": "YulVariableDeclaration",
															"src": "1713:23:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1732:4:12",
																"nodeType": "YulLiteral",
																"src": "1732:4:12",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1717:11:12",
																	"nodeType": "YulTypedName",
																	"src": "1717:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1745:17:12",
															"nodeType": "YulAssignment",
															"src": "1745:17:12",
															"value": {
																"kind": "number",
																"nativeSrc": "1758:4:12",
																"nodeType": "YulLiteral",
																"src": "1758:4:12",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1745:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "1745:9:12"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1808:656:12",
																		"nodeType": "YulBlock",
																		"src": "1808:656:12",
																		"statements": [
																			{
																				"nativeSrc": "1822:35:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1822:35:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "1841:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "1841:6:12"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "1853:2:12",
																									"nodeType": "YulLiteral",
																									"src": "1853:2:12",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "1849:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "1849:3:12"
																							},
																							"nativeSrc": "1849:7:12",
																							"nodeType": "YulFunctionCall",
																							"src": "1849:7:12"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "1837:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "1837:3:12"
																					},
																					"nativeSrc": "1837:20:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1837:20:12"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "1826:7:12",
																						"nodeType": "YulTypedName",
																						"src": "1826:7:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1870:49:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1870:49:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "1914:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "1914:4:12"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "1884:29:12",
																						"nodeType": "YulIdentifier",
																						"src": "1884:29:12"
																					},
																					"nativeSrc": "1884:35:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1884:35:12"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "1874:6:12",
																						"nodeType": "YulTypedName",
																						"src": "1874:6:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "1932:10:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "1932:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "1941:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "1936:1:12",
																						"nodeType": "YulTypedName",
																						"src": "1936:1:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2019:172:12",
																					"nodeType": "YulBlock",
																					"src": "2019:172:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2044:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2044:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2062:3:12",
																														"nodeType": "YulIdentifier",
																														"src": "2062:3:12"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2067:9:12",
																														"nodeType": "YulIdentifier",
																														"src": "2067:9:12"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2058:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2058:3:12"
																												},
																												"nativeSrc": "2058:19:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2058:19:12"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2052:5:12",
																											"nodeType": "YulIdentifier",
																											"src": "2052:5:12"
																										},
																										"nativeSrc": "2052:26:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2052:26:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2037:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2037:6:12"
																								},
																								"nativeSrc": "2037:42:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2037:42:12"
																							},
																							"nativeSrc": "2037:42:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2037:42:12"
																						},
																						{
																							"nativeSrc": "2096:24:12",
																							"nodeType": "YulAssignment",
																							"src": "2096:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2110:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2110:6:12"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2118:1:12",
																										"nodeType": "YulLiteral",
																										"src": "2118:1:12",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2106:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2106:3:12"
																								},
																								"nativeSrc": "2106:14:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2106:14:12"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2096:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2096:6:12"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2137:40:12",
																							"nodeType": "YulAssignment",
																							"src": "2137:40:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2154:9:12",
																										"nodeType": "YulIdentifier",
																										"src": "2154:9:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2165:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "2165:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2150:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "2150:3:12"
																								},
																								"nativeSrc": "2150:27:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2150:27:12"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2137:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "2137:9:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "1966:1:12",
																							"nodeType": "YulIdentifier",
																							"src": "1966:1:12"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "1969:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "1969:7:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "1963:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "1963:2:12"
																					},
																					"nativeSrc": "1963:14:12",
																					"nodeType": "YulFunctionCall",
																					"src": "1963:14:12"
																				},
																				"nativeSrc": "1955:236:12",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "1978:28:12",
																					"nodeType": "YulBlock",
																					"src": "1978:28:12",
																					"statements": [
																						{
																							"nativeSrc": "1980:24:12",
																							"nodeType": "YulAssignment",
																							"src": "1980:24:12",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "1989:1:12",
																										"nodeType": "YulIdentifier",
																										"src": "1989:1:12"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "1992:11:12",
																										"nodeType": "YulIdentifier",
																										"src": "1992:11:12"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "1985:3:12",
																									"nodeType": "YulIdentifier",
																									"src": "1985:3:12"
																								},
																								"nativeSrc": "1985:19:12",
																								"nodeType": "YulFunctionCall",
																								"src": "1985:19:12"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "1980:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "1980:1:12"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "1959:3:12",
																					"nodeType": "YulBlock",
																					"src": "1959:3:12",
																					"statements": []
																				},
																				"src": "1955:236:12"
																			},
																			{
																				"body": {
																					"nativeSrc": "2239:166:12",
																					"nodeType": "YulBlock",
																					"src": "2239:166:12",
																					"statements": [
																						{
																							"nativeSrc": "2257:43:12",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2257:43:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2284:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2284:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2289:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2289:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2280:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2280:3:12"
																										},
																										"nativeSrc": "2280:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2280:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2274:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2274:5:12"
																								},
																								"nativeSrc": "2274:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2274:26:12"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2261:9:12",
																									"nodeType": "YulTypedName",
																									"src": "2261:9:12",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2324:6:12",
																										"nodeType": "YulIdentifier",
																										"src": "2324:6:12"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2336:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2336:9:12"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2363:1:12",
																																				"nodeType": "YulLiteral",
																																				"src": "2363:1:12",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2366:6:12",
																																				"nodeType": "YulIdentifier",
																																				"src": "2366:6:12"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2359:3:12",
																																			"nodeType": "YulIdentifier",
																																			"src": "2359:3:12"
																																		},
																																		"nativeSrc": "2359:14:12",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2359:14:12"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2375:3:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2375:3:12",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2355:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2355:3:12"
																																},
																																"nativeSrc": "2355:24:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2355:24:12"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2385:1:12",
																																		"nodeType": "YulLiteral",
																																		"src": "2385:1:12",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2381:3:12",
																																	"nodeType": "YulIdentifier",
																																	"src": "2381:3:12"
																																},
																																"nativeSrc": "2381:6:12",
																																"nodeType": "YulFunctionCall",
																																"src": "2381:6:12"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2351:3:12",
																															"nodeType": "YulIdentifier",
																															"src": "2351:3:12"
																														},
																														"nativeSrc": "2351:37:12",
																														"nodeType": "YulFunctionCall",
																														"src": "2351:37:12"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2347:3:12",
																													"nodeType": "YulIdentifier",
																													"src": "2347:3:12"
																												},
																												"nativeSrc": "2347:42:12",
																												"nodeType": "YulFunctionCall",
																												"src": "2347:42:12"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2332:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2332:3:12"
																										},
																										"nativeSrc": "2332:58:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2332:58:12"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2317:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2317:6:12"
																								},
																								"nativeSrc": "2317:74:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2317:74:12"
																							},
																							"nativeSrc": "2317:74:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "2317:74:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2210:7:12",
																							"nodeType": "YulIdentifier",
																							"src": "2210:7:12"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2219:6:12",
																							"nodeType": "YulIdentifier",
																							"src": "2219:6:12"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2207:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "2207:2:12"
																					},
																					"nativeSrc": "2207:19:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2207:19:12"
																				},
																				"nativeSrc": "2204:201:12",
																				"nodeType": "YulIf",
																				"src": "2204:201:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2425:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2425:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2439:1:12",
																											"nodeType": "YulLiteral",
																											"src": "2439:1:12",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2442:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "2442:6:12"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2435:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "2435:3:12"
																									},
																									"nativeSrc": "2435:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "2435:14:12"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2451:1:12",
																									"nodeType": "YulLiteral",
																									"src": "2451:1:12",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2431:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "2431:3:12"
																							},
																							"nativeSrc": "2431:22:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2431:22:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2418:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2418:6:12"
																					},
																					"nativeSrc": "2418:36:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2418:36:12"
																				},
																				"nativeSrc": "2418:36:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2418:36:12"
																			}
																		]
																	},
																	"nativeSrc": "1801:663:12",
																	"nodeType": "YulCase",
																	"src": "1801:663:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1806:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1806:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2481:234:12",
																		"nodeType": "YulBlock",
																		"src": "2481:234:12",
																		"statements": [
																			{
																				"nativeSrc": "2495:14:12",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2495:14:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2508:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2508:1:12",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2499:5:12",
																						"nodeType": "YulTypedName",
																						"src": "2499:5:12",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2544:67:12",
																					"nodeType": "YulBlock",
																					"src": "2544:67:12",
																					"statements": [
																						{
																							"nativeSrc": "2562:35:12",
																							"nodeType": "YulAssignment",
																							"src": "2562:35:12",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2581:3:12",
																												"nodeType": "YulIdentifier",
																												"src": "2581:3:12"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2586:9:12",
																												"nodeType": "YulIdentifier",
																												"src": "2586:9:12"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2577:3:12",
																											"nodeType": "YulIdentifier",
																											"src": "2577:3:12"
																										},
																										"nativeSrc": "2577:19:12",
																										"nodeType": "YulFunctionCall",
																										"src": "2577:19:12"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2571:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:12"
																								},
																								"nativeSrc": "2571:26:12",
																								"nodeType": "YulFunctionCall",
																								"src": "2571:26:12"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2562:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2562:5:12"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2525:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "2525:6:12"
																				},
																				"nativeSrc": "2522:89:12",
																				"nodeType": "YulIf",
																				"src": "2522:89:12"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2631:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "2631:4:12"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2690:5:12",
																									"nodeType": "YulIdentifier",
																									"src": "2690:5:12"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2697:6:12",
																									"nodeType": "YulIdentifier",
																									"src": "2697:6:12"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2637:52:12",
																								"nodeType": "YulIdentifier",
																								"src": "2637:52:12"
																							},
																							"nativeSrc": "2637:67:12",
																							"nodeType": "YulFunctionCall",
																							"src": "2637:67:12"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2624:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2624:6:12"
																					},
																					"nativeSrc": "2624:81:12",
																					"nodeType": "YulFunctionCall",
																					"src": "2624:81:12"
																				},
																				"nativeSrc": "2624:81:12",
																				"nodeType": "YulExpressionStatement",
																				"src": "2624:81:12"
																			}
																		]
																	},
																	"nativeSrc": "2473:242:12",
																	"nodeType": "YulCase",
																	"src": "2473:242:12",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1781:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1781:6:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1789:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1778:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "1778:2:12"
																},
																"nativeSrc": "1778:14:12",
																"nodeType": "YulFunctionCall",
																"src": "1778:14:12"
															},
															"nativeSrc": "1771:944:12",
															"nodeType": "YulSwitch",
															"src": "1771:944:12"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1376:1345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1457:4:12",
														"nodeType": "YulTypedName",
														"src": "1457:4:12",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1463:3:12",
														"nodeType": "YulTypedName",
														"src": "1463:3:12",
														"type": ""
													}
												],
												"src": "1376:1345:12"
											},
											{
												"body": {
													"nativeSrc": "2758:95:12",
													"nodeType": "YulBlock",
													"src": "2758:95:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2775:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2775:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2782:3:12",
																				"nodeType": "YulLiteral",
																				"src": "2782:3:12",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2787:10:12",
																				"nodeType": "YulLiteral",
																				"src": "2787:10:12",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2778:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2778:3:12"
																		},
																		"nativeSrc": "2778:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2778:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2768:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2768:6:12"
																},
																"nativeSrc": "2768:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2768:31:12"
															},
															"nativeSrc": "2768:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2768:31:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2815:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2815:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2818:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2818:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2808:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2808:6:12"
																},
																"nativeSrc": "2808:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2808:15:12"
															},
															"nativeSrc": "2808:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2808:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2839:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2839:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2842:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2842:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2832:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2832:6:12"
																},
																"nativeSrc": "2832:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2832:15:12"
															},
															"nativeSrc": "2832:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2832:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2726:127:12",
												"nodeType": "YulFunctionDefinition",
												"src": "2726:127:12"
											},
											{
												"body": {
													"nativeSrc": "2922:352:12",
													"nodeType": "YulBlock",
													"src": "2922:352:12",
													"statements": [
														{
															"nativeSrc": "2932:16:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2932:16:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2947:1:12",
																"nodeType": "YulLiteral",
																"src": "2947:1:12",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "2936:7:12",
																	"nodeType": "YulTypedName",
																	"src": "2936:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2957:10:12",
															"nodeType": "YulAssignment",
															"src": "2957:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "2966:1:12",
																"nodeType": "YulLiteral",
																"src": "2966:1:12",
																"type": "",
																"value": "1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "2957:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2957:5:12"
																}
															]
														},
														{
															"nativeSrc": "2976:13:12",
															"nodeType": "YulAssignment",
															"src": "2976:13:12",
															"value": {
																"name": "_base",
																"nativeSrc": "2984:5:12",
																"nodeType": "YulIdentifier",
																"src": "2984:5:12"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "2976:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2976:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3040:228:12",
																"nodeType": "YulBlock",
																"src": "3040:228:12",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "3085:22:12",
																			"nodeType": "YulBlock",
																			"src": "3085:22:12",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "3087:16:12",
																							"nodeType": "YulIdentifier",
																							"src": "3087:16:12"
																						},
																						"nativeSrc": "3087:18:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3087:18:12"
																					},
																					"nativeSrc": "3087:18:12",
																					"nodeType": "YulExpressionStatement",
																					"src": "3087:18:12"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3060:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3060:4:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3074:1:12",
																									"nodeType": "YulLiteral",
																									"src": "3074:1:12",
																									"type": "",
																									"value": "0"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3070:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "3070:3:12"
																							},
																							"nativeSrc": "3070:6:12",
																							"nodeType": "YulFunctionCall",
																							"src": "3070:6:12"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "3078:4:12",
																							"nodeType": "YulIdentifier",
																							"src": "3078:4:12"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "3066:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3066:3:12"
																					},
																					"nativeSrc": "3066:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3066:17:12"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "3057:2:12",
																				"nodeType": "YulIdentifier",
																				"src": "3057:2:12"
																			},
																			"nativeSrc": "3057:27:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3057:27:12"
																		},
																		"nativeSrc": "3054:53:12",
																		"nodeType": "YulIf",
																		"src": "3054:53:12"
																	},
																	{
																		"body": {
																			"nativeSrc": "3146:29:12",
																			"nodeType": "YulBlock",
																			"src": "3146:29:12",
																			"statements": [
																				{
																					"nativeSrc": "3148:25:12",
																					"nodeType": "YulAssignment",
																					"src": "3148:25:12",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "3161:5:12",
																								"nodeType": "YulIdentifier",
																								"src": "3161:5:12"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "3168:4:12",
																								"nodeType": "YulIdentifier",
																								"src": "3168:4:12"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "3157:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "3157:3:12"
																						},
																						"nativeSrc": "3157:16:12",
																						"nodeType": "YulFunctionCall",
																						"src": "3157:16:12"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "3148:5:12",
																							"nodeType": "YulIdentifier",
																							"src": "3148:5:12"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "3127:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3127:8:12"
																				},
																				{
																					"name": "power_1",
																					"nativeSrc": "3137:7:12",
																					"nodeType": "YulIdentifier",
																					"src": "3137:7:12"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3123:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3123:3:12"
																			},
																			"nativeSrc": "3123:22:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3123:22:12"
																		},
																		"nativeSrc": "3120:55:12",
																		"nodeType": "YulIf",
																		"src": "3120:55:12"
																	},
																	{
																		"nativeSrc": "3188:23:12",
																		"nodeType": "YulAssignment",
																		"src": "3188:23:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3200:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3200:4:12"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "3206:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3206:4:12"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "3196:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3196:3:12"
																			},
																			"nativeSrc": "3196:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3196:15:12"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "3188:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3188:4:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3224:34:12",
																		"nodeType": "YulAssignment",
																		"src": "3224:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "power_1",
																					"nativeSrc": "3240:7:12",
																					"nodeType": "YulIdentifier",
																					"src": "3240:7:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3249:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3249:8:12"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nativeSrc": "3236:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3236:3:12"
																			},
																			"nativeSrc": "3236:22:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3236:22:12"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "3224:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "3224:8:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3009:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3009:8:12"
																	},
																	{
																		"name": "power_1",
																		"nativeSrc": "3019:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3019:7:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3006:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3006:2:12"
																},
																"nativeSrc": "3006:21:12",
																"nodeType": "YulFunctionCall",
																"src": "3006:21:12"
															},
															"nativeSrc": "2998:270:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3028:3:12",
																"nodeType": "YulBlock",
																"src": "3028:3:12",
																"statements": []
															},
															"pre": {
																"nativeSrc": "3002:3:12",
																"nodeType": "YulBlock",
																"src": "3002:3:12",
																"statements": []
															},
															"src": "2998:270:12"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "2858:416:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_base",
														"nativeSrc": "2886:5:12",
														"nodeType": "YulTypedName",
														"src": "2886:5:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "2893:8:12",
														"nodeType": "YulTypedName",
														"src": "2893:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "2906:5:12",
														"nodeType": "YulTypedName",
														"src": "2906:5:12",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "2913:4:12",
														"nodeType": "YulTypedName",
														"src": "2913:4:12",
														"type": ""
													}
												],
												"src": "2858:416:12"
											},
											{
												"body": {
													"nativeSrc": "3338:747:12",
													"nodeType": "YulBlock",
													"src": "3338:747:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3376:52:12",
																"nodeType": "YulBlock",
																"src": "3376:52:12",
																"statements": [
																	{
																		"nativeSrc": "3390:10:12",
																		"nodeType": "YulAssignment",
																		"src": "3390:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3399:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3399:1:12",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3390:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3390:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3413:5:12",
																		"nodeType": "YulLeave",
																		"src": "3413:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "3358:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3358:8:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3351:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3351:6:12"
																},
																"nativeSrc": "3351:16:12",
																"nodeType": "YulFunctionCall",
																"src": "3351:16:12"
															},
															"nativeSrc": "3348:80:12",
															"nodeType": "YulIf",
															"src": "3348:80:12"
														},
														{
															"body": {
																"nativeSrc": "3461:52:12",
																"nodeType": "YulBlock",
																"src": "3461:52:12",
																"statements": [
																	{
																		"nativeSrc": "3475:10:12",
																		"nodeType": "YulAssignment",
																		"src": "3475:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3484:1:12",
																			"nodeType": "YulLiteral",
																			"src": "3484:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3475:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3475:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3498:5:12",
																		"nodeType": "YulLeave",
																		"src": "3498:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3447:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3447:4:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3440:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:12"
																},
																"nativeSrc": "3440:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3440:12:12"
															},
															"nativeSrc": "3437:76:12",
															"nodeType": "YulIf",
															"src": "3437:76:12"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3549:52:12",
																		"nodeType": "YulBlock",
																		"src": "3549:52:12",
																		"statements": [
																			{
																				"nativeSrc": "3563:10:12",
																				"nodeType": "YulAssignment",
																				"src": "3563:10:12",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3572:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3572:1:12",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3563:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3563:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3586:5:12",
																				"nodeType": "YulLeave",
																				"src": "3586:5:12"
																			}
																		]
																	},
																	"nativeSrc": "3542:59:12",
																	"nodeType": "YulCase",
																	"src": "3542:59:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3547:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3547:1:12",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3617:123:12",
																		"nodeType": "YulBlock",
																		"src": "3617:123:12",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "3652:22:12",
																					"nodeType": "YulBlock",
																					"src": "3652:22:12",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "3654:16:12",
																									"nodeType": "YulIdentifier",
																									"src": "3654:16:12"
																								},
																								"nativeSrc": "3654:18:12",
																								"nodeType": "YulFunctionCall",
																								"src": "3654:18:12"
																							},
																							"nativeSrc": "3654:18:12",
																							"nodeType": "YulExpressionStatement",
																							"src": "3654:18:12"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3637:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3637:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3647:3:12",
																							"nodeType": "YulLiteral",
																							"src": "3647:3:12",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "3634:2:12",
																						"nodeType": "YulIdentifier",
																						"src": "3634:2:12"
																					},
																					"nativeSrc": "3634:17:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3634:17:12"
																				},
																				"nativeSrc": "3631:43:12",
																				"nodeType": "YulIf",
																				"src": "3631:43:12"
																			},
																			{
																				"nativeSrc": "3687:25:12",
																				"nodeType": "YulAssignment",
																				"src": "3687:25:12",
																				"value": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "3700:8:12",
																							"nodeType": "YulIdentifier",
																							"src": "3700:8:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3710:1:12",
																							"nodeType": "YulLiteral",
																							"src": "3710:1:12",
																							"type": "",
																							"value": "1"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3696:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3696:3:12"
																					},
																					"nativeSrc": "3696:16:12",
																					"nodeType": "YulFunctionCall",
																					"src": "3696:16:12"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "3687:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3687:5:12"
																					}
																				]
																			},
																			{
																				"nativeSrc": "3725:5:12",
																				"nodeType": "YulLeave",
																				"src": "3725:5:12"
																			}
																		]
																	},
																	"nativeSrc": "3610:130:12",
																	"nodeType": "YulCase",
																	"src": "3610:130:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3615:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3615:1:12",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "3529:4:12",
																"nodeType": "YulIdentifier",
																"src": "3529:4:12"
															},
															"nativeSrc": "3522:218:12",
															"nodeType": "YulSwitch",
															"src": "3522:218:12"
														},
														{
															"body": {
																"nativeSrc": "3838:70:12",
																"nodeType": "YulBlock",
																"src": "3838:70:12",
																"statements": [
																	{
																		"nativeSrc": "3852:28:12",
																		"nodeType": "YulAssignment",
																		"src": "3852:28:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "3865:4:12",
																					"nodeType": "YulIdentifier",
																					"src": "3865:4:12"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "3871:8:12",
																					"nodeType": "YulIdentifier",
																					"src": "3871:8:12"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "3861:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3861:3:12"
																			},
																			"nativeSrc": "3861:19:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3861:19:12"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "3852:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3852:5:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3893:5:12",
																		"nodeType": "YulLeave",
																		"src": "3893:5:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3762:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3762:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3768:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3768:2:12",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3759:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3759:2:12"
																				},
																				"nativeSrc": "3759:12:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3759:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3776:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3776:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3786:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3786:2:12",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3773:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3773:2:12"
																				},
																				"nativeSrc": "3773:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3773:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3755:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3755:3:12"
																		},
																		"nativeSrc": "3755:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3755:35:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "3799:4:12",
																						"nodeType": "YulIdentifier",
																						"src": "3799:4:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3805:3:12",
																						"nodeType": "YulLiteral",
																						"src": "3805:3:12",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3796:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3796:2:12"
																				},
																				"nativeSrc": "3796:13:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3796:13:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "3814:8:12",
																						"nodeType": "YulIdentifier",
																						"src": "3814:8:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3824:2:12",
																						"nodeType": "YulLiteral",
																						"src": "3824:2:12",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "3811:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "3811:2:12"
																				},
																				"nativeSrc": "3811:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3811:16:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3792:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3792:3:12"
																		},
																		"nativeSrc": "3792:36:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3792:36:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3752:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3752:2:12"
																},
																"nativeSrc": "3752:77:12",
																"nodeType": "YulFunctionCall",
																"src": "3752:77:12"
															},
															"nativeSrc": "3749:159:12",
															"nodeType": "YulIf",
															"src": "3749:159:12"
														},
														{
															"nativeSrc": "3917:57:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3917:57:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "3959:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3959:4:12"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "3965:8:12",
																		"nodeType": "YulIdentifier",
																		"src": "3965:8:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "3940:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3940:18:12"
																},
																"nativeSrc": "3940:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3940:34:12"
															},
															"variables": [
																{
																	"name": "power_1",
																	"nativeSrc": "3921:7:12",
																	"nodeType": "YulTypedName",
																	"src": "3921:7:12",
																	"type": ""
																},
																{
																	"name": "base_1",
																	"nativeSrc": "3930:6:12",
																	"nodeType": "YulTypedName",
																	"src": "3930:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4019:22:12",
																"nodeType": "YulBlock",
																"src": "4019:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4021:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4021:16:12"
																			},
																			"nativeSrc": "4021:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4021:18:12"
																		},
																		"nativeSrc": "4021:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4021:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "3989:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "3989:7:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4006:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4006:1:12",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4002:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4002:3:12"
																				},
																				"nativeSrc": "4002:6:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4002:6:12"
																			},
																			{
																				"name": "base_1",
																				"nativeSrc": "4010:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:12"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "3998:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3998:3:12"
																		},
																		"nativeSrc": "3998:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3998:19:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3986:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3986:2:12"
																},
																"nativeSrc": "3986:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3986:32:12"
															},
															"nativeSrc": "3983:58:12",
															"nodeType": "YulIf",
															"src": "3983:58:12"
														},
														{
															"nativeSrc": "4050:29:12",
															"nodeType": "YulAssignment",
															"src": "4050:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "power_1",
																		"nativeSrc": "4063:7:12",
																		"nodeType": "YulIdentifier",
																		"src": "4063:7:12"
																	},
																	{
																		"name": "base_1",
																		"nativeSrc": "4072:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4072:6:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4059:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4059:3:12"
																},
																"nativeSrc": "4059:20:12",
																"nodeType": "YulFunctionCall",
																"src": "4059:20:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4050:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4050:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "3279:806:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "3309:4:12",
														"nodeType": "YulTypedName",
														"src": "3309:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "3315:8:12",
														"nodeType": "YulTypedName",
														"src": "3315:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "3328:5:12",
														"nodeType": "YulTypedName",
														"src": "3328:5:12",
														"type": ""
													}
												],
												"src": "3279:806:12"
											},
											{
												"body": {
													"nativeSrc": "4158:72:12",
													"nodeType": "YulBlock",
													"src": "4158:72:12",
													"statements": [
														{
															"nativeSrc": "4168:56:12",
															"nodeType": "YulAssignment",
															"src": "4168:56:12",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "4198:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "4198:4:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "exponent",
																				"nativeSrc": "4208:8:12",
																				"nodeType": "YulIdentifier",
																				"src": "4208:8:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4218:4:12",
																				"nodeType": "YulLiteral",
																				"src": "4218:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4204:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4204:3:12"
																		},
																		"nativeSrc": "4204:19:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4204:19:12"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "4177:20:12",
																	"nodeType": "YulIdentifier",
																	"src": "4177:20:12"
																},
																"nativeSrc": "4177:47:12",
																"nodeType": "YulFunctionCall",
																"src": "4177:47:12"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "4168:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "4168:5:12"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "4090:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "4129:4:12",
														"nodeType": "YulTypedName",
														"src": "4129:4:12",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "4135:8:12",
														"nodeType": "YulTypedName",
														"src": "4135:8:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "4148:5:12",
														"nodeType": "YulTypedName",
														"src": "4148:5:12",
														"type": ""
													}
												],
												"src": "4090:140:12"
											},
											{
												"body": {
													"nativeSrc": "4287:116:12",
													"nodeType": "YulBlock",
													"src": "4287:116:12",
													"statements": [
														{
															"nativeSrc": "4297:20:12",
															"nodeType": "YulAssignment",
															"src": "4297:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4312:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4312:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4315:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4315:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4308:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4308:3:12"
																},
																"nativeSrc": "4308:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4308:9:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "4297:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4297:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4375:22:12",
																"nodeType": "YulBlock",
																"src": "4375:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4377:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4377:16:12"
																			},
																			"nativeSrc": "4377:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4377:18:12"
																		},
																		"nativeSrc": "4377:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4377:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "4346:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "4346:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4339:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "4339:6:12"
																				},
																				"nativeSrc": "4339:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4339:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "4353:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "4353:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "4360:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "4360:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "4369:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "4369:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "4356:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4356:3:12"
																						},
																						"nativeSrc": "4356:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4356:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "4350:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "4350:2:12"
																				},
																				"nativeSrc": "4350:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4350:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "4336:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "4336:2:12"
																		},
																		"nativeSrc": "4336:37:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4336:37:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4329:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4329:6:12"
																},
																"nativeSrc": "4329:45:12",
																"nodeType": "YulFunctionCall",
																"src": "4329:45:12"
															},
															"nativeSrc": "4326:71:12",
															"nodeType": "YulIf",
															"src": "4326:71:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "4235:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4266:1:12",
														"nodeType": "YulTypedName",
														"src": "4266:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4269:1:12",
														"nodeType": "YulTypedName",
														"src": "4269:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "4275:7:12",
														"nodeType": "YulTypedName",
														"src": "4275:7:12",
														"type": ""
													}
												],
												"src": "4235:168:12"
											},
											{
												"body": {
													"nativeSrc": "4509:102:12",
													"nodeType": "YulBlock",
													"src": "4509:102:12",
													"statements": [
														{
															"nativeSrc": "4519:26:12",
															"nodeType": "YulAssignment",
															"src": "4519:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4531:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4531:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4542:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4542:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4527:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4527:3:12"
																},
																"nativeSrc": "4527:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4527:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4519:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4519:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4561:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4561:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4576:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4576:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4592:3:12",
																								"nodeType": "YulLiteral",
																								"src": "4592:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4597:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4597:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4588:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4588:3:12"
																						},
																						"nativeSrc": "4588:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4588:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4601:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4601:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4584:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4584:3:12"
																				},
																				"nativeSrc": "4584:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4584:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4572:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4572:3:12"
																		},
																		"nativeSrc": "4572:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4572:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4554:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4554:6:12"
																},
																"nativeSrc": "4554:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4554:51:12"
															},
															"nativeSrc": "4554:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4554:51:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4408:203:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4478:9:12",
														"nodeType": "YulTypedName",
														"src": "4478:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4489:6:12",
														"nodeType": "YulTypedName",
														"src": "4489:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4500:4:12",
														"nodeType": "YulTypedName",
														"src": "4500:4:12",
														"type": ""
													}
												],
												"src": "4408:203:12"
											},
											{
												"body": {
													"nativeSrc": "4664:77:12",
													"nodeType": "YulBlock",
													"src": "4664:77:12",
													"statements": [
														{
															"nativeSrc": "4674:16:12",
															"nodeType": "YulAssignment",
															"src": "4674:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4685:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4685:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4688:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4688:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:12"
																},
																"nativeSrc": "4681:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4681:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4713:22:12",
																"nodeType": "YulBlock",
																"src": "4713:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "4715:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "4715:16:12"
																			},
																			"nativeSrc": "4715:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4715:18:12"
																		},
																		"nativeSrc": "4715:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4715:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4705:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4705:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4708:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4708:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4702:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4702:2:12"
																},
																"nativeSrc": "4702:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4702:10:12"
															},
															"nativeSrc": "4699:36:12",
															"nodeType": "YulIf",
															"src": "4699:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4616:125:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4647:1:12",
														"nodeType": "YulTypedName",
														"src": "4647:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4650:1:12",
														"nodeType": "YulTypedName",
														"src": "4650:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4656:3:12",
														"nodeType": "YulTypedName",
														"src": "4656:3:12",
														"type": ""
													}
												],
												"src": "4616:125:12"
											},
											{
												"body": {
													"nativeSrc": "4903:188:12",
													"nodeType": "YulBlock",
													"src": "4903:188:12",
													"statements": [
														{
															"nativeSrc": "4913:26:12",
															"nodeType": "YulAssignment",
															"src": "4913:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4925:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4925:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4936:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4936:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4921:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4921:3:12"
																},
																"nativeSrc": "4921:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4921:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4913:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4913:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4955:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4955:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4970:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4970:6:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4986:3:12",
																								"nodeType": "YulLiteral",
																								"src": "4986:3:12",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4991:1:12",
																								"nodeType": "YulLiteral",
																								"src": "4991:1:12",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4982:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "4982:3:12"
																						},
																						"nativeSrc": "4982:11:12",
																						"nodeType": "YulFunctionCall",
																						"src": "4982:11:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4995:1:12",
																						"nodeType": "YulLiteral",
																						"src": "4995:1:12",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4978:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4978:3:12"
																				},
																				"nativeSrc": "4978:19:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4978:19:12"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4966:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4966:3:12"
																		},
																		"nativeSrc": "4966:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4966:32:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4948:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4948:6:12"
																},
																"nativeSrc": "4948:51:12",
																"nodeType": "YulFunctionCall",
																"src": "4948:51:12"
															},
															"nativeSrc": "4948:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "4948:51:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5019:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5019:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5030:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5030:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5015:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5015:3:12"
																		},
																		"nativeSrc": "5015:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5015:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5035:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5035:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5008:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5008:6:12"
																},
																"nativeSrc": "5008:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5008:34:12"
															},
															"nativeSrc": "5008:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5008:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5062:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5062:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5073:2:12",
																				"nodeType": "YulLiteral",
																				"src": "5073:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5058:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5058:3:12"
																		},
																		"nativeSrc": "5058:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5058:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5078:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5078:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5051:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5051:6:12"
																},
																"nativeSrc": "5051:34:12",
																"nodeType": "YulFunctionCall",
																"src": "5051:34:12"
															},
															"nativeSrc": "5051:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "5051:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4746:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4856:9:12",
														"nodeType": "YulTypedName",
														"src": "4856:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4867:6:12",
														"nodeType": "YulTypedName",
														"src": "4867:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4875:6:12",
														"nodeType": "YulTypedName",
														"src": "4875:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4883:6:12",
														"nodeType": "YulTypedName",
														"src": "4883:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4894:4:12",
														"nodeType": "YulTypedName",
														"src": "4894:4:12",
														"type": ""
													}
												],
												"src": "4746:345:12"
											},
											{
												"body": {
													"nativeSrc": "5197:76:12",
													"nodeType": "YulBlock",
													"src": "5197:76:12",
													"statements": [
														{
															"nativeSrc": "5207:26:12",
															"nodeType": "YulAssignment",
															"src": "5207:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5219:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5219:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5230:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5230:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5215:3:12"
																},
																"nativeSrc": "5215:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5215:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5207:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5207:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5249:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5249:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "5260:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5260:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5242:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5242:6:12"
																},
																"nativeSrc": "5242:25:12",
																"nodeType": "YulFunctionCall",
																"src": "5242:25:12"
															},
															"nativeSrc": "5242:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "5242:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5096:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5166:9:12",
														"nodeType": "YulTypedName",
														"src": "5166:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5177:6:12",
														"nodeType": "YulTypedName",
														"src": "5177:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5188:4:12",
														"nodeType": "YulTypedName",
														"src": "5188:4:12",
														"type": ""
													}
												],
												"src": "5096:177:12"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := 1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c5472616e636865546f6b656e4160981b8152506040518060400160405280600381526020016254544160e81b8152508160039081620000659190620003fc565b506004620000748282620003fc565b507347574c311cd6c7f8b07cf18d776a25719c61ee22915081905060006200009f6012600a620005db565b620000ae90620f4240620005f3565b9050620000bd6000336200012d565b50620000ea7f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357846200012d565b50620001177f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6836200012d565b50620001243382620001e0565b50505062000623565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff16620001d65760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556200018d3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001620001da565b5060005b92915050565b6001600160a01b038216620002105760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6200021e6000838362000222565b5050565b6001600160a01b038316620002515780600260008282546200024591906200060d565b90915550620002c59050565b6001600160a01b03831660009081526020819052604090205481811015620002a65760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640162000207565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620002e35760028054829003905562000302565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200034891815260200190565b60405180910390a3505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200038057607f821691505b602082108103620003a157634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003f7576000816000526020600020601f850160051c81016020861015620003d25750805b601f850160051c820191505b81811015620003f357828155600101620003de565b5050505b505050565b81516001600160401b0381111562000418576200041862000355565b62000430816200042984546200036b565b84620003a7565b602080601f8311600181146200046857600084156200044f5750858301515b600019600386901b1c1916600185901b178555620003f3565b600085815260208120601f198616915b82811015620004995788860151825594840194600190910190840162000478565b5085821015620004b85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b808511156200051f578160001904821115620005035762000503620004c8565b808516156200051157918102915b93841c9390800290620004e3565b509250929050565b6000826200053857506001620001da565b816200054757506000620001da565b81600181146200056057600281146200056b576200058b565b6001915050620001da565b60ff8411156200057f576200057f620004c8565b50506001821b620001da565b5060208310610133831016604e8410600b8410161715620005b0575081810a620001da565b620005bc8383620004de565b8060001904821115620005d357620005d3620004c8565b029392505050565b6000620005ec60ff84168362000527565b9392505050565b8082028115828204841417620001da57620001da620004c8565b80820180821115620001da57620001da620004c8565b610dc480620006336000396000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c806340c10f19116100cd578063a217fddf11610081578063d539139311610066578063d539139314610316578063d547741f1461033d578063dd62ed3e1461035057600080fd5b8063a217fddf146102fb578063a9059cbb1461030357600080fd5b806391d14854116100b257806391d14854146102a757806395d89b41146102e05780639dc29fac146102e857600080fd5b806340c10f191461026b57806370a082311461027e57600080fd5b806323b872dd116101245780632f2ff15d116101095780632f2ff15d14610234578063313ce5671461024957806336568abe1461025857600080fd5b806323b872dd146101fe578063248a9ca31461021157600080fd5b8063092c5b3b11610155578063092c5b3b146101ae578063095ea7b3146101e357806318160ddd146101f657600080fd5b806301ffc9a71461017157806306fdde0314610199575b600080fd5b61018461017f366004610b96565b610389565b60405190151581526020015b60405180910390f35b6101a1610422565b6040516101909190610bd8565b6101d57f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c57022335781565b604051908152602001610190565b6101846101f1366004610c43565b6104b4565b6002546101d5565b61018461020c366004610c6d565b6104cc565b6101d561021f366004610ca9565b60009081526005602052604090206001015490565b610247610242366004610cc2565b6104f0565b005b60405160128152602001610190565b610247610266366004610cc2565b61051b565b610247610279366004610c43565b61056c565b6101d561028c366004610cee565b6001600160a01b031660009081526020819052604090205490565b6101846102b5366004610cc2565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6101a16105a0565b6102476102f6366004610c43565b6105af565b6101d5600081565b610184610311366004610c43565b6105e3565b6101d57f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61024761034b366004610cc2565b6105f6565b6101d561035e366004610d09565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061041c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606003805461043190610d33565b80601f016020809104026020016040519081016040528092919081815260200182805461045d90610d33565b80156104aa5780601f1061047f576101008083540402835291602001916104aa565b820191906000526020600020905b81548152906001019060200180831161048d57829003601f168201915b5050505050905090565b6000336104c281858561061b565b5060019392505050565b6000336104da858285610628565b6104e58585856106bf565b506001949350505050565b60008281526005602052604090206001015461050b8161071e565b610515838361072b565b50505050565b6001600160a01b038116331461055d576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61056782826107d9565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105968161071e565b6105678383610860565b60606004805461043190610d33565b7f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c5702233576105d98161071e565b610567838361089a565b60006105ef83836108d0565b9392505050565b6000828152600560205260409020600101546106118161071e565b61051583836107d9565b61056783838360016108de565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561051557818110156106b0576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610515848484840360006108de565b6001600160a01b0383166106e957604051634b637e8f60e11b8152600060048201526024016106a7565b6001600160a01b0382166107135760405163ec442f0560e01b8152600060048201526024016106a7565b6105678383836109e5565b6107288133610b28565b50565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff166107d15760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556107893390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161041c565b50600061041c565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff16156107d15760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161041c565b6001600160a01b03821661088a5760405163ec442f0560e01b8152600060048201526024016106a7565b610896600083836109e5565b5050565b6001600160a01b0382166108c457604051634b637e8f60e11b8152600060048201526024016106a7565b610896826000836109e5565b6000336104c28185856106bf565b6001600160a01b038416610921576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016106a7565b6001600160a01b038316610964576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016106a7565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561051557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109d791815260200190565b60405180910390a350505050565b6001600160a01b038316610a10578060026000828254610a059190610d6d565b90915550610a9b9050565b6001600160a01b03831660009081526020819052604090205481811015610a7c576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101829052604481018390526064016106a7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ab757600280548290039055610ad6565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b1b91815260200190565b60405180910390a3505050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16610896576040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602481018390526044016106a7565b600060208284031215610ba857600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146105ef57600080fd5b60006020808352835180602085015260005b81811015610c0657858101830151858201604001528201610bea565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c3e57600080fd5b919050565b60008060408385031215610c5657600080fd5b610c5f83610c27565b946020939093013593505050565b600080600060608486031215610c8257600080fd5b610c8b84610c27565b9250610c9960208501610c27565b9150604084013590509250925092565b600060208284031215610cbb57600080fd5b5035919050565b60008060408385031215610cd557600080fd5b82359150610ce560208401610c27565b90509250929050565b600060208284031215610d0057600080fd5b6105ef82610c27565b60008060408385031215610d1c57600080fd5b610d2583610c27565b9150610ce560208401610c27565b600181811c90821680610d4757607f821691505b602082108103610d6757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561041c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220c0f0149c2a2ed33dc2b7eaa036e83a3abd5dd936e9e8a170a83b252561a6d86f64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x5472616E636865546F6B656E41 PUSH1 0x98 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x545441 PUSH1 0xE8 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x65 SWAP2 SWAP1 PUSH3 0x3FC JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x74 DUP3 DUP3 PUSH3 0x3FC JUMP JUMPDEST POP PUSH20 0x47574C311CD6C7F8B07CF18D776A25719C61EE22 SWAP2 POP DUP2 SWAP1 POP PUSH1 0x0 PUSH3 0x9F PUSH1 0x12 PUSH1 0xA PUSH3 0x5DB JUMP JUMPDEST PUSH3 0xAE SWAP1 PUSH3 0xF4240 PUSH3 0x5F3 JUMP JUMPDEST SWAP1 POP PUSH3 0xBD PUSH1 0x0 CALLER PUSH3 0x12D JUMP JUMPDEST POP PUSH3 0xEA PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 DUP5 PUSH3 0x12D JUMP JUMPDEST POP PUSH3 0x117 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP4 PUSH3 0x12D JUMP JUMPDEST POP PUSH3 0x124 CALLER DUP3 PUSH3 0x1E0 JUMP JUMPDEST POP POP POP PUSH3 0x623 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x1D6 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x18D CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x1DA JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x210 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x21E PUSH1 0x0 DUP4 DUP4 PUSH3 0x222 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x251 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x245 SWAP2 SWAP1 PUSH3 0x60D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x2C5 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x2A6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0x207 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x2E3 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x302 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x348 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x380 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x3A1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x3F7 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x3D2 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3F3 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x3DE JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x418 JUMPI PUSH3 0x418 PUSH3 0x355 JUMP JUMPDEST PUSH3 0x430 DUP2 PUSH3 0x429 DUP5 SLOAD PUSH3 0x36B JUMP JUMPDEST DUP5 PUSH3 0x3A7 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x468 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x44F JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x3F3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x499 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x478 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x4B8 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x51F JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x503 JUMPI PUSH3 0x503 PUSH3 0x4C8 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x511 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x4E3 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x538 JUMPI POP PUSH1 0x1 PUSH3 0x1DA JUMP JUMPDEST DUP2 PUSH3 0x547 JUMPI POP PUSH1 0x0 PUSH3 0x1DA JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x560 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x56B JUMPI PUSH3 0x58B JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x1DA JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x57F JUMPI PUSH3 0x57F PUSH3 0x4C8 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x1DA JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x5B0 JUMPI POP DUP2 DUP2 EXP PUSH3 0x1DA JUMP JUMPDEST PUSH3 0x5BC DUP4 DUP4 PUSH3 0x4DE JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x5D3 JUMPI PUSH3 0x5D3 PUSH3 0x4C8 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x5EC PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x527 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH3 0x1DA JUMPI PUSH3 0x1DA PUSH3 0x4C8 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x1DA JUMPI PUSH3 0x1DA PUSH3 0x4C8 JUMP JUMPDEST PUSH2 0xDC4 DUP1 PUSH3 0x633 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92C5B3B GT PUSH2 0x155 JUMPI DUP1 PUSH4 0x92C5B3B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x1D5 PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x247 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x1D5 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x41C JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0xD33 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0xD33 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4C2 DUP2 DUP6 DUP6 PUSH2 0x61B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4DA DUP6 DUP3 DUP6 PUSH2 0x628 JUMP JUMPDEST PUSH2 0x4E5 DUP6 DUP6 DUP6 PUSH2 0x6BF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x50B DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x515 DUP4 DUP4 PUSH2 0x72B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x567 DUP3 DUP3 PUSH2 0x7D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x596 DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 PUSH2 0x860 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 PUSH2 0x5D9 DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EF DUP4 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x611 DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x515 DUP4 DUP4 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x515 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x515 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 DUP4 PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x728 DUP2 CALLER PUSH2 0xB28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x789 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x41C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x896 PUSH1 0x0 DUP4 DUP4 PUSH2 0x9E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x896 DUP3 PUSH1 0x0 DUP4 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4C2 DUP2 DUP6 DUP6 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x515 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA10 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA05 SWAP2 SWAP1 PUSH2 0xD6D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA9B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC06 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBEA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5F DUP4 PUSH2 0xC27 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8B DUP5 PUSH2 0xC27 JUMP JUMPDEST SWAP3 POP PUSH2 0xC99 PUSH1 0x20 DUP6 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xCE5 PUSH1 0x20 DUP5 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EF DUP3 PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD25 DUP4 PUSH2 0xC27 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE5 PUSH1 0x20 DUP5 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD47 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD67 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 CREATE EQ SWAP13 0x2A 0x2E 0xD3 RETURNDATASIZE 0xC2 0xB7 0xEA LOG0 CALLDATASIZE 0xE8 GASPRICE GASPRICE 0xBD TSTORE 0xD9 CALLDATASIZE 0xE9 0xE8 LOG1 PUSH17 0xA83B252561A6D86F64736F6C6343000818 STOP CALLER ",
							"sourceMap": "174:1118:11:-:0;;;371:513;;;;;;;;;;1582:113:3;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;446:42:11::1;::::0;-1:-1:-1;446:42:11;;-1:-1:-1;425:18:11::1;659:14;2761:2:3::0;659::11::1;:14;:::i;:::-;647:26;::::0;:9:::1;:26;:::i;:::-;623:50:::0;-1:-1:-1;702:42:11::1;2232:4:0;733:10:11;702;:42::i;:::-;-1:-1:-1::0;754:39:11::1;268:28;782:10:::0;754::::1;:39::i;:::-;-1:-1:-1::0;803:31:11::1;340:24;827:6:::0;803:10:::1;:31::i;:::-;-1:-1:-1::0;845:32:11::1;851:10;863:13:::0;845:5:::1;:32::i;:::-;415:469;;;174:1118:::0;;6179:316:0;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:6;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;4554:51:12;4527:18;;7553:32:3;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;4966:32:12;;6367:50:3;;;4948:51:12;5015:18;;;5008:34;;;5058:18;;;5051:34;;;4921:18;;6367:50:3;4746:345:12;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;5242::12;;5230:2;5215:18;;5096:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:127:12:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:543::-;759:2;754:3;751:11;748:446;;;795:1;819:5;816:1;809:16;863:4;860:1;850:18;933:2;921:10;917:19;914:1;910:27;904:4;900:38;969:4;957:10;954:20;951:47;;;-1:-1:-1;992:4:12;951:47;1047:2;1042:3;1038:12;1035:1;1031:20;1025:4;1021:31;1011:41;;1102:82;1120:2;1113:5;1110:13;1102:82;;;1165:17;;;1146:1;1135:13;1102:82;;;1106:3;;;748:446;657:543;;;:::o;1376:1345::-;1496:10;;-1:-1:-1;;;;;1518:30:12;;1515:56;;;1551:18;;:::i;:::-;1580:97;1670:6;1630:38;1662:4;1656:11;1630:38;:::i;:::-;1624:4;1580:97;:::i;:::-;1732:4;;1789:2;1778:14;;1806:1;1801:663;;;;2508:1;2525:6;2522:89;;;-1:-1:-1;2577:19:12;;;2571:26;2522:89;-1:-1:-1;;1333:1:12;1329:11;;;1325:24;1321:29;1311:40;1357:1;1353:11;;;1308:57;2624:81;;1771:944;;1801:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1837:20:12;;;1955:236;1969:7;1966:1;1963:14;1955:236;;;2058:19;;;2052:26;2037:42;;2150:27;;;;2118:1;2106:14;;;;1985:19;;1955:236;;;1959:3;2219:6;2210:7;2207:19;2204:201;;;2280:19;;;2274:26;-1:-1:-1;;2363:1:12;2359:14;;;2375:3;2355:24;2351:37;2347:42;2332:58;2317:74;;2204:201;-1:-1:-1;;;;;2451:1:12;2435:14;;;2431:22;2418:36;;-1:-1:-1;1376:1345:12:o;2726:127::-;2787:10;2782:3;2778:20;2775:1;2768:31;2818:4;2815:1;2808:15;2842:4;2839:1;2832:15;2858:416;2947:1;2984:5;2947:1;2998:270;3019:7;3009:8;3006:21;2998:270;;;3078:4;3074:1;3070:6;3066:17;3060:4;3057:27;3054:53;;;3087:18;;:::i;:::-;3137:7;3127:8;3123:22;3120:55;;;3157:16;;;;3120:55;3236:22;;;;3196:15;;;;2998:270;;;3002:3;2858:416;;;;;:::o;3279:806::-;3328:5;3358:8;3348:80;;-1:-1:-1;3399:1:12;3413:5;;3348:80;3447:4;3437:76;;-1:-1:-1;3484:1:12;3498:5;;3437:76;3529:4;3547:1;3542:59;;;;3615:1;3610:130;;;;3522:218;;3542:59;3572:1;3563:10;;3586:5;;;3610:130;3647:3;3637:8;3634:17;3631:43;;;3654:18;;:::i;:::-;-1:-1:-1;;3710:1:12;3696:16;;3725:5;;3522:218;;3824:2;3814:8;3811:16;3805:3;3799:4;3796:13;3792:36;3786:2;3776:8;3773:16;3768:2;3762:4;3759:12;3755:35;3752:77;3749:159;;;-1:-1:-1;3861:19:12;;;3893:5;;3749:159;3940:34;3965:8;3959:4;3940:34;:::i;:::-;4010:6;4006:1;4002:6;3998:19;3989:7;3986:32;3983:58;;;4021:18;;:::i;:::-;4059:20;;3279:806;-1:-1:-1;;;3279:806:12:o;4090:140::-;4148:5;4177:47;4218:4;4208:8;4204:19;4198:4;4177:47;:::i;:::-;4168:56;4090:140;-1:-1:-1;;;4090:140:12:o;4235:168::-;4308:9;;;4339;;4356:15;;;4350:22;;4336:37;4326:71;;4377:18;;:::i;4616:125::-;4681:9;;;4702:10;;;4699:36;;;4715:18;;:::i;5096:177::-;174:1118:11;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@CONTROLLER_ROLE_2012": {
									"entryPoint": null,
									"id": 2012,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_2017": {
									"entryPoint": null,
									"id": 2017,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_921": {
									"entryPoint": 1563,
									"id": 921,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_981": {
									"entryPoint": 2270,
									"id": 981,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_903": {
									"entryPoint": 2202,
									"id": 903,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_114": {
									"entryPoint": 2856,
									"id": 114,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_93": {
									"entryPoint": 1822,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_256": {
									"entryPoint": 1835,
									"id": 256,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_mint_870": {
									"entryPoint": 2144,
									"id": 870,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1146": {
									"entryPoint": null,
									"id": 1146,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_294": {
									"entryPoint": 2009,
									"id": 294,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_spendAllowance_1029": {
									"entryPoint": 1576,
									"id": 1029,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_760": {
									"entryPoint": 1727,
									"id": 760,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_837": {
									"entryPoint": 2533,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_657": {
									"entryPoint": null,
									"id": 657,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_681": {
									"entryPoint": 1204,
									"id": 681,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_616": {
									"entryPoint": null,
									"id": 616,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_2080": {
									"entryPoint": 1455,
									"id": 2080,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_594": {
									"entryPoint": null,
									"id": 594,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_128": {
									"entryPoint": null,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_147": {
									"entryPoint": 1264,
									"id": 147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_80": {
									"entryPoint": null,
									"id": 80,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mint_2096": {
									"entryPoint": 1388,
									"id": 2096,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_576": {
									"entryPoint": 1058,
									"id": 576,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_189": {
									"entryPoint": 1307,
									"id": 189,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_166": {
									"entryPoint": 1526,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1295": {
									"entryPoint": null,
									"id": 1295,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_62": {
									"entryPoint": 905,
									"id": 62,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_585": {
									"entryPoint": 1440,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_603": {
									"entryPoint": null,
									"id": 603,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_713": {
									"entryPoint": 1228,
									"id": 713,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_2113": {
									"entryPoint": 1507,
									"id": 2113,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_640": {
									"entryPoint": 2256,
									"id": 640,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 3111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3181,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 3241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 3266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3032,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 3379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4971:12",
										"nodeType": "YulBlock",
										"src": "0:4971:12",
										"statements": [
											{
												"nativeSrc": "6:3:12",
												"nodeType": "YulBlock",
												"src": "6:3:12",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:263:12",
													"nodeType": "YulBlock",
													"src": "83:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:12",
																"nodeType": "YulBlock",
																"src": "129:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:12",
																					"nodeType": "YulLiteral",
																					"src": "138:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:12",
																					"nodeType": "YulLiteral",
																					"src": "141:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:12"
																			},
																			"nativeSrc": "131:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:12"
																		},
																		"nativeSrc": "131:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:12"
																		},
																		"nativeSrc": "100:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:12",
																		"nodeType": "YulLiteral",
																		"src": "125:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:12"
																},
																"nativeSrc": "96:32:12",
																"nodeType": "YulFunctionCall",
																"src": "96:32:12"
															},
															"nativeSrc": "93:52:12",
															"nodeType": "YulIf",
															"src": "93:52:12"
														},
														{
															"nativeSrc": "154:36:12",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:12"
																},
																"nativeSrc": "167:23:12",
																"nodeType": "YulFunctionCall",
																"src": "167:23:12"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:12",
																	"nodeType": "YulTypedName",
																	"src": "158:5:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "300:16:12",
																"nodeType": "YulBlock",
																"src": "300:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "309:1:12",
																					"nodeType": "YulLiteral",
																					"src": "309:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "312:1:12",
																					"nodeType": "YulLiteral",
																					"src": "312:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "302:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "302:6:12"
																			},
																			"nativeSrc": "302:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "302:12:12"
																		},
																		"nativeSrc": "302:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "302:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "230:66:12",
																						"nodeType": "YulLiteral",
																						"src": "230:66:12",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:12"
																				},
																				"nativeSrc": "219:78:12",
																				"nodeType": "YulFunctionCall",
																				"src": "219:78:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:12"
																		},
																		"nativeSrc": "209:89:12",
																		"nodeType": "YulFunctionCall",
																		"src": "209:89:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:12"
																},
																"nativeSrc": "202:97:12",
																"nodeType": "YulFunctionCall",
																"src": "202:97:12"
															},
															"nativeSrc": "199:117:12",
															"nodeType": "YulIf",
															"src": "199:117:12"
														},
														{
															"nativeSrc": "325:15:12",
															"nodeType": "YulAssignment",
															"src": "325:15:12",
															"value": {
																"name": "value",
																"nativeSrc": "335:5:12",
																"nodeType": "YulIdentifier",
																"src": "335:5:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "325:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "325:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:12",
														"nodeType": "YulTypedName",
														"src": "49:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:12",
														"nodeType": "YulTypedName",
														"src": "60:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:12",
														"nodeType": "YulTypedName",
														"src": "72:6:12",
														"type": ""
													}
												],
												"src": "14:332:12"
											},
											{
												"body": {
													"nativeSrc": "446:92:12",
													"nodeType": "YulBlock",
													"src": "446:92:12",
													"statements": [
														{
															"nativeSrc": "456:26:12",
															"nodeType": "YulAssignment",
															"src": "456:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "468:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "468:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "479:2:12",
																		"nodeType": "YulLiteral",
																		"src": "479:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "464:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "464:3:12"
																},
																"nativeSrc": "464:18:12",
																"nodeType": "YulFunctionCall",
																"src": "464:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "456:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "456:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "498:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "498:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "523:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "523:6:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "516:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "516:6:12"
																				},
																				"nativeSrc": "516:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "516:14:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "509:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "509:6:12"
																		},
																		"nativeSrc": "509:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "509:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "491:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "491:6:12"
																},
																"nativeSrc": "491:41:12",
																"nodeType": "YulFunctionCall",
																"src": "491:41:12"
															},
															"nativeSrc": "491:41:12",
															"nodeType": "YulExpressionStatement",
															"src": "491:41:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "351:187:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "415:9:12",
														"nodeType": "YulTypedName",
														"src": "415:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "426:6:12",
														"nodeType": "YulTypedName",
														"src": "426:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "437:4:12",
														"nodeType": "YulTypedName",
														"src": "437:4:12",
														"type": ""
													}
												],
												"src": "351:187:12"
											},
											{
												"body": {
													"nativeSrc": "664:427:12",
													"nodeType": "YulBlock",
													"src": "664:427:12",
													"statements": [
														{
															"nativeSrc": "674:12:12",
															"nodeType": "YulVariableDeclaration",
															"src": "674:12:12",
															"value": {
																"kind": "number",
																"nativeSrc": "684:2:12",
																"nodeType": "YulLiteral",
																"src": "684:2:12",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "678:2:12",
																	"nodeType": "YulTypedName",
																	"src": "678:2:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "702:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "702:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "713:2:12",
																		"nodeType": "YulLiteral",
																		"src": "713:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "695:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "695:6:12"
																},
																"nativeSrc": "695:21:12",
																"nodeType": "YulFunctionCall",
																"src": "695:21:12"
															},
															"nativeSrc": "695:21:12",
															"nodeType": "YulExpressionStatement",
															"src": "695:21:12"
														},
														{
															"nativeSrc": "725:27:12",
															"nodeType": "YulVariableDeclaration",
															"src": "725:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "745:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "745:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "739:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "739:5:12"
																},
																"nativeSrc": "739:13:12",
																"nodeType": "YulFunctionCall",
																"src": "739:13:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "729:6:12",
																	"nodeType": "YulTypedName",
																	"src": "729:6:12",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "772:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "772:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "783:2:12",
																				"nodeType": "YulLiteral",
																				"src": "783:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "768:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "768:3:12"
																		},
																		"nativeSrc": "768:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "768:18:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "788:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "788:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "761:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "761:6:12"
																},
																"nativeSrc": "761:34:12",
																"nodeType": "YulFunctionCall",
																"src": "761:34:12"
															},
															"nativeSrc": "761:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "761:34:12"
														},
														{
															"nativeSrc": "804:10:12",
															"nodeType": "YulVariableDeclaration",
															"src": "804:10:12",
															"value": {
																"kind": "number",
																"nativeSrc": "813:1:12",
																"nodeType": "YulLiteral",
																"src": "813:1:12",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "808:1:12",
																	"nodeType": "YulTypedName",
																	"src": "808:1:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "873:90:12",
																"nodeType": "YulBlock",
																"src": "873:90:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "902:9:12",
																									"nodeType": "YulIdentifier",
																									"src": "902:9:12"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "913:1:12",
																									"nodeType": "YulIdentifier",
																									"src": "913:1:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "898:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "898:3:12"
																							},
																							"nativeSrc": "898:17:12",
																							"nodeType": "YulFunctionCall",
																							"src": "898:17:12"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "917:2:12",
																							"nodeType": "YulLiteral",
																							"src": "917:2:12",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "894:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "894:3:12"
																					},
																					"nativeSrc": "894:26:12",
																					"nodeType": "YulFunctionCall",
																					"src": "894:26:12"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "936:6:12",
																											"nodeType": "YulIdentifier",
																											"src": "936:6:12"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "944:1:12",
																											"nodeType": "YulIdentifier",
																											"src": "944:1:12"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "932:3:12",
																										"nodeType": "YulIdentifier",
																										"src": "932:3:12"
																									},
																									"nativeSrc": "932:14:12",
																									"nodeType": "YulFunctionCall",
																									"src": "932:14:12"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "948:2:12",
																									"nodeType": "YulIdentifier",
																									"src": "948:2:12"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "928:3:12",
																								"nodeType": "YulIdentifier",
																								"src": "928:3:12"
																							},
																							"nativeSrc": "928:23:12",
																							"nodeType": "YulFunctionCall",
																							"src": "928:23:12"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "922:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "922:5:12"
																					},
																					"nativeSrc": "922:30:12",
																					"nodeType": "YulFunctionCall",
																					"src": "922:30:12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "887:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "887:6:12"
																			},
																			"nativeSrc": "887:66:12",
																			"nodeType": "YulFunctionCall",
																			"src": "887:66:12"
																		},
																		"nativeSrc": "887:66:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "887:66:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "834:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "834:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "837:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "837:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "831:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "831:2:12"
																},
																"nativeSrc": "831:13:12",
																"nodeType": "YulFunctionCall",
																"src": "831:13:12"
															},
															"nativeSrc": "823:140:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "845:19:12",
																"nodeType": "YulBlock",
																"src": "845:19:12",
																"statements": [
																	{
																		"nativeSrc": "847:15:12",
																		"nodeType": "YulAssignment",
																		"src": "847:15:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "856:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "856:1:12"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "859:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "859:2:12"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "852:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "852:3:12"
																			},
																			"nativeSrc": "852:10:12",
																			"nodeType": "YulFunctionCall",
																			"src": "852:10:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "847:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "847:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "827:3:12",
																"nodeType": "YulBlock",
																"src": "827:3:12",
																"statements": []
															},
															"src": "823:140:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "987:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "987:9:12"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "998:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "998:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "983:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "983:3:12"
																				},
																				"nativeSrc": "983:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "983:22:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1007:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1007:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "979:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "979:3:12"
																		},
																		"nativeSrc": "979:31:12",
																		"nodeType": "YulFunctionCall",
																		"src": "979:31:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1012:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1012:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "972:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "972:6:12"
																},
																"nativeSrc": "972:42:12",
																"nodeType": "YulFunctionCall",
																"src": "972:42:12"
															},
															"nativeSrc": "972:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "972:42:12"
														},
														{
															"nativeSrc": "1023:62:12",
															"nodeType": "YulAssignment",
															"src": "1023:62:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1039:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1058:6:12",
																								"nodeType": "YulIdentifier",
																								"src": "1058:6:12"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1066:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1066:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1054:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1054:3:12"
																						},
																						"nativeSrc": "1054:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1054:15:12"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1075:2:12",
																								"nodeType": "YulLiteral",
																								"src": "1075:2:12",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1071:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "1071:3:12"
																						},
																						"nativeSrc": "1071:7:12",
																						"nodeType": "YulFunctionCall",
																						"src": "1071:7:12"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1050:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1050:3:12"
																				},
																				"nativeSrc": "1050:29:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1050:29:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1035:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1035:3:12"
																		},
																		"nativeSrc": "1035:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1035:45:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1082:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1082:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1031:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1031:3:12"
																},
																"nativeSrc": "1031:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1031:54:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1023:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1023:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "543:548:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "633:9:12",
														"nodeType": "YulTypedName",
														"src": "633:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "655:4:12",
														"nodeType": "YulTypedName",
														"src": "655:4:12",
														"type": ""
													}
												],
												"src": "543:548:12"
											},
											{
												"body": {
													"nativeSrc": "1197:76:12",
													"nodeType": "YulBlock",
													"src": "1197:76:12",
													"statements": [
														{
															"nativeSrc": "1207:26:12",
															"nodeType": "YulAssignment",
															"src": "1207:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1219:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1219:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1230:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1230:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1215:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1215:3:12"
																},
																"nativeSrc": "1215:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1215:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1207:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1207:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1249:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1249:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1260:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1260:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1242:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:12"
																},
																"nativeSrc": "1242:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1242:25:12"
															},
															"nativeSrc": "1242:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1242:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1096:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1166:9:12",
														"nodeType": "YulTypedName",
														"src": "1166:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1177:6:12",
														"nodeType": "YulTypedName",
														"src": "1177:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1188:4:12",
														"nodeType": "YulTypedName",
														"src": "1188:4:12",
														"type": ""
													}
												],
												"src": "1096:177:12"
											},
											{
												"body": {
													"nativeSrc": "1327:147:12",
													"nodeType": "YulBlock",
													"src": "1327:147:12",
													"statements": [
														{
															"nativeSrc": "1337:29:12",
															"nodeType": "YulAssignment",
															"src": "1337:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1359:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1359:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1346:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1346:12:12"
																},
																"nativeSrc": "1346:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1346:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1337:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1337:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1452:16:12",
																"nodeType": "YulBlock",
																"src": "1452:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1461:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1461:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1464:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1464:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1454:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1454:6:12"
																			},
																			"nativeSrc": "1454:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1454:12:12"
																		},
																		"nativeSrc": "1454:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1454:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1388:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1388:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1399:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1399:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1406:42:12",
																						"nodeType": "YulLiteral",
																						"src": "1406:42:12",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1395:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1395:3:12"
																				},
																				"nativeSrc": "1395:54:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1395:54:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1385:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1385:2:12"
																		},
																		"nativeSrc": "1385:65:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1385:65:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1378:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1378:6:12"
																},
																"nativeSrc": "1378:73:12",
																"nodeType": "YulFunctionCall",
																"src": "1378:73:12"
															},
															"nativeSrc": "1375:93:12",
															"nodeType": "YulIf",
															"src": "1375:93:12"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1278:196:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1306:6:12",
														"nodeType": "YulTypedName",
														"src": "1306:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1317:5:12",
														"nodeType": "YulTypedName",
														"src": "1317:5:12",
														"type": ""
													}
												],
												"src": "1278:196:12"
											},
											{
												"body": {
													"nativeSrc": "1566:167:12",
													"nodeType": "YulBlock",
													"src": "1566:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1612:16:12",
																"nodeType": "YulBlock",
																"src": "1612:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1621:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1621:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1624:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1624:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1614:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1614:6:12"
																			},
																			"nativeSrc": "1614:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1614:12:12"
																		},
																		"nativeSrc": "1614:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1614:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1587:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1587:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1596:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1583:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1583:3:12"
																		},
																		"nativeSrc": "1583:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1583:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1608:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1579:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1579:3:12"
																},
																"nativeSrc": "1579:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1579:32:12"
															},
															"nativeSrc": "1576:52:12",
															"nodeType": "YulIf",
															"src": "1576:52:12"
														},
														{
															"nativeSrc": "1637:39:12",
															"nodeType": "YulAssignment",
															"src": "1637:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1666:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1666:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1647:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "1647:18:12"
																},
																"nativeSrc": "1647:29:12",
																"nodeType": "YulFunctionCall",
																"src": "1647:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1637:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1637:6:12"
																}
															]
														},
														{
															"nativeSrc": "1685:42:12",
															"nodeType": "YulAssignment",
															"src": "1685:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1712:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1712:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1723:2:12",
																				"nodeType": "YulLiteral",
																				"src": "1723:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1708:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1708:3:12"
																		},
																		"nativeSrc": "1708:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1708:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1695:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1695:12:12"
																},
																"nativeSrc": "1695:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1695:32:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1685:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1685:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1479:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1524:9:12",
														"nodeType": "YulTypedName",
														"src": "1524:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1535:7:12",
														"nodeType": "YulTypedName",
														"src": "1535:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1547:6:12",
														"nodeType": "YulTypedName",
														"src": "1547:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1555:6:12",
														"nodeType": "YulTypedName",
														"src": "1555:6:12",
														"type": ""
													}
												],
												"src": "1479:254:12"
											},
											{
												"body": {
													"nativeSrc": "1839:76:12",
													"nodeType": "YulBlock",
													"src": "1839:76:12",
													"statements": [
														{
															"nativeSrc": "1849:26:12",
															"nodeType": "YulAssignment",
															"src": "1849:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1861:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1861:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1872:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1872:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1857:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1857:3:12"
																},
																"nativeSrc": "1857:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1857:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1849:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1849:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1891:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1891:9:12"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1902:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1902:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1884:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1884:6:12"
																},
																"nativeSrc": "1884:25:12",
																"nodeType": "YulFunctionCall",
																"src": "1884:25:12"
															},
															"nativeSrc": "1884:25:12",
															"nodeType": "YulExpressionStatement",
															"src": "1884:25:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1738:177:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1808:9:12",
														"nodeType": "YulTypedName",
														"src": "1808:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1819:6:12",
														"nodeType": "YulTypedName",
														"src": "1819:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1830:4:12",
														"nodeType": "YulTypedName",
														"src": "1830:4:12",
														"type": ""
													}
												],
												"src": "1738:177:12"
											},
											{
												"body": {
													"nativeSrc": "2024:224:12",
													"nodeType": "YulBlock",
													"src": "2024:224:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2070:16:12",
																"nodeType": "YulBlock",
																"src": "2070:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2079:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2079:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2082:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2082:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2072:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2072:6:12"
																			},
																			"nativeSrc": "2072:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2072:12:12"
																		},
																		"nativeSrc": "2072:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2072:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2045:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2045:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2054:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2054:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2041:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2041:3:12"
																		},
																		"nativeSrc": "2041:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2041:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2066:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2066:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2037:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2037:3:12"
																},
																"nativeSrc": "2037:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2037:32:12"
															},
															"nativeSrc": "2034:52:12",
															"nodeType": "YulIf",
															"src": "2034:52:12"
														},
														{
															"nativeSrc": "2095:39:12",
															"nodeType": "YulAssignment",
															"src": "2095:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2124:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2124:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2105:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2105:18:12"
																},
																"nativeSrc": "2105:29:12",
																"nodeType": "YulFunctionCall",
																"src": "2105:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2095:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2095:6:12"
																}
															]
														},
														{
															"nativeSrc": "2143:48:12",
															"nodeType": "YulAssignment",
															"src": "2143:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2176:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2176:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2187:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2187:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2172:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2172:3:12"
																		},
																		"nativeSrc": "2172:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2172:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2153:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2153:18:12"
																},
																"nativeSrc": "2153:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2153:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2143:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2143:6:12"
																}
															]
														},
														{
															"nativeSrc": "2200:42:12",
															"nodeType": "YulAssignment",
															"src": "2200:42:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2227:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2238:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2238:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2223:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2223:3:12"
																		},
																		"nativeSrc": "2223:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2223:18:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2210:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2210:12:12"
																},
																"nativeSrc": "2210:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2210:32:12"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2200:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2200:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1920:328:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1974:9:12",
														"nodeType": "YulTypedName",
														"src": "1974:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1985:7:12",
														"nodeType": "YulTypedName",
														"src": "1985:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1997:6:12",
														"nodeType": "YulTypedName",
														"src": "1997:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2005:6:12",
														"nodeType": "YulTypedName",
														"src": "2005:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2013:6:12",
														"nodeType": "YulTypedName",
														"src": "2013:6:12",
														"type": ""
													}
												],
												"src": "1920:328:12"
											},
											{
												"body": {
													"nativeSrc": "2323:110:12",
													"nodeType": "YulBlock",
													"src": "2323:110:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2369:16:12",
																"nodeType": "YulBlock",
																"src": "2369:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2381:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2381:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2371:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2371:6:12"
																			},
																			"nativeSrc": "2371:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2371:12:12"
																		},
																		"nativeSrc": "2371:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2371:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2344:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2344:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2353:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2353:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2340:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2340:3:12"
																		},
																		"nativeSrc": "2340:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2340:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2365:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2365:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2336:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2336:3:12"
																},
																"nativeSrc": "2336:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2336:32:12"
															},
															"nativeSrc": "2333:52:12",
															"nodeType": "YulIf",
															"src": "2333:52:12"
														},
														{
															"nativeSrc": "2394:33:12",
															"nodeType": "YulAssignment",
															"src": "2394:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2417:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2417:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2404:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2404:12:12"
																},
																"nativeSrc": "2404:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2404:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2394:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2394:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "2253:180:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2289:9:12",
														"nodeType": "YulTypedName",
														"src": "2289:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2300:7:12",
														"nodeType": "YulTypedName",
														"src": "2300:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2312:6:12",
														"nodeType": "YulTypedName",
														"src": "2312:6:12",
														"type": ""
													}
												],
												"src": "2253:180:12"
											},
											{
												"body": {
													"nativeSrc": "2525:167:12",
													"nodeType": "YulBlock",
													"src": "2525:167:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2571:16:12",
																"nodeType": "YulBlock",
																"src": "2571:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2580:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2580:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2583:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2583:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2573:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2573:6:12"
																			},
																			"nativeSrc": "2573:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2573:12:12"
																		},
																		"nativeSrc": "2573:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2573:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2546:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2546:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2555:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2555:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2542:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2542:3:12"
																		},
																		"nativeSrc": "2542:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2542:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2567:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2567:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2538:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2538:3:12"
																},
																"nativeSrc": "2538:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2538:32:12"
															},
															"nativeSrc": "2535:52:12",
															"nodeType": "YulIf",
															"src": "2535:52:12"
														},
														{
															"nativeSrc": "2596:33:12",
															"nodeType": "YulAssignment",
															"src": "2596:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2619:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2619:9:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2606:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2606:12:12"
																},
																"nativeSrc": "2606:23:12",
																"nodeType": "YulFunctionCall",
																"src": "2606:23:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2596:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2596:6:12"
																}
															]
														},
														{
															"nativeSrc": "2638:48:12",
															"nodeType": "YulAssignment",
															"src": "2638:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2671:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2671:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2682:2:12",
																				"nodeType": "YulLiteral",
																				"src": "2682:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2667:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2667:3:12"
																		},
																		"nativeSrc": "2667:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2667:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2648:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "2648:18:12"
																},
																"nativeSrc": "2648:38:12",
																"nodeType": "YulFunctionCall",
																"src": "2648:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2638:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2638:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2438:254:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2483:9:12",
														"nodeType": "YulTypedName",
														"src": "2483:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2494:7:12",
														"nodeType": "YulTypedName",
														"src": "2494:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2506:6:12",
														"nodeType": "YulTypedName",
														"src": "2506:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2514:6:12",
														"nodeType": "YulTypedName",
														"src": "2514:6:12",
														"type": ""
													}
												],
												"src": "2438:254:12"
											},
											{
												"body": {
													"nativeSrc": "2794:87:12",
													"nodeType": "YulBlock",
													"src": "2794:87:12",
													"statements": [
														{
															"nativeSrc": "2804:26:12",
															"nodeType": "YulAssignment",
															"src": "2804:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2816:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2816:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2827:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2827:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2812:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2812:3:12"
																},
																"nativeSrc": "2812:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2812:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2804:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2804:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2846:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2846:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2861:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2861:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2869:4:12",
																				"nodeType": "YulLiteral",
																				"src": "2869:4:12",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2857:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:12"
																		},
																		"nativeSrc": "2857:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2857:17:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2839:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2839:6:12"
																},
																"nativeSrc": "2839:36:12",
																"nodeType": "YulFunctionCall",
																"src": "2839:36:12"
															},
															"nativeSrc": "2839:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "2839:36:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "2697:184:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2763:9:12",
														"nodeType": "YulTypedName",
														"src": "2763:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2774:6:12",
														"nodeType": "YulTypedName",
														"src": "2774:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2785:4:12",
														"nodeType": "YulTypedName",
														"src": "2785:4:12",
														"type": ""
													}
												],
												"src": "2697:184:12"
											},
											{
												"body": {
													"nativeSrc": "2956:116:12",
													"nodeType": "YulBlock",
													"src": "2956:116:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3002:16:12",
																"nodeType": "YulBlock",
																"src": "3002:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3011:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3011:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3014:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3014:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3004:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3004:6:12"
																			},
																			"nativeSrc": "3004:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3004:12:12"
																		},
																		"nativeSrc": "3004:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3004:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2977:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2977:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2986:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2986:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2973:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2973:3:12"
																		},
																		"nativeSrc": "2973:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2973:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2998:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2969:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2969:3:12"
																},
																"nativeSrc": "2969:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2969:32:12"
															},
															"nativeSrc": "2966:52:12",
															"nodeType": "YulIf",
															"src": "2966:52:12"
														},
														{
															"nativeSrc": "3027:39:12",
															"nodeType": "YulAssignment",
															"src": "3027:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3056:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3056:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3037:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3037:18:12"
																},
																"nativeSrc": "3037:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3037:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3027:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3027:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2886:186:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2922:9:12",
														"nodeType": "YulTypedName",
														"src": "2922:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2933:7:12",
														"nodeType": "YulTypedName",
														"src": "2933:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2945:6:12",
														"nodeType": "YulTypedName",
														"src": "2945:6:12",
														"type": ""
													}
												],
												"src": "2886:186:12"
											},
											{
												"body": {
													"nativeSrc": "3164:173:12",
													"nodeType": "YulBlock",
													"src": "3164:173:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3210:16:12",
																"nodeType": "YulBlock",
																"src": "3210:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3219:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3219:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3222:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3222:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3212:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:12"
																			},
																			"nativeSrc": "3212:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3212:12:12"
																		},
																		"nativeSrc": "3212:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3212:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3185:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3185:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3181:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3181:3:12"
																		},
																		"nativeSrc": "3181:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3181:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3206:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3206:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3177:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3177:3:12"
																},
																"nativeSrc": "3177:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3177:32:12"
															},
															"nativeSrc": "3174:52:12",
															"nodeType": "YulIf",
															"src": "3174:52:12"
														},
														{
															"nativeSrc": "3235:39:12",
															"nodeType": "YulAssignment",
															"src": "3235:39:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3264:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3264:9:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3245:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3245:18:12"
																},
																"nativeSrc": "3245:29:12",
																"nodeType": "YulFunctionCall",
																"src": "3245:29:12"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3235:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3235:6:12"
																}
															]
														},
														{
															"nativeSrc": "3283:48:12",
															"nodeType": "YulAssignment",
															"src": "3283:48:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3316:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3316:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3327:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3327:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3312:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3312:3:12"
																		},
																		"nativeSrc": "3312:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3293:18:12",
																	"nodeType": "YulIdentifier",
																	"src": "3293:18:12"
																},
																"nativeSrc": "3293:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3293:38:12"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3283:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3283:6:12"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "3077:260:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3122:9:12",
														"nodeType": "YulTypedName",
														"src": "3122:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3133:7:12",
														"nodeType": "YulTypedName",
														"src": "3133:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3145:6:12",
														"nodeType": "YulTypedName",
														"src": "3145:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3153:6:12",
														"nodeType": "YulTypedName",
														"src": "3153:6:12",
														"type": ""
													}
												],
												"src": "3077:260:12"
											},
											{
												"body": {
													"nativeSrc": "3397:382:12",
													"nodeType": "YulBlock",
													"src": "3397:382:12",
													"statements": [
														{
															"nativeSrc": "3407:22:12",
															"nodeType": "YulAssignment",
															"src": "3407:22:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3421:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3421:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "3424:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3424:4:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3417:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3417:3:12"
																},
																"nativeSrc": "3417:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3417:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3407:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:12"
																}
															]
														},
														{
															"nativeSrc": "3438:38:12",
															"nodeType": "YulVariableDeclaration",
															"src": "3438:38:12",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3468:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3468:4:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3474:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3474:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3464:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3464:3:12"
																},
																"nativeSrc": "3464:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3464:12:12"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3442:18:12",
																	"nodeType": "YulTypedName",
																	"src": "3442:18:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3515:31:12",
																"nodeType": "YulBlock",
																"src": "3515:31:12",
																"statements": [
																	{
																		"nativeSrc": "3517:27:12",
																		"nodeType": "YulAssignment",
																		"src": "3517:27:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3531:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "3531:6:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3539:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3539:4:12",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3527:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "3527:3:12"
																			},
																			"nativeSrc": "3527:17:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3527:17:12"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3517:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3517:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3495:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3495:18:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3488:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3488:6:12"
																},
																"nativeSrc": "3488:26:12",
																"nodeType": "YulFunctionCall",
																"src": "3488:26:12"
															},
															"nativeSrc": "3485:61:12",
															"nodeType": "YulIf",
															"src": "3485:61:12"
														},
														{
															"body": {
																"nativeSrc": "3605:168:12",
																"nodeType": "YulBlock",
																"src": "3605:168:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3626:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3626:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3629:77:12",
																					"nodeType": "YulLiteral",
																					"src": "3629:77:12",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3619:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3619:6:12"
																			},
																			"nativeSrc": "3619:88:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3619:88:12"
																		},
																		"nativeSrc": "3619:88:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3619:88:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3727:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3727:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3730:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3730:4:12",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3720:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3720:6:12"
																			},
																			"nativeSrc": "3720:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3720:15:12"
																		},
																		"nativeSrc": "3720:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3720:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3755:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3755:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3758:4:12",
																					"nodeType": "YulLiteral",
																					"src": "3758:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3748:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3748:6:12"
																			},
																			"nativeSrc": "3748:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3748:15:12"
																		},
																		"nativeSrc": "3748:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3748:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3561:18:12",
																		"nodeType": "YulIdentifier",
																		"src": "3561:18:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3584:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3584:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3592:2:12",
																				"nodeType": "YulLiteral",
																				"src": "3592:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3581:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3581:2:12"
																		},
																		"nativeSrc": "3581:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3581:14:12"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3558:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "3558:2:12"
																},
																"nativeSrc": "3558:38:12",
																"nodeType": "YulFunctionCall",
																"src": "3558:38:12"
															},
															"nativeSrc": "3555:218:12",
															"nodeType": "YulIf",
															"src": "3555:218:12"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3342:437:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3377:4:12",
														"nodeType": "YulTypedName",
														"src": "3377:4:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3386:6:12",
														"nodeType": "YulTypedName",
														"src": "3386:6:12",
														"type": ""
													}
												],
												"src": "3342:437:12"
											},
											{
												"body": {
													"nativeSrc": "3941:211:12",
													"nodeType": "YulBlock",
													"src": "3941:211:12",
													"statements": [
														{
															"nativeSrc": "3951:26:12",
															"nodeType": "YulAssignment",
															"src": "3951:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3963:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3963:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3974:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3974:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3959:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3959:3:12"
																},
																"nativeSrc": "3959:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3959:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3951:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3951:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3993:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3993:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4008:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4008:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:42:12",
																				"nodeType": "YulLiteral",
																				"src": "4016:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4004:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4004:3:12"
																		},
																		"nativeSrc": "4004:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4004:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3986:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3986:6:12"
																},
																"nativeSrc": "3986:74:12",
																"nodeType": "YulFunctionCall",
																"src": "3986:74:12"
															},
															"nativeSrc": "3986:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "3986:74:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4080:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4080:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4091:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4091:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4076:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4076:3:12"
																		},
																		"nativeSrc": "4076:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4076:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4096:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4096:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4069:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4069:6:12"
																},
																"nativeSrc": "4069:34:12",
																"nodeType": "YulFunctionCall",
																"src": "4069:34:12"
															},
															"nativeSrc": "4069:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "4069:34:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4123:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4123:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4134:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4134:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4119:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4119:3:12"
																		},
																		"nativeSrc": "4119:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4119:18:12"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4139:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4139:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4112:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4112:6:12"
																},
																"nativeSrc": "4112:34:12",
																"nodeType": "YulFunctionCall",
																"src": "4112:34:12"
															},
															"nativeSrc": "4112:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "4112:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3784:368:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3894:9:12",
														"nodeType": "YulTypedName",
														"src": "3894:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3905:6:12",
														"nodeType": "YulTypedName",
														"src": "3905:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3913:6:12",
														"nodeType": "YulTypedName",
														"src": "3913:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3921:6:12",
														"nodeType": "YulTypedName",
														"src": "3921:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3932:4:12",
														"nodeType": "YulTypedName",
														"src": "3932:4:12",
														"type": ""
													}
												],
												"src": "3784:368:12"
											},
											{
												"body": {
													"nativeSrc": "4258:125:12",
													"nodeType": "YulBlock",
													"src": "4258:125:12",
													"statements": [
														{
															"nativeSrc": "4268:26:12",
															"nodeType": "YulAssignment",
															"src": "4268:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4280:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4280:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4291:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4291:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4276:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4276:3:12"
																},
																"nativeSrc": "4276:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4276:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4268:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4268:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4310:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4310:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4325:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4325:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4333:42:12",
																				"nodeType": "YulLiteral",
																				"src": "4333:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4321:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4321:3:12"
																		},
																		"nativeSrc": "4321:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4321:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4303:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4303:6:12"
																},
																"nativeSrc": "4303:74:12",
																"nodeType": "YulFunctionCall",
																"src": "4303:74:12"
															},
															"nativeSrc": "4303:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "4303:74:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "4157:226:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4227:9:12",
														"nodeType": "YulTypedName",
														"src": "4227:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4238:6:12",
														"nodeType": "YulTypedName",
														"src": "4238:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4249:4:12",
														"nodeType": "YulTypedName",
														"src": "4249:4:12",
														"type": ""
													}
												],
												"src": "4157:226:12"
											},
											{
												"body": {
													"nativeSrc": "4436:231:12",
													"nodeType": "YulBlock",
													"src": "4436:231:12",
													"statements": [
														{
															"nativeSrc": "4446:16:12",
															"nodeType": "YulAssignment",
															"src": "4446:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4457:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4457:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4460:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4460:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4453:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4453:3:12"
																},
																"nativeSrc": "4453:9:12",
																"nodeType": "YulFunctionCall",
																"src": "4453:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4446:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4493:168:12",
																"nodeType": "YulBlock",
																"src": "4493:168:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4514:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4514:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4517:77:12",
																					"nodeType": "YulLiteral",
																					"src": "4517:77:12",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4507:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4507:6:12"
																			},
																			"nativeSrc": "4507:88:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4507:88:12"
																		},
																		"nativeSrc": "4507:88:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4507:88:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4615:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4615:1:12",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4618:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4618:4:12",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4608:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4608:6:12"
																			},
																			"nativeSrc": "4608:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4608:15:12"
																		},
																		"nativeSrc": "4608:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4608:15:12"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4643:1:12",
																					"nodeType": "YulLiteral",
																					"src": "4643:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4646:4:12",
																					"nodeType": "YulLiteral",
																					"src": "4646:4:12",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4636:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4636:6:12"
																			},
																			"nativeSrc": "4636:15:12",
																			"nodeType": "YulFunctionCall",
																			"src": "4636:15:12"
																		},
																		"nativeSrc": "4636:15:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "4636:15:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4477:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "4477:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4480:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4480:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4474:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "4474:2:12"
																},
																"nativeSrc": "4474:10:12",
																"nodeType": "YulFunctionCall",
																"src": "4474:10:12"
															},
															"nativeSrc": "4471:190:12",
															"nodeType": "YulIf",
															"src": "4471:190:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4388:279:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4419:1:12",
														"nodeType": "YulTypedName",
														"src": "4419:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4422:1:12",
														"nodeType": "YulTypedName",
														"src": "4422:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4428:3:12",
														"nodeType": "YulTypedName",
														"src": "4428:3:12",
														"type": ""
													}
												],
												"src": "4388:279:12"
											},
											{
												"body": {
													"nativeSrc": "4801:168:12",
													"nodeType": "YulBlock",
													"src": "4801:168:12",
													"statements": [
														{
															"nativeSrc": "4811:26:12",
															"nodeType": "YulAssignment",
															"src": "4811:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4823:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4823:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4834:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4834:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4819:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4819:3:12"
																},
																"nativeSrc": "4819:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4819:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4811:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4811:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4853:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4853:9:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4868:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "4868:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4876:42:12",
																				"nodeType": "YulLiteral",
																				"src": "4876:42:12",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4864:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4864:3:12"
																		},
																		"nativeSrc": "4864:55:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4864:55:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4846:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4846:6:12"
																},
																"nativeSrc": "4846:74:12",
																"nodeType": "YulFunctionCall",
																"src": "4846:74:12"
															},
															"nativeSrc": "4846:74:12",
															"nodeType": "YulExpressionStatement",
															"src": "4846:74:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4940:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4940:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4951:2:12",
																				"nodeType": "YulLiteral",
																				"src": "4951:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4936:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4936:3:12"
																		},
																		"nativeSrc": "4936:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4936:18:12"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4956:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4956:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4929:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4929:6:12"
																},
																"nativeSrc": "4929:34:12",
																"nodeType": "YulFunctionCall",
																"src": "4929:34:12"
															},
															"nativeSrc": "4929:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "4929:34:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "4672:297:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4762:9:12",
														"nodeType": "YulTypedName",
														"src": "4762:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4773:6:12",
														"nodeType": "YulTypedName",
														"src": "4773:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4781:6:12",
														"nodeType": "YulTypedName",
														"src": "4781:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4792:4:12",
														"nodeType": "YulTypedName",
														"src": "4792:4:12",
														"type": ""
													}
												],
												"src": "4672:297:12"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061016c5760003560e01c806340c10f19116100cd578063a217fddf11610081578063d539139311610066578063d539139314610316578063d547741f1461033d578063dd62ed3e1461035057600080fd5b8063a217fddf146102fb578063a9059cbb1461030357600080fd5b806391d14854116100b257806391d14854146102a757806395d89b41146102e05780639dc29fac146102e857600080fd5b806340c10f191461026b57806370a082311461027e57600080fd5b806323b872dd116101245780632f2ff15d116101095780632f2ff15d14610234578063313ce5671461024957806336568abe1461025857600080fd5b806323b872dd146101fe578063248a9ca31461021157600080fd5b8063092c5b3b11610155578063092c5b3b146101ae578063095ea7b3146101e357806318160ddd146101f657600080fd5b806301ffc9a71461017157806306fdde0314610199575b600080fd5b61018461017f366004610b96565b610389565b60405190151581526020015b60405180910390f35b6101a1610422565b6040516101909190610bd8565b6101d57f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c57022335781565b604051908152602001610190565b6101846101f1366004610c43565b6104b4565b6002546101d5565b61018461020c366004610c6d565b6104cc565b6101d561021f366004610ca9565b60009081526005602052604090206001015490565b610247610242366004610cc2565b6104f0565b005b60405160128152602001610190565b610247610266366004610cc2565b61051b565b610247610279366004610c43565b61056c565b6101d561028c366004610cee565b6001600160a01b031660009081526020819052604090205490565b6101846102b5366004610cc2565b60009182526005602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6101a16105a0565b6102476102f6366004610c43565b6105af565b6101d5600081565b610184610311366004610c43565b6105e3565b6101d57f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b61024761034b366004610cc2565b6105f6565b6101d561035e366004610d09565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061041c57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60606003805461043190610d33565b80601f016020809104026020016040519081016040528092919081815260200182805461045d90610d33565b80156104aa5780601f1061047f576101008083540402835291602001916104aa565b820191906000526020600020905b81548152906001019060200180831161048d57829003601f168201915b5050505050905090565b6000336104c281858561061b565b5060019392505050565b6000336104da858285610628565b6104e58585856106bf565b506001949350505050565b60008281526005602052604090206001015461050b8161071e565b610515838361072b565b50505050565b6001600160a01b038116331461055d576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61056782826107d9565b505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a66105968161071e565b6105678383610860565b60606004805461043190610d33565b7f7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c5702233576105d98161071e565b610567838361089a565b60006105ef83836108d0565b9392505050565b6000828152600560205260409020600101546106118161071e565b61051583836107d9565b61056783838360016108de565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561051557818110156106b0576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610515848484840360006108de565b6001600160a01b0383166106e957604051634b637e8f60e11b8152600060048201526024016106a7565b6001600160a01b0382166107135760405163ec442f0560e01b8152600060048201526024016106a7565b6105678383836109e5565b6107288133610b28565b50565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff166107d15760008381526005602090815260408083206001600160a01b03861684529091529020805460ff191660011790556107893390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161041c565b50600061041c565b60008281526005602090815260408083206001600160a01b038516845290915281205460ff16156107d15760008381526005602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161041c565b6001600160a01b03821661088a5760405163ec442f0560e01b8152600060048201526024016106a7565b610896600083836109e5565b5050565b6001600160a01b0382166108c457604051634b637e8f60e11b8152600060048201526024016106a7565b610896826000836109e5565b6000336104c28185856106bf565b6001600160a01b038416610921576040517fe602df05000000000000000000000000000000000000000000000000000000008152600060048201526024016106a7565b6001600160a01b038316610964576040517f94280d62000000000000000000000000000000000000000000000000000000008152600060048201526024016106a7565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561051557826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516109d791815260200190565b60405180910390a350505050565b6001600160a01b038316610a10578060026000828254610a059190610d6d565b90915550610a9b9050565b6001600160a01b03831660009081526020819052604090205481811015610a7c576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b038516600482015260248101829052604481018390526064016106a7565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216610ab757600280548290039055610ad6565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610b1b91815260200190565b60405180910390a3505050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff16610896576040517fe2517d3f0000000000000000000000000000000000000000000000000000000081526001600160a01b0382166004820152602481018390526044016106a7565b600060208284031215610ba857600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146105ef57600080fd5b60006020808352835180602085015260005b81811015610c0657858101830151858201604001528201610bea565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610c3e57600080fd5b919050565b60008060408385031215610c5657600080fd5b610c5f83610c27565b946020939093013593505050565b600080600060608486031215610c8257600080fd5b610c8b84610c27565b9250610c9960208501610c27565b9150604084013590509250925092565b600060208284031215610cbb57600080fd5b5035919050565b60008060408385031215610cd557600080fd5b82359150610ce560208401610c27565b90509250929050565b600060208284031215610d0057600080fd5b6105ef82610c27565b60008060408385031215610d1c57600080fd5b610d2583610c27565b9150610ce560208401610c27565b600181811c90821680610d4757607f821691505b602082108103610d6757634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561041c57634e487b7160e01b600052601160045260246000fdfea2646970667358221220c0f0149c2a2ed33dc2b7eaa036e83a3abd5dd936e9e8a170a83b252561a6d86f64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x16C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x316 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x27E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0x124 JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x109 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1FE JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x211 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x92C5B3B GT PUSH2 0x155 JUMPI DUP1 PUSH4 0x92C5B3B EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x199 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x184 PUSH2 0x17F CALLDATASIZE PUSH1 0x4 PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x389 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A1 PUSH2 0x422 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x190 SWAP2 SWAP1 PUSH2 0xBD8 JUMP JUMPDEST PUSH2 0x1D5 PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x1F1 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D5 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x20C CALLDATASIZE PUSH1 0x4 PUSH2 0xC6D JUMP JUMPDEST PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xCA9 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x242 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x4F0 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x190 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x51B JUMP JUMPDEST PUSH2 0x247 PUSH2 0x279 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x28C CALLDATASIZE PUSH1 0x4 PUSH2 0xCEE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x2F6 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x5AF JUMP JUMPDEST PUSH2 0x1D5 PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x184 PUSH2 0x311 CALLDATASIZE PUSH1 0x4 PUSH2 0xC43 JUMP JUMPDEST PUSH2 0x5E3 JUMP JUMPDEST PUSH2 0x1D5 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x247 PUSH2 0x34B CALLDATASIZE PUSH1 0x4 PUSH2 0xCC2 JUMP JUMPDEST PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x1D5 PUSH2 0x35E CALLDATASIZE PUSH1 0x4 PUSH2 0xD09 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x41C JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0xD33 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x45D SWAP1 PUSH2 0xD33 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x47F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x48D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4C2 DUP2 DUP6 DUP6 PUSH2 0x61B JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4DA DUP6 DUP3 DUP6 PUSH2 0x628 JUMP JUMPDEST PUSH2 0x4E5 DUP6 DUP6 DUP6 PUSH2 0x6BF JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x50B DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x515 DUP4 DUP4 PUSH2 0x72B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x55D JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x567 DUP3 DUP3 PUSH2 0x7D9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x596 DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 PUSH2 0x860 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x431 SWAP1 PUSH2 0xD33 JUMP JUMPDEST PUSH32 0x7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357 PUSH2 0x5D9 DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 PUSH2 0x89A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EF DUP4 DUP4 PUSH2 0x8D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x611 DUP2 PUSH2 0x71E JUMP JUMPDEST PUSH2 0x515 DUP4 DUP4 PUSH2 0x7D9 JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x515 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x515 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x8DE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6E9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x713 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x567 DUP4 DUP4 DUP4 PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x728 DUP2 CALLER PUSH2 0xB28 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x789 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x41C JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D1 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x41C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x88A JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x896 PUSH1 0x0 DUP4 DUP4 PUSH2 0x9E5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8C4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH2 0x896 DUP3 PUSH1 0x0 DUP4 PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x4C2 DUP2 DUP6 DUP6 PUSH2 0x6BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x921 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x964 JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x515 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x9D7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA10 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA05 SWAP2 SWAP1 PUSH2 0xD6D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xA9B SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA7C JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAB7 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xB1B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x896 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x6A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC06 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBEA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xC3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC5F DUP4 PUSH2 0xC27 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC8B DUP5 PUSH2 0xC27 JUMP JUMPDEST SWAP3 POP PUSH2 0xC99 PUSH1 0x20 DUP6 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCBB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xCE5 PUSH1 0x20 DUP5 ADD PUSH2 0xC27 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5EF DUP3 PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD25 DUP4 PUSH2 0xC27 JUMP JUMPDEST SWAP2 POP PUSH2 0xCE5 PUSH1 0x20 DUP5 ADD PUSH2 0xC27 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xD47 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xD67 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x41C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 CREATE EQ SWAP13 0x2A 0x2E 0xD3 RETURNDATASIZE 0xC2 0xB7 0xEA LOG0 CALLDATASIZE 0xE8 GASPRICE GASPRICE 0xBD TSTORE 0xD9 CALLDATASIZE 0xE9 0xE8 LOG1 PUSH17 0xA83B252561A6D86F64736F6C6343000818 STOP CALLER ",
							"sourceMap": "174:1118:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;516:14:12;;509:22;491:41;;479:2;464:18;2565:202:0;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;226:70:11:-;;268:28;226:70;;;;;1242:25:12;;;1230:2;1215:18;226:70:11;1096:177:12;3979:186:3;;;;;;:::i;:::-;;:::i;2830:97::-;2908:12;;2830:97;;4757:244;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;4226:136;;;;;;:::i;:::-;;:::i;:::-;;2688:82:3;;;2761:2;2839:36:12;;2827:2;2812:18;2688:82:3;2697:184:12;5328:245:0;;;;;;:::i;:::-;;:::i;1011:107:11:-;;;;;;:::i;:::-;;:::i;2985:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;2854:136:0;;;;;;:::i;:::-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136;1962:93:3;;;:::i;890:115:11:-;;;;;;:::i;:::-;;:::i;2187:49:0:-;;2232:4;2187:49;;1124:166:11;;;;;;:::i;:::-;;:::i;302:62::-;;340:24;302:62;;4642:138:0;;;;;;:::i;:::-;;:::i;3532:140:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;2565:202:0;2650:4;2673:47;;;2688:32;2673:47;;:87;;-1:-1:-1;877:25:8;862:40;;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:6;4106:31:3;735:10:6;4122:7:3;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:3;;3979:186;-1:-1:-1;;;3979:186:3:o;4757:244::-;4844:4;735:10:6;4900:37:3;4916:4;735:10:6;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;:::-;;4226:136:::0;;;:::o;5328:245::-;-1:-1:-1;;;;;5421:34:0;;735:10:6;5421:34:0;5417:102;;5478:30;;;;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1011:107:11:-;340:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1094:17:11::1;1100:2;1104:6;1094:5;:17::i;1962:93:3:-:0;2009:13;2041:7;2034:14;;;;;:::i;890:115:11:-;268:28;2464:16:0;2475:4;2464:10;:16::i;:::-;979:19:11::1;985:4;991:6;979:5;:19::i;1124:166::-:0;1195:4;1218:26;1233:2;1237:6;1218:14;:26::i;:::-;1211:33;1124:166;-1:-1:-1;;;1124:166:11:o;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;8707:128:3:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:3;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;;;;-1:-1:-1;;;;;4004:55:12;;10668:60:3;;;3986:74:12;4076:18;;;4069:34;;;4119:18;;;4112:34;;;3959:18;;10668:60:3;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:3;;5525:1;5498:30;;;4303:74:12;4276:18;;5498:30:3;4157:226:12;5453:86:3;-1:-1:-1;;;;;5552:16:3;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:3;;5620:1;5591:32;;;4303:74:12;4276:18;;5591:32:3;4157:226:12;5548:86:3;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;3199:103:0:-;3265:30;3276:4;735:10:6;3265::0;:30::i;:::-;3199:103;:::o;6179:316::-;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:6;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6732:317;6810:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6826:217;;;6900:5;6868:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:6;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;7439:208:3;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;4303:74:12;4276:18;;7553:32:3;4157:226:12;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;7965:206::-;-1:-1:-1;;;;;8035:21:3;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:3;;8106:1;8079:30;;;4303:74:12;4276:18;;8079:30:3;4157:226:12;8031:89:3;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;3296:178::-;3365:4;735:10:6;3419:27:3;735:10:6;3436:2:3;3440:5;3419:9;:27::i;9682:432::-;-1:-1:-1;;;;;9794:19:3;;9790:89;;9836:32;;;;;9865:1;9836:32;;;4303:74:12;4276:18;;9836:32:3;4157:226:12;9790:89:3;-1:-1:-1;;;;;9892:21:3;;9888:90;;9936:31;;;;;9964:1;9936:31;;;4303:74:12;4276:18;;9936:31:3;4157:226:12;9888:90:3;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;1242:25:12;;1230:2;1215:18;;1096:177;10066:31:3;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;;;;-1:-1:-1;;;;;4004:55:12;;6367:50:3;;;3986:74:12;4076:18;;;4069:34;;;4119:18;;;4112:34;;;3959:18;;6367:50:3;3784:368:12;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;1242::12;;1230:2;1215:18;;1096:177;7064:25:3;;;;;;;;5989:1107;;;:::o;3432:197:0:-;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;3515:108;;3565:47;;;;;-1:-1:-1;;;;;4864:55:12;;3565:47:0;;;4846:74:12;4936:18;;;4929:34;;;4819:18;;3565:47:0;4672:297:12;14:332;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:548;655:4;684:2;713;702:9;695:21;745:6;739:13;788:6;783:2;772:9;768:18;761:34;813:1;823:140;837:6;834:1;831:13;823:140;;;932:14;;;928:23;;922:30;898:17;;;917:2;894:26;887:66;852:10;;823:140;;;827:3;1012:1;1007:2;998:6;987:9;983:22;979:31;972:42;1082:2;1075;1071:7;1066:2;1058:6;1054:15;1050:29;1039:9;1035:45;1031:54;1023:62;;;;543:548;;;;:::o;1278:196::-;1346:20;;-1:-1:-1;;;;;1395:54:12;;1385:65;;1375:93;;1464:1;1461;1454:12;1375:93;1278:196;;;:::o;1479:254::-;1547:6;1555;1608:2;1596:9;1587:7;1583:23;1579:32;1576:52;;;1624:1;1621;1614:12;1576:52;1647:29;1666:9;1647:29;:::i;:::-;1637:39;1723:2;1708:18;;;;1695:32;;-1:-1:-1;;;1479:254:12:o;1920:328::-;1997:6;2005;2013;2066:2;2054:9;2045:7;2041:23;2037:32;2034:52;;;2082:1;2079;2072:12;2034:52;2105:29;2124:9;2105:29;:::i;:::-;2095:39;;2153:38;2187:2;2176:9;2172:18;2153:38;:::i;:::-;2143:48;;2238:2;2227:9;2223:18;2210:32;2200:42;;1920:328;;;;;:::o;2253:180::-;2312:6;2365:2;2353:9;2344:7;2340:23;2336:32;2333:52;;;2381:1;2378;2371:12;2333:52;-1:-1:-1;2404:23:12;;2253:180;-1:-1:-1;2253:180:12:o;2438:254::-;2506:6;2514;2567:2;2555:9;2546:7;2542:23;2538:32;2535:52;;;2583:1;2580;2573:12;2535:52;2619:9;2606:23;2596:33;;2648:38;2682:2;2671:9;2667:18;2648:38;:::i;:::-;2638:48;;2438:254;;;;;:::o;2886:186::-;2945:6;2998:2;2986:9;2977:7;2973:23;2969:32;2966:52;;;3014:1;3011;3004:12;2966:52;3037:29;3056:9;3037:29;:::i;3077:260::-;3145:6;3153;3206:2;3194:9;3185:7;3181:23;3177:32;3174:52;;;3222:1;3219;3212:12;3174:52;3245:29;3264:9;3245:29;:::i;:::-;3235:39;;3293:38;3327:2;3316:9;3312:18;3293:38;:::i;3342:437::-;3421:1;3417:12;;;;3464;;;3485:61;;3539:4;3531:6;3527:17;3517:27;;3485:61;3592:2;3584:6;3581:14;3561:18;3558:38;3555:218;;-1:-1:-1;;;3626:1:12;3619:88;3730:4;3727:1;3720:15;3758:4;3755:1;3748:15;3555:218;;3342:437;;;:::o;4388:279::-;4453:9;;;4474:10;;;4471:190;;;-1:-1:-1;;;4514:1:12;4507:88;4618:4;4615:1;4608:15;4646:4;4643:1;4636:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "704800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"CONTROLLER_ROLE()": "241",
								"DEFAULT_ADMIN_ROLE()": "240",
								"MINTER_ROLE()": "239",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24769",
								"balanceOf(address)": "2608",
								"burn(address,uint256)": "infinite",
								"decimals()": "244",
								"getRoleAdmin(bytes32)": "2512",
								"grantRole(bytes32,address)": "33573",
								"hasRole(bytes32,address)": "2687",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"renounceRole(bytes32,address)": "29076",
								"revokeRole(bytes32,address)": "33531",
								"supportsInterface(bytes4)": "416",
								"symbol()": "infinite",
								"totalSupply()": "2382",
								"transfer(address,uint256)": "51319",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 174,
									"end": 1292,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 884,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 884,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 884,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 884,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "D"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "5472616E636865546F6B656E41"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "98"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "545441"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 3,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 3,
									"value": "5"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 3,
									"value": "7"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 446,
									"end": 488,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "47574C311CD6C7F8B07CF18D776A25719C61EE22"
								},
								{
									"begin": 446,
									"end": 488,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 446,
									"end": 488,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 446,
									"end": 488,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 425,
									"end": 443,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 659,
									"end": 673,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2761,
									"end": 2763,
									"name": "PUSH",
									"source": 3,
									"value": "12"
								},
								{
									"begin": 659,
									"end": 661,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A"
								},
								{
									"begin": 659,
									"end": 673,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 659,
									"end": 673,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 659,
									"end": 673,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 659,
									"end": 673,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 647,
									"end": 673,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 673,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 647,
									"end": 656,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "F4240"
								},
								{
									"begin": 647,
									"end": 673,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 647,
									"end": 673,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 647,
									"end": 673,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 647,
									"end": 673,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 623,
									"end": 673,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 702,
									"end": 744,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 2232,
									"end": 2236,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 743,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 702,
									"end": 712,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 702,
									"end": 744,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 702,
									"end": 744,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 702,
									"end": 744,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 754,
									"end": 793,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 268,
									"end": 296,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357"
								},
								{
									"begin": 782,
									"end": 792,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 754,
									"end": 764,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 754,
									"end": 793,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 754,
									"end": 793,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 754,
									"end": 793,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 803,
									"end": 834,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 340,
									"end": 364,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 827,
									"end": 833,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 803,
									"end": 813,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 803,
									"end": 834,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 803,
									"end": 834,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 803,
									"end": 834,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 845,
									"end": 877,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 851,
									"end": 861,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 863,
									"end": 876,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 850,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 845,
									"end": 877,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 877,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 845,
									"end": 877,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 415,
									"end": 884,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 415,
									"end": 884,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 415,
									"end": 884,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6256,
									"end": 6260,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2960,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2966,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2954,
									"end": 2983,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6321,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6327,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6344,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6347,
									"end": 6351,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6315,
									"end": 6351,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 6397,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6388,
									"end": 6395,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6382,
									"end": 6386,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6370,
									"end": 6410,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6431,
									"end": 6435,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6424,
									"end": 6435,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6473,
									"end": 6478,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 6272,
									"end": 6489,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6179,
									"end": 6495,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4554,
									"end": 4605,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4527,
									"end": 4545,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 4527,
									"end": 4545,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 3,
									"value": "31"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 3,
									"value": "34"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 3,
									"value": "35"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "41"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "39"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 4966,
									"end": 4998,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 4966,
									"end": 4998,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 3,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 4948,
									"end": 4999,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5015,
									"end": 5033,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5008,
									"end": 5042,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 5008,
									"end": 5042,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5008,
									"end": 5042,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5058,
									"end": 5076,
									"name": "PUSH",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 5058,
									"end": 5076,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5058,
									"end": 5076,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5051,
									"end": 5085,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 5051,
									"end": 5085,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5051,
									"end": 5085,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4921,
									"end": 4939,
									"name": "PUSH",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 4921,
									"end": 4939,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "32"
								},
								{
									"begin": 4746,
									"end": 5091,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 3,
									"value": "43"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 3,
									"value": "42"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "46"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 3,
									"value": "47"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 5242,
									"end": 5267,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 5242,
									"end": 5267,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 5230,
									"end": 5232,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 5215,
									"end": 5233,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 5215,
									"end": 5233,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 5096,
									"end": 5273,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 3,
									"value": "48"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 3
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 12,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 12,
									"value": "61"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 819,
									"end": 824,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 816,
									"end": 817,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 825,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 863,
									"end": 867,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 860,
									"end": 861,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 850,
									"end": 868,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": 933,
									"end": 935,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 921,
									"end": 931,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 917,
									"end": 936,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 914,
									"end": 915,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 910,
									"end": 937,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 904,
									"end": 908,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 900,
									"end": 938,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 969,
									"end": 973,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 957,
									"end": 967,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 954,
									"end": 974,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 951,
									"end": 998,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 951,
									"end": 998,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 992,
									"end": 996,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 951,
									"end": 998,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 951,
									"end": 998,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1047,
									"end": 1049,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1042,
									"end": 1045,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1038,
									"end": 1050,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1035,
									"end": 1036,
									"name": "PUSH",
									"source": 12,
									"value": "5"
								},
								{
									"begin": 1031,
									"end": 1051,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1025,
									"end": 1029,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1021,
									"end": 1052,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1011,
									"end": 1052,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1120,
									"end": 1122,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1110,
									"end": 1123,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1165,
									"end": 1182,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1146,
									"end": 1147,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1135,
									"end": 1148,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1102,
									"end": 1184,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1106,
									"end": 1109,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 748,
									"end": 1194,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1200,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 657,
									"end": 1200,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "tag",
									"source": 12,
									"value": "6"
								},
								{
									"begin": 1376,
									"end": 2721,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1496,
									"end": 1506,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1518,
									"end": 1548,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1515,
									"end": 1571,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 1551,
									"end": 1569,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 1551,
									"end": 1569,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1656,
									"end": 1667,
									"name": "SLOAD",
									"source": 12
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 1630,
									"end": 1668,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 1630,
									"end": 1668,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1624,
									"end": 1628,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 1580,
									"end": 1677,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "tag",
									"source": 12,
									"value": "74"
								},
								{
									"begin": 1580,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1732,
									"end": 1736,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 1789,
									"end": 1791,
									"name": "PUSH",
									"source": 12,
									"value": "1F"
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1778,
									"end": 1792,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 1806,
									"end": 1807,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2508,
									"end": 2509,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2577,
									"end": 2596,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2571,
									"end": 2597,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "tag",
									"source": 12,
									"value": "78"
								},
								{
									"begin": 2522,
									"end": 2611,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1333,
									"end": 1334,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1329,
									"end": 1340,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1325,
									"end": 1349,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 1321,
									"end": 1350,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 1311,
									"end": 1351,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1357,
									"end": 1358,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1353,
									"end": 1364,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 1308,
									"end": 1365,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2624,
									"end": 2705,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1771,
									"end": 2715,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 1801,
									"end": 2464,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 1837,
									"end": 1857,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1969,
									"end": 1976,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1966,
									"end": 1967,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 1977,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 2058,
									"end": 2077,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2052,
									"end": 2078,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2079,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2150,
									"end": 2177,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 2118,
									"end": 2119,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2106,
									"end": 2120,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1985,
									"end": 2004,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 1955,
									"end": 2191,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1959,
									"end": 1962,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2219,
									"end": 2225,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2210,
									"end": 2217,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2207,
									"end": 2226,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 2280,
									"end": 2299,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2274,
									"end": 2300,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2363,
									"end": 2364,
									"name": "PUSH",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2359,
									"end": 2373,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2375,
									"end": 2378,
									"name": "PUSH",
									"source": 12,
									"value": "F8"
								},
								{
									"begin": 2355,
									"end": 2379,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2351,
									"end": 2388,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 2347,
									"end": 2389,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 2332,
									"end": 2390,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2317,
									"end": 2391,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "tag",
									"source": 12,
									"value": "84"
								},
								{
									"begin": 2204,
									"end": 2405,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2451,
									"end": 2452,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2435,
									"end": 2449,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2431,
									"end": 2453,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2418,
									"end": 2454,
									"name": "SSTORE",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1376,
									"end": 2721,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2726,
									"end": 2853,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 2726,
									"end": 2853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2787,
									"end": 2797,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B71"
								},
								{
									"begin": 2782,
									"end": 2785,
									"name": "PUSH",
									"source": 12,
									"value": "E0"
								},
								{
									"begin": 2778,
									"end": 2798,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 2775,
									"end": 2776,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2768,
									"end": 2799,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2818,
									"end": 2822,
									"name": "PUSH",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 2815,
									"end": 2816,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 2808,
									"end": 2823,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2842,
									"end": 2846,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 2839,
									"end": 2840,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2832,
									"end": 2847,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2947,
									"end": 2948,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 2984,
									"end": 2989,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2947,
									"end": 2948,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "tag",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3019,
									"end": 3026,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3009,
									"end": 3017,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3006,
									"end": 3027,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3078,
									"end": 3082,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3074,
									"end": 3075,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3070,
									"end": 3076,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3066,
									"end": 3083,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3060,
									"end": 3064,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3057,
									"end": 3084,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3054,
									"end": 3107,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3054,
									"end": 3107,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3054,
									"end": 3107,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3087,
									"end": 3105,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "tag",
									"source": 12,
									"value": "91"
								},
								{
									"begin": 3087,
									"end": 3105,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3137,
									"end": 3144,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3127,
									"end": 3135,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3123,
									"end": 3145,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3157,
									"end": 3173,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "tag",
									"source": 12,
									"value": "92"
								},
								{
									"begin": 3120,
									"end": 3175,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 3236,
									"end": 3258,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 3196,
									"end": 3211,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "87"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "tag",
									"source": 12,
									"value": "89"
								},
								{
									"begin": 2998,
									"end": 3268,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 3274,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2858,
									"end": 3274,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3328,
									"end": 3333,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3358,
									"end": 3366,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3399,
									"end": 3400,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3413,
									"end": 3418,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3413,
									"end": 3418,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "tag",
									"source": 12,
									"value": "94"
								},
								{
									"begin": 3348,
									"end": 3428,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3447,
									"end": 3451,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3498,
									"end": 3503,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3498,
									"end": 3503,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "tag",
									"source": 12,
									"value": "95"
								},
								{
									"begin": 3437,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3529,
									"end": 3533,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3547,
									"end": 3548,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3615,
									"end": 3616,
									"name": "PUSH",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "tag",
									"source": 12,
									"value": "97"
								},
								{
									"begin": 3542,
									"end": 3601,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3572,
									"end": 3573,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3563,
									"end": 3573,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3573,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3586,
									"end": 3591,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3586,
									"end": 3591,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3586,
									"end": 3591,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "tag",
									"source": 12,
									"value": "98"
								},
								{
									"begin": 3610,
									"end": 3740,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3647,
									"end": 3650,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 3637,
									"end": 3645,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3634,
									"end": 3651,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3674,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3631,
									"end": 3674,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3631,
									"end": 3674,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 3654,
									"end": 3672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "tag",
									"source": 12,
									"value": "100"
								},
								{
									"begin": 3654,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3710,
									"end": 3711,
									"name": "PUSH",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 3696,
									"end": 3712,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3696,
									"end": 3712,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 3725,
									"end": 3730,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3725,
									"end": 3730,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "tag",
									"source": 12,
									"value": "96"
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3522,
									"end": 3740,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3824,
									"end": 3826,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3814,
									"end": 3822,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3811,
									"end": 3827,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3805,
									"end": 3808,
									"name": "PUSH",
									"source": 12,
									"value": "133"
								},
								{
									"begin": 3799,
									"end": 3803,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3796,
									"end": 3809,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3792,
									"end": 3828,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3786,
									"end": 3788,
									"name": "PUSH",
									"source": 12,
									"value": "4E"
								},
								{
									"begin": 3776,
									"end": 3784,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3773,
									"end": 3789,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3768,
									"end": 3770,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 3762,
									"end": 3766,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3759,
									"end": 3771,
									"name": "LT",
									"source": 12
								},
								{
									"begin": 3755,
									"end": 3790,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 3752,
									"end": 3829,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3861,
									"end": 3880,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3861,
									"end": 3880,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3861,
									"end": 3880,
									"name": "EXP",
									"source": 12
								},
								{
									"begin": 3893,
									"end": 3898,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 3893,
									"end": 3898,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "tag",
									"source": 12,
									"value": "101"
								},
								{
									"begin": 3749,
									"end": 3908,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3965,
									"end": 3973,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3959,
									"end": 3963,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 3940,
									"end": 3974,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "tag",
									"source": 12,
									"value": "102"
								},
								{
									"begin": 3940,
									"end": 3974,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4010,
									"end": 4016,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4006,
									"end": 4007,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4002,
									"end": 4008,
									"name": "NOT",
									"source": 12
								},
								{
									"begin": 3998,
									"end": 4017,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 3989,
									"end": 3996,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3986,
									"end": 4018,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 3983,
									"end": 4041,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 3983,
									"end": 4041,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 3983,
									"end": 4041,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4021,
									"end": 4039,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "tag",
									"source": 12,
									"value": "104"
								},
								{
									"begin": 4021,
									"end": 4039,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4059,
									"end": 4079,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4059,
									"end": 4079,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 3279,
									"end": 4085,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3279,
									"end": 4085,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4090,
									"end": 4230,
									"name": "tag",
									"source": 12,
									"value": "12"
								},
								{
									"begin": 4090,
									"end": 4230,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4148,
									"end": 4153,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4218,
									"end": 4222,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 4208,
									"end": 4216,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4204,
									"end": 4223,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4198,
									"end": 4202,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 4177,
									"end": 4224,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "tag",
									"source": 12,
									"value": "106"
								},
								{
									"begin": 4177,
									"end": 4224,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4168,
									"end": 4224,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 4090,
									"end": 4230,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4090,
									"end": 4230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4235,
									"end": 4403,
									"name": "tag",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 4235,
									"end": 4403,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4317,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4317,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4308,
									"end": 4317,
									"name": "MUL",
									"source": 12
								},
								{
									"begin": 4339,
									"end": 4348,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4339,
									"end": 4348,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4356,
									"end": 4371,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4356,
									"end": 4371,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4356,
									"end": 4371,
									"name": "DIV",
									"source": 12
								},
								{
									"begin": 4350,
									"end": 4372,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 4350,
									"end": 4372,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 4336,
									"end": 4373,
									"name": "OR",
									"source": 12
								},
								{
									"begin": 4326,
									"end": 4397,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4326,
									"end": 4397,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4377,
									"end": 4395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4377,
									"end": 4395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4616,
									"end": 4741,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 4616,
									"end": 4741,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4681,
									"end": 4690,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4681,
									"end": 4690,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4681,
									"end": 4690,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4702,
									"end": 4712,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4702,
									"end": 4712,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 4702,
									"end": 4712,
									"name": "GT",
									"source": 12
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4715,
									"end": 4733,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 4715,
									"end": 4733,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 4715,
									"end": 4733,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 5096,
									"end": 5273,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 5096,
									"end": 5273,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 174,
									"end": 1292,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0f0149c2a2ed33dc2b7eaa036e83a3abd5dd936e9e8a170a83b252561a6d86f64736f6c63430008180033",
									".code": [
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "DD62ED3E"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "95D89B41"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "9DC29FAC"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "70A08231"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "92C5B3B"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "92C5B3B"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "95EA7B3"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "18160DDD"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "6FDDE03"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 174,
											"end": 1292,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 516,
											"end": 530,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 516,
											"end": 530,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 509,
											"end": 531,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 491,
											"end": 532,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 491,
											"end": 532,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 479,
											"end": 481,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 226,
											"end": 296,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 226,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 268,
											"end": 296,
											"name": "PUSH",
											"source": 11,
											"value": "7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357"
										},
										{
											"begin": 226,
											"end": 296,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 226,
											"end": 296,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 226,
											"end": 296,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 226,
											"end": 296,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 296,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 226,
											"end": 296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 1096,
											"end": 1273,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "46"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3810,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3930,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 2839,
											"end": 2875,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2839,
											"end": 2875,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 2697,
											"end": 2881,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1011,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1011,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "79"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 3,
											"value": "78"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2854,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2990,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 890,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "tag",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 890,
											"end": 1005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2232,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2187,
											"end": 2236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1124,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1124,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 302,
											"end": 364,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 302,
											"end": 364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 302,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 340,
											"end": 364,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 302,
											"end": 364,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 302,
											"end": 364,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4642,
											"end": 4780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "107"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 3,
											"value": "106"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2650,
											"end": 2654,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2688,
											"end": 2720,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2720,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2673,
											"end": 2760,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2724,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2666,
											"end": 2760,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2565,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "117"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "119"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "120"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 3,
											"value": "129"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 3,
											"value": "131"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4341,
											"end": 4345,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4354,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 4330,
											"end": 4355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4330,
											"end": 4355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4226,
											"end": 4362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 5421,
											"end": 5455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5478,
											"end": 5508,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 5417,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5541,
											"end": 5545,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5547,
											"end": 5565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 5529,
											"end": 5566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5529,
											"end": 5566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5328,
											"end": 5573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1011,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 340,
											"end": 364,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1111,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1100,
											"end": 1102,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1104,
											"end": 1110,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1099,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1094,
											"end": 1111,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 3,
											"value": "87"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "115"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "116"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 890,
											"end": 1005,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 268,
											"end": 296,
											"name": "PUSH",
											"source": 11,
											"value": "7B765E0E932D348852A6F810BFA1AB891E259123F02DB8CDCDE614C570223357"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 979,
											"end": 998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 985,
											"end": 989,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 991,
											"end": 997,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 979,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 979,
											"end": 998,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1195,
											"end": 1199,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1218,
											"end": 1244,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1233,
											"end": 1235,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1237,
											"end": 1243,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 1218,
											"end": 1244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1218,
											"end": 1244,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 1218,
											"end": 1244,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1211,
											"end": 1244,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1124,
											"end": 1290,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1124,
											"end": 1290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4642,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3875,
											"end": 3882,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3907,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2475,
											"end": 2479,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2464,
											"end": 2480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2464,
											"end": 2480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4773,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 4759,
											"end": 4763,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4765,
											"end": 4772,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4747,
											"end": 4758,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4747,
											"end": 4773,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 3,
											"value": "125"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 3,
											"value": "130"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4059,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4004,
											"end": 4059,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4060,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4103,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4137,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4119,
											"end": 4137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4146,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 3,
											"value": "182"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4157,
											"end": 4383,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 3,
											"value": "187"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4157,
											"end": 4383,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 3,
											"value": "190"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3276,
											"end": 3280,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3265,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 3265,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3199,
											"end": 3302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 6179,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6256,
											"end": 6260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6321,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6315,
											"end": 6351,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6397,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6388,
											"end": 6395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6382,
											"end": 6386,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6370,
											"end": 6410,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6431,
											"end": 6435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6424,
											"end": 6435,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6272,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6473,
											"end": 6478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6466,
											"end": 6478,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 6732,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 6826,
											"end": 7043,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6874,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6905,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6868,
											"end": 6880,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6905,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6924,
											"end": 6964,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6985,
											"end": 6989,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "tag",
											"source": 3,
											"value": "151"
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7509,
											"end": 7530,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "EC442F05"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7582,
											"end": 7583,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7553,
											"end": 7585,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4157,
											"end": 4383,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "tag",
											"source": 3,
											"value": "209"
										},
										{
											"begin": 7505,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 7621,
											"end": 7622,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7625,
											"end": 7632,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7634,
											"end": 7639,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 7605,
											"end": 7640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "tag",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 7605,
											"end": 7640,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7439,
											"end": 7647,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "tag",
											"source": 3,
											"value": "164"
										},
										{
											"begin": 7965,
											"end": 8171,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8035,
											"end": 8056,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4B637E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8106,
											"end": 8107,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8079,
											"end": 8109,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4157,
											"end": 4383,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 8031,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "211"
										},
										{
											"begin": 8137,
											"end": 8144,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8154,
											"end": 8155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8163,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 8129,
											"end": 8136,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 8129,
											"end": 8164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 3,
											"value": "167"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "124"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "132"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 3,
											"value": "178"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4157,
											"end": 4383,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4303,
											"end": 4377,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 4157,
											"end": 4383,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "139"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1096,
											"end": 1273,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 3,
											"value": "193"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4004,
											"end": 4059,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4004,
											"end": 4059,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3986,
											"end": 4060,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4076,
											"end": 4094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4069,
											"end": 4103,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4137,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4119,
											"end": 4137,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4119,
											"end": 4137,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4146,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4112,
											"end": 4146,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "PUSH",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 3959,
											"end": 3977,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "183"
										},
										{
											"begin": 3784,
											"end": 4152,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 3,
											"value": "231"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1242,
											"end": 1267,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1230,
											"end": 1232,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1215,
											"end": 1233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1096,
											"end": 1273,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 3432,
											"end": 3629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2931,
											"end": 2935,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2960,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2966,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2954,
											"end": 2983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3515,
											"end": 3623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4864,
											"end": 4919,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4864,
											"end": 4919,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4846,
											"end": 4920,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4936,
											"end": 4954,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4929,
											"end": 4963,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4929,
											"end": 4963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4929,
											"end": 4963,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "PUSH",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 4819,
											"end": 4837,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 4672,
											"end": 4969,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14,
											"end": 346,
											"name": "tag",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 14,
											"end": 346,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 180,
											"end": 189,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 230,
											"end": 296,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 219,
											"end": 297,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 212,
											"end": 217,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 209,
											"end": 298,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 199,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 199,
											"end": 316,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 312,
											"end": 313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 309,
											"end": 310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 302,
											"end": 314,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 543,
											"end": 1091,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 543,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 655,
											"end": 659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 686,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 713,
											"end": 715,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 702,
											"end": 711,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 695,
											"end": 716,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 745,
											"end": 751,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 739,
											"end": 752,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 788,
											"end": 794,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 783,
											"end": 785,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 772,
											"end": 781,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 768,
											"end": 786,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 761,
											"end": 795,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 813,
											"end": 814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 823,
											"end": 963,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 823,
											"end": 963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 837,
											"end": 843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 834,
											"end": 835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 831,
											"end": 844,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 823,
											"end": 963,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 823,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 823,
											"end": 963,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 932,
											"end": 946,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 932,
											"end": 946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 932,
											"end": 946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 928,
											"end": 951,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 928,
											"end": 951,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 922,
											"end": 952,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 898,
											"end": 915,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 898,
											"end": 915,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 898,
											"end": 915,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 917,
											"end": 919,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 894,
											"end": 920,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 887,
											"end": 953,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 852,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 852,
											"end": 862,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 823,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 823,
											"end": 963,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 823,
											"end": 963,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 823,
											"end": 963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 827,
											"end": 830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1012,
											"end": 1013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1009,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 998,
											"end": 1004,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 987,
											"end": 996,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 983,
											"end": 1005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 979,
											"end": 1010,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 972,
											"end": 1014,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1082,
											"end": 1084,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1075,
											"end": 1077,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1071,
											"end": 1078,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 1058,
											"end": 1064,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1054,
											"end": 1069,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1079,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1039,
											"end": 1048,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1035,
											"end": 1080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1031,
											"end": 1085,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1023,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 1091,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 543,
											"end": 1091,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 543,
											"end": 1091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 1091,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 543,
											"end": 1091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1278,
											"end": 1474,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1278,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1395,
											"end": 1449,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1395,
											"end": 1449,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1450,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1385,
											"end": 1450,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1375,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 1375,
											"end": 1468,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1462,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1466,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1375,
											"end": 1468,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 1375,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1278,
											"end": 1474,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1278,
											"end": 1474,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1278,
											"end": 1474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1278,
											"end": 1474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1479,
											"end": 1733,
											"name": "tag",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 1479,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1547,
											"end": 1553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1561,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1608,
											"end": 1610,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1587,
											"end": 1594,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1583,
											"end": 1606,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1579,
											"end": 1611,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1614,
											"end": 1626,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 1576,
											"end": 1628,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1666,
											"end": 1675,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 1647,
											"end": 1676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 1647,
											"end": 1676,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1637,
											"end": 1676,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1723,
											"end": 1725,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1708,
											"end": 1726,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1727,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1695,
											"end": 1727,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1479,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2248,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 1920,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1997,
											"end": 2003,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2011,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2013,
											"end": 2019,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2068,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2054,
											"end": 2063,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2045,
											"end": 2052,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2041,
											"end": 2064,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2086,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2086,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2082,
											"end": 2083,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2080,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2072,
											"end": 2084,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2034,
											"end": 2086,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 2034,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2124,
											"end": 2133,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2134,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2105,
											"end": 2134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2105,
											"end": 2134,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 2105,
											"end": 2134,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2095,
											"end": 2134,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2095,
											"end": 2134,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2187,
											"end": 2189,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2176,
											"end": 2185,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2172,
											"end": 2190,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2153,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2153,
											"end": 2191,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 2153,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2143,
											"end": 2191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2238,
											"end": 2240,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2227,
											"end": 2236,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2223,
											"end": 2241,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2210,
											"end": 2242,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2242,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2200,
											"end": 2242,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2248,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2248,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2248,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 2248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2253,
											"end": 2433,
											"name": "tag",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 2253,
											"end": 2433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2312,
											"end": 2318,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2365,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2344,
											"end": 2351,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2340,
											"end": 2363,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2336,
											"end": 2368,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2385,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2333,
											"end": 2385,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2381,
											"end": 2382,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2371,
											"end": 2383,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2385,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 2333,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2404,
											"end": 2427,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2253,
											"end": 2433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2253,
											"end": 2433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2438,
											"end": 2692,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 2438,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2506,
											"end": 2512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2514,
											"end": 2520,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2567,
											"end": 2569,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2555,
											"end": 2564,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2553,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2542,
											"end": 2565,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2538,
											"end": 2570,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2587,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2587,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2535,
											"end": 2587,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2583,
											"end": 2584,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2581,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2585,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2535,
											"end": 2587,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 2535,
											"end": 2587,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2628,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2606,
											"end": 2629,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2596,
											"end": 2629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2648,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2648,
											"end": 2686,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 2648,
											"end": 2686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2648,
											"end": 2686,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 2648,
											"end": 2686,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2686,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2638,
											"end": 2686,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2438,
											"end": 2692,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2438,
											"end": 2692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2438,
											"end": 2692,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2438,
											"end": 2692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2438,
											"end": 2692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2438,
											"end": 2692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2886,
											"end": 3072,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 2886,
											"end": 3072,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2951,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2998,
											"end": 3000,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2986,
											"end": 2995,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 2984,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2973,
											"end": 2996,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2969,
											"end": 3001,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3018,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2966,
											"end": 3018,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3011,
											"end": 3012,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3016,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2966,
											"end": 3018,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 2966,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3037,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3056,
											"end": 3065,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3037,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3037,
											"end": 3066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 3077,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3145,
											"end": 3151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3159,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3206,
											"end": 3208,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3194,
											"end": 3203,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3185,
											"end": 3192,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3181,
											"end": 3204,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3177,
											"end": 3209,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3226,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3174,
											"end": 3226,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3222,
											"end": 3223,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3220,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3224,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3174,
											"end": 3226,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 3174,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3245,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3264,
											"end": 3273,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3245,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3245,
											"end": 3274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3245,
											"end": 3274,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 3245,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3235,
											"end": 3274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 3327,
											"end": 3329,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3316,
											"end": 3325,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3312,
											"end": 3330,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3293,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 3293,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3779,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 3342,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3422,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3464,
											"end": 3476,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3485,
											"end": 3546,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 3485,
											"end": 3546,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3543,
											"name": "PUSH",
											"source": 12,
											"value": "7F"
										},
										{
											"begin": 3531,
											"end": 3537,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3527,
											"end": 3544,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3544,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3544,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3485,
											"end": 3546,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 3485,
											"end": 3546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3592,
											"end": 3594,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3584,
											"end": 3590,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3581,
											"end": 3595,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 3561,
											"end": 3579,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3558,
											"end": 3596,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3626,
											"end": 3627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3707,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3730,
											"end": 3734,
											"name": "PUSH",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 3727,
											"end": 3728,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 3720,
											"end": 3735,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3758,
											"end": 3762,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 3755,
											"end": 3756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3748,
											"end": 3763,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3773,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3779,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3779,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3779,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3342,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4388,
											"end": 4667,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 4388,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4484,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4474,
											"end": 4484,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4661,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 4471,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 4471,
											"end": 4661,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4507,
											"end": 4595,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4622,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 4615,
											"end": 4616,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 4608,
											"end": 4623,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4646,
											"end": 4650,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 4643,
											"end": 4644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4636,
											"end": 4651,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Pausable.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/CMBS20Demo.sol",
								"contracts/ERC3643Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"CONTROLLER_ROLE()": "092c5b3b",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CONTROLLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC3643Token.sol\":\"ERC3643Token\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://928cf2f0042c606f3dcb21bd8a272573f462a215cd65285d2d6b407f31e9bd67\",\"dweb:/ipfs/QmWGxjckno6sfjHPX5naPnsfsyisgy4PJDf46eLw9umfpx\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"contracts/ERC3643Token.sol\":{\"keccak256\":\"0x074611c4cf4aa06c34659c7ef1df67fb7b6a5145982209df0b8fd5e4544e55f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9dd6b594146c9ef5bff20e37df1ac18d8323476af0edf830f25ad7c585093860\",\"dweb:/ipfs/QmNPmYHtBcyDk8DXTxgriqkjH2NxwvGzDq2qTh5GmqgdnQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 538,
								"contract": "contracts/ERC3643Token.sol:ERC3643Token",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 544,
								"contract": "contracts/ERC3643Token.sol:ERC3643Token",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 546,
								"contract": "contracts/ERC3643Token.sol:ERC3643Token",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 548,
								"contract": "contracts/ERC3643Token.sol:ERC3643Token",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 550,
								"contract": "contracts/ERC3643Token.sol:ERC3643Token",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 26,
								"contract": "contracts/ERC3643Token.sol:ERC3643Token",
								"label": "_roles",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)21_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)21_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)21_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(RoleData)21_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 18,
										"contract": "contracts/ERC3643Token.sol:ERC3643Token",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 20,
										"contract": "contracts/ERC3643Token.sol:ERC3643Token",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1296
						],
						"IAccessControl": [
							378
						]
					},
					"id": 296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 379,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 378,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1165,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 296,
							"sourceUnit": 1297,
							"src": "233:57:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1296,
										"src": "241:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 9,
										"name": "Context",
										"nameLocations": [
											"1988:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1988:7:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:7:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "IAccessControl",
										"nameLocations": [
											"1997:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 378,
										"src": "1997:14:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:14:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ERC165",
										"nameLocations": [
											"2013:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1296,
										"src": "2013:6:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2013:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 8,
								"nodeType": "StructuredDocumentation",
								"src": "292:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 295,
							"linearizedBaseContracts": [
								295,
								1296,
								1308,
								378,
								1164
							],
							"name": "AccessControl",
							"nameLocation": "1971:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 21,
									"members": [
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2085:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2052:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 17,
												"keyName": "account",
												"keyNameLocation": "2068:7:0",
												"keyType": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2052:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 16,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2079:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2110:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 21,
											"src": "2102:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 19,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2102:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2033:8:0",
									"nodeType": "StructDefinition",
									"scope": 295,
									"src": "2026:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2174:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2132:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 25,
										"keyName": "role",
										"keyNameLocation": "2148:4:0",
										"keyType": {
											"id": 22,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2140:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2132:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 24,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 23,
												"name": "RoleData",
												"nameLocations": [
													"2156:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 21,
												"src": "2156:8:0"
											},
											"referencedDeclaration": 21,
											"src": "2156:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 29,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2211:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 295,
									"src": "2187:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 27,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2187:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 28,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2232:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "2454:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 35,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "2475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 34,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 93,
														"src": "2464:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2464:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "2464:16:0"
											},
											{
												"id": 38,
												"nodeType": "PlaceholderStatement",
												"src": "2490:1:0"
											}
										]
									},
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "2243:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 40,
									"name": "onlyRole",
									"nameLocation": "2431:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2448:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2440:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 31,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:14:0"
									},
									"src": "2422:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1295
									],
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "2656:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 54,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 49,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 43,
															"src": "2673:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 51,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 378,
																		"src": "2693:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 50,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2688:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2688:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2709:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2688:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2673:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 57,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 43,
																"src": "2748:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 55,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2724:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2730:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1295,
															"src": "2724:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2724:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2673:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 48,
												"id": 60,
												"nodeType": "Return",
												"src": "2666:94:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "2504:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2574:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 45,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2632:8:0"
									},
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2599:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 42,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2591:20:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "2650:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 46,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2650:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2649:6:0"
									},
									"scope": 295,
									"src": "2565:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										345
									],
									"body": {
										"id": 79,
										"nodeType": "Block",
										"src": "2937:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 72,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "2954:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 74,
															"indexExpression": {
																"id": 73,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "2961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 75,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2967:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "2954:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 77,
													"indexExpression": {
														"id": 76,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "2975:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2954:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 71,
												"id": 78,
												"nodeType": "Return",
												"src": "2947:36:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "2773:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 80,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2863:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2879:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2871:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 64,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2893:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2885:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2870:31:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "2931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2930:6:0"
									},
									"scope": 295,
									"src": "2854:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "3255:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 83,
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 88,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "3282:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 89,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3282:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															93,
															114
														],
														"referencedDeclaration": 114,
														"src": "3265:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 91,
												"nodeType": "ExpressionStatement",
												"src": "3265:30:0"
											}
										]
									},
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "2996:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3208:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3227:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 82,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3218:14:0"
									},
									"returnParameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:0"
									},
									"scope": 295,
									"src": "3199:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "3505:124:0",
										"statements": [
											{
												"condition": {
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3519:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 102,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "3528:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 103,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "3534:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 101,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "3520:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3520:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 112,
												"nodeType": "IfStatement",
												"src": "3515:108:0",
												"trueBody": {
													"id": 111,
													"nodeType": "Block",
													"src": "3544:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 107,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 98,
																		"src": "3598:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 108,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 96,
																		"src": "3607:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 106,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "3565:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3565:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 110,
															"nodeType": "RevertStatement",
															"src": "3558:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3308:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3441:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3460:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3452:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 95,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3474:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "3466:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3451:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3505:0:0"
									},
									"scope": 295,
									"src": "3432:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										353
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3884:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 122,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "3901:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 124,
														"indexExpression": {
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "3908:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3901:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$21_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3914:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 20,
													"src": "3901:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 121,
												"id": 126,
												"nodeType": "Return",
												"src": "3894:29:0"
											}
										]
									},
									"documentation": {
										"id": 115,
										"nodeType": "StructuredDocumentation",
										"src": "3635:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3819:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3840:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3832:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3831:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3875:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3874:9:0"
									},
									"scope": 295,
									"src": "3810:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										361
									],
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4320:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4341:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 143,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "4347:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 141,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "4330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4330:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4330:25:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3936:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 137,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4313:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 136,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4300:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4300:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 139,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 135,
												"name": "onlyRole",
												"nameLocations": [
													"4291:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4291:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4291:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4235:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4253:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4245:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 130,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4259:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4259:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4244:31:0"
									},
									"returnParameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4320:0:0"
									},
									"scope": 295,
									"src": "4226:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										369
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "4737:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4759:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4765:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "4747:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4747:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "4747:26:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4368:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4730:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "4717:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4717:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"4708:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4708:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4708:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4651:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4670:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4662:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4684:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4676:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4661:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4737:0:0"
									},
									"scope": 295,
									"src": "4642:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										377
									],
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "5407:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 174,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5421:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 175,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1146,
															"src": "5443:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5443:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5421:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 182,
												"nodeType": "IfStatement",
												"src": "5417:102:0",
												"trueBody": {
													"id": 181,
													"nodeType": "Block",
													"src": "5457:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 178,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 308,
																	"src": "5478:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 179,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5478:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 180,
															"nodeType": "RevertStatement",
															"src": "5471:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5541:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 185,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5547:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 183,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "5529:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5529:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "5529:37:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "4786:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5337:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5358:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5350:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5372:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "5364:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5364:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5349:42:0"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5407:0:0"
									},
									"scope": 295,
									"src": "5328:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "5771:174:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5789:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 216,
														"src": "5781:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 197,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5781:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 202,
												"initialValue": {
													"arguments": [
														{
															"id": 200,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5822:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 199,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5809:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5809:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5781:46:0"
											},
											{
												"expression": {
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 203,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "5837:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 205,
															"indexExpression": {
																"id": 204,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "5844:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5837:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$21_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5850:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 20,
														"src": "5837:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 207,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "5862:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5837:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "5837:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 211,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "5903:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 212,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5909:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5928:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 210,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "5886:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5886:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "EmitStatement",
												"src": "5881:57:0"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "5579:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5707:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5729:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5721:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 191,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5743:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "5735:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 193,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5720:33:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5771:0:0"
									},
									"scope": 295,
									"src": "5698:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "6262:233:0",
										"statements": [
											{
												"condition": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6276:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 228,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6285:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 229,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 222,
																"src": "6291:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 227,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 80,
															"src": "6277:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6277:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "6452:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6473:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 226,
															"id": 252,
															"nodeType": "Return",
															"src": "6466:12:0"
														}
													]
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "6272:217:0",
												"trueBody": {
													"id": 250,
													"nodeType": "Block",
													"src": "6301:145:0",
													"statements": [
														{
															"expression": {
																"id": 239,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 232,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6315:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 234,
																			"indexExpression": {
																				"id": 233,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 220,
																				"src": "6322:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6328:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6315:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 237,
																	"indexExpression": {
																		"id": 236,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6336:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6315:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6347:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6315:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 240,
															"nodeType": "ExpressionStatement",
															"src": "6315:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 242,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "6382:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 243,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "6388:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 244,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6397:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6397:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 241,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 326,
																	"src": "6370:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6370:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 247,
															"nodeType": "EmitStatement",
															"src": "6365:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6431:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 226,
															"id": 249,
															"nodeType": "Return",
															"src": "6424:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "5951:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 219,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6221:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6213:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6198:31:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "6256:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 224,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6256:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6255:6:0"
									},
									"scope": 295,
									"src": "6179:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "6816:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 267,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "6838:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 268,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "6844:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "6830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6830:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 291,
													"nodeType": "Block",
													"src": "7006:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7027:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 265,
															"id": 290,
															"nodeType": "Return",
															"src": "7020:12:0"
														}
													]
												},
												"id": 292,
												"nodeType": "IfStatement",
												"src": "6826:217:0",
												"trueBody": {
													"id": 288,
													"nodeType": "Block",
													"src": "6854:146:0",
													"statements": [
														{
															"expression": {
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 270,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "6868:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 272,
																			"indexExpression": {
																				"id": 271,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 259,
																				"src": "6875:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6868:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$21_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 273,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6881:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 18,
																		"src": "6868:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 275,
																	"indexExpression": {
																		"id": 274,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6889:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6868:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 276,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6900:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6868:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 278,
															"nodeType": "ExpressionStatement",
															"src": "6868:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 280,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 259,
																		"src": "6936:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 261,
																		"src": "6942:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 282,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1146,
																			"src": "6951:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6951:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 279,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 335,
																	"src": "6924:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6924:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 285,
															"nodeType": "EmitStatement",
															"src": "6919:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6985:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 265,
															"id": 287,
															"nodeType": "Return",
															"src": "6978:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "6501:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 294,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6741:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6761:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6753:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 258,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6775:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6767:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:31:0"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "6810:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6810:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6809:6:0"
									},
									"scope": 295,
									"src": "6732:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 296,
							"src": "1953:5098:0",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "108:6944:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							378
						]
					},
					"id": 379,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 298,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 305,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 302,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 308,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 317,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 310,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 312,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 314,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 326,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 319,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 335,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 328,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 345,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 337,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 378,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 350,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 378,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 354,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 378,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 369,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 363,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 369,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 378,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 370,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 371,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 378,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 379,
							"src": "226:3116:1",
							"usedErrors": [
								305,
								308
							],
							"usedEvents": [
								317,
								326,
								335
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							515
						],
						"IERC20Errors": [
							420
						],
						"IERC721Errors": [
							468
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 380,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 381,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:2",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 420,
							"linearizedBaseContracts": [
								420
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 390,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "654:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "670:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "687:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:2"
									},
									"src": "623:80:2"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 395,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "891:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:2"
									},
									"src": "866:41:2"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 400,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "1104:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:2"
									},
									"src": "1077:45:2"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:2",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 409,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1511:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1528:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "1547:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:2"
									},
									"src": "1478:85:2"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 414,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 414,
												"src": "1775:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:2"
									},
									"src": "1748:45:2"
								},
								{
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:2",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 419,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "2025:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:2"
									},
									"src": "1999:43:2"
								}
							],
							"scope": 516,
							"src": "280:1764:2",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 421,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:2",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 468,
							"linearizedBaseContracts": [
								468
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:2",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 426,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "2469:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:2"
									},
									"src": "2444:40:2"
								},
								{
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:2",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 431,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2656:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:2"
									},
									"src": "2627:46:2"
								},
								{
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:2",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 440,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3000:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3016:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 440,
												"src": "3033:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:2"
									},
									"src": "2973:75:2"
								},
								{
									"documentation": {
										"id": 441,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 445,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "3237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:2"
									},
									"src": "3211:42:2"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 450,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "3451:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:2"
									},
									"src": "3423:46:2"
								},
								{
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 457,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3760:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "3778:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:2"
									},
									"src": "3727:68:2"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 462,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "4008:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:2"
									},
									"src": "3980:46:2"
								},
								{
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 467,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 467,
												"src": "4262:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:2"
									},
									"src": "4234:46:2"
								}
							],
							"scope": 516,
							"src": "2190:2092:2",
							"usedErrors": [
								426,
								431,
								440,
								445,
								450,
								457,
								462,
								467
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 469,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:2",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 515,
							"linearizedBaseContracts": [
								515
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 470,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:2",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 480,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4860:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4876:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4893:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "4909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:2"
									},
									"src": "4827:99:2"
								},
								{
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:2",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 485,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "5116:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:2"
									},
									"src": "5089:43:2"
								},
								{
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:2",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 490,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 490,
												"src": "5331:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:2"
									},
									"src": "5302:47:2"
								},
								{
									"documentation": {
										"id": 491,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:2",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 497,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5651:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 497,
												"src": "5669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:2"
									},
									"src": "5616:68:2"
								},
								{
									"documentation": {
										"id": 498,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:2",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 502,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "5898:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 499,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:2"
									},
									"src": "5869:47:2"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:2",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 507,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6153:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:2"
									},
									"src": "6124:47:2"
								},
								{
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:2",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 514,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6494:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "6513:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:2"
									},
									"src": "6462:73:2"
								}
							],
							"scope": 516,
							"src": "4430:2107:2",
							"usedErrors": [
								480,
								485,
								490,
								497,
								502,
								507,
								514
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"ERC20": [
							1030
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1031,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 519,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1109,
							"src": "131:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 518,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 521,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1135,
							"src": "168:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 520,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1134,
										"src": "176:14:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 1165,
							"src": "232:48:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 522,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "240:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 525,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1031,
							"sourceUnit": 516,
							"src": "281:65:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 524,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 420,
										"src": "289:12:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 527,
										"name": "Context",
										"nameLocations": [
											"1133:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "1133:7:3"
									},
									"id": 528,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:3"
								},
								{
									"baseName": {
										"id": 529,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "1142:6:3"
									},
									"id": 530,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:3"
								},
								{
									"baseName": {
										"id": 531,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1134,
										"src": "1150:14:3"
									},
									"id": 532,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:3"
								},
								{
									"baseName": {
										"id": 533,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 420,
										"src": "1166:12:3"
									},
									"id": 534,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:3"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 526,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:3",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1030,
							"linearizedBaseContracts": [
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC20",
							"nameLocation": "1124:5:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 538,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1185:53:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 537,
										"keyName": "account",
										"keyNameLocation": "1201:7:3",
										"keyType": {
											"id": 535,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 536,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 544,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1245:83:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 543,
										"keyName": "account",
										"keyNameLocation": "1261:7:3",
										"keyType": {
											"id": 539,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:3",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 542,
											"keyName": "spender",
											"keyNameLocation": "1288:7:3",
											"keyType": {
												"id": 540,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:3",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 541,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 546,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1335:28:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 545,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 548,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1370:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 547,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 550,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 1030,
									"src": "1396:22:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 549,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:3",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 566,
										"nodeType": "Block",
										"src": "1638:57:3",
										"statements": [
											{
												"expression": {
													"id": 560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 558,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "1648:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 559,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 553,
														"src": "1656:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 561,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:3"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 562,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "1671:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "1681:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:3"
											}
										]
									},
									"documentation": {
										"id": 551,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:3",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 567,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1594:19:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 552,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "1615:21:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 554,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:3"
									},
									"returnParameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:3"
									},
									"scope": 1030,
									"src": "1582:113:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "1820:29:3",
										"statements": [
											{
												"expression": {
													"id": 573,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 548,
													"src": "1837:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 572,
												"id": 574,
												"nodeType": "Return",
												"src": "1830:12:3"
											}
										]
									},
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:3"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "1805:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 570,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:3"
									},
									"scope": 1030,
									"src": "1760:89:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1127
									],
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "2024:31:3",
										"statements": [
											{
												"expression": {
													"id": 582,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 550,
													"src": "2041:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 581,
												"id": 583,
												"nodeType": "Return",
												"src": "2034:14:3"
											}
										]
									},
									"documentation": {
										"id": 577,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:3",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:3"
									},
									"returnParameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "2009:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 579,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:3"
									},
									"scope": 1030,
									"src": "1962:93:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1133
									],
									"body": {
										"id": 593,
										"nodeType": "Block",
										"src": "2744:26:3",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 590,
												"id": 592,
												"nodeType": "Return",
												"src": "2754:9:3"
											}
										]
									},
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:3",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 594,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:3"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "2737:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:3"
									},
									"scope": 1030,
									"src": "2688:82:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 602,
										"nodeType": "Block",
										"src": "2891:36:3",
										"statements": [
											{
												"expression": {
													"id": 600,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "2908:12:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 601,
												"nodeType": "Return",
												"src": "2901:19:3"
											}
										]
									},
									"documentation": {
										"id": 595,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:3",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:3"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "2882:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:3"
									},
									"scope": 1030,
									"src": "2830:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 615,
										"nodeType": "Block",
										"src": "3059:42:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 611,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "3076:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 613,
													"indexExpression": {
														"id": 612,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "3086:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 610,
												"id": 614,
												"nodeType": "Return",
												"src": "3069:25:3"
											}
										]
									},
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:3",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3004:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:3"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 616,
												"src": "3050:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:3"
									},
									"scope": 1030,
									"src": "2985:116:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1075
									],
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "3371:103:3",
										"statements": [
											{
												"assignments": [
													627
												],
												"declarations": [
													{
														"constant": false,
														"id": 627,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "3381:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 626,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 630,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 628,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "3397:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 627,
															"src": "3429:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 633,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "3436:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "3440:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3419:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 636,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 625,
												"id": 638,
												"nodeType": "Return",
												"src": "3456:11:3"
											}
										]
									},
									"documentation": {
										"id": 617,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:3",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3314:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3326:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:3"
									},
									"returnParameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "3365:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:3"
									},
									"scope": 1030,
									"src": "3296:178:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1085
									],
									"body": {
										"id": 656,
										"nodeType": "Block",
										"src": "3621:51:3",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 650,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "3638:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 652,
														"indexExpression": {
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 643,
															"src": "3650:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 654,
													"indexExpression": {
														"id": 653,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 645,
														"src": "3657:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 649,
												"id": 655,
												"nodeType": "Return",
												"src": "3631:34:3"
											}
										]
									},
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:3",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3551:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3566:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 644,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:3"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "3612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:3"
									},
									"scope": 1030,
									"src": "3532:140:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1095
									],
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "4058:107:3",
										"statements": [
											{
												"assignments": [
													668
												],
												"declarations": [
													{
														"constant": false,
														"id": 668,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:3",
														"nodeType": "VariableDeclaration",
														"scope": 680,
														"src": "4068:13:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 667,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 671,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 669,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4084:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 673,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "4115:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "4122:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 675,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4131:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 672,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 921,
														"src": "4106:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 666,
												"id": 679,
												"nodeType": "Return",
												"src": "4147:11:3"
											}
										]
									},
									"documentation": {
										"id": 658,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:3",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "3996:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4013:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:3"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "4052:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:3"
									},
									"scope": 1030,
									"src": "3979:186:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1107
									],
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "4850:151:3",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:3",
														"nodeType": "VariableDeclaration",
														"scope": 712,
														"src": "4860:15:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1146,
														"src": "4878:10:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "4922:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4931:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "4900:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:3"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 705,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 684,
															"src": "4957:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 706,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "4963:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 707,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "4967:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 704,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "4947:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 709,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:3"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 711,
												"nodeType": "Return",
												"src": "4983:11:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:3",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4779:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4793:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4805:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:3"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "4844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:3"
									},
									"scope": 1030,
									"src": "4757:244:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "5443:231:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 716,
														"src": "5457:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 724,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "IfStatement",
												"src": "5453:86:3",
												"trueBody": {
													"id": 736,
													"nodeType": "Block",
													"src": "5477:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 732,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 730,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 729,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "5498:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 734,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 735,
															"nodeType": "RevertStatement",
															"src": "5491:37:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 738,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "5552:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 739,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5548:86:3",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5570:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 745,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 744,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "5591:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 750,
															"nodeType": "RevertStatement",
															"src": "5584:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 754,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "5651:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 755,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "5657:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 756,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "5661:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 753,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "5643:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:3"
											}
										]
									},
									"documentation": {
										"id": 714,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5393:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5407:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "5419:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:3"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:3"
									},
									"scope": 1030,
									"src": "5374:300:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "6064:1032:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 770,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 763,
														"src": "6078:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 771,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 807,
													"nodeType": "Block",
													"src": "6252:362:3",
													"statements": [
														{
															"assignments": [
																782
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 782,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:3",
																	"nodeType": "VariableDeclaration",
																	"scope": 807,
																	"src": "6266:19:3",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 781,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 786,
															"initialValue": {
																"baseExpression": {
																	"id": 783,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6288:9:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 785,
																"indexExpression": {
																	"id": 784,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6298:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:3"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 787,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "6321:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 788,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6335:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 797,
															"nodeType": "IfStatement",
															"src": "6317:115:3",
															"trueBody": {
																"id": 796,
																"nodeType": "Block",
																"src": "6342:90:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 791,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 763,
																					"src": "6392:4:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 792,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 782,
																					"src": "6398:11:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 793,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 767,
																					"src": "6411:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 790,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 390,
																				"src": "6367:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 795,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:3"
																	}
																]
															}
														},
														{
															"id": 806,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:3",
															"statements": [
																{
																	"expression": {
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 798,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "6552:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 800,
																			"indexExpression": {
																				"id": 799,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 763,
																				"src": "6562:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 803,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 801,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 782,
																				"src": "6570:11:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 802,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 767,
																				"src": "6584:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 805,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:3"
																}
															]
														}
													]
												},
												"id": 808,
												"nodeType": "IfStatement",
												"src": "6074:540:3",
												"trueBody": {
													"id": 780,
													"nodeType": "Block",
													"src": "6098:148:3",
													"statements": [
														{
															"expression": {
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 776,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "6214:12:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 777,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6230:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 779,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 809,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "6628:2:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 810,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "6843:206:3",
													"statements": [
														{
															"id": 827,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:3",
															"statements": [
																{
																	"expression": {
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 821,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 538,
																				"src": "7002:9:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 823,
																			"indexExpression": {
																				"id": 822,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "7012:2:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 824,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "7019:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 826,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:3"
																}
															]
														}
													]
												},
												"id": 829,
												"nodeType": "IfStatement",
												"src": "6624:425:3",
												"trueBody": {
													"id": 820,
													"nodeType": "Block",
													"src": "6646:191:3",
													"statements": [
														{
															"id": 819,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:3",
															"statements": [
																{
																	"expression": {
																		"id": 817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 815,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "6791:12:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 816,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 767,
																			"src": "6807:5:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 818,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:3"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 831,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "7073:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 832,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "7079:2:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 833,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 767,
															"src": "7083:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 830,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1042,
														"src": "7064:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 835,
												"nodeType": "EmitStatement",
												"src": "7059:30:3"
											}
										]
									},
									"documentation": {
										"id": 761,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:3",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6006:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6020:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "6032:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:3"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:3"
									},
									"scope": 1030,
									"src": "5989:1107:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "7495:152:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "7509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 859,
												"nodeType": "IfStatement",
												"src": "7505:91:3",
												"trueBody": {
													"id": 858,
													"nodeType": "Block",
													"src": "7532:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 852,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 851,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7553:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 857,
															"nodeType": "RevertStatement",
															"src": "7546:39:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 861,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 865,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "7625:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 866,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "7634:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 860,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "7605:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:3"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:3",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7454:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "7471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:3"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:3"
									},
									"scope": 1030,
									"src": "7439:208:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "8021:150:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 878,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "8035:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 879,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "IfStatement",
												"src": "8031:89:3",
												"trueBody": {
													"id": 891,
													"nodeType": "Block",
													"src": "8058:62:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 885,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 888,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 884,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 395,
																	"src": "8079:18:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 890,
															"nodeType": "RevertStatement",
															"src": "8072:37:3"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "8137:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 895,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:3",
																	"typeDescriptions": {}
																}
															},
															"id": 898,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 899,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8158:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "8129:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 900,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 901,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:3"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:3",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7980:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "7997:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:3"
									},
									"returnParameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:3"
									},
									"scope": 1030,
									"src": "7965:206:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 920,
										"nodeType": "Block",
										"src": "8781:54:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 914,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "8800:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 915,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 908,
															"src": "8807:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 916,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "8816:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 917,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 913,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															921,
															981
														],
														"referencedDeclaration": 981,
														"src": "8791:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:3"
											}
										]
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:3",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 921,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8725:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8740:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 921,
												"src": "8757:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:3"
									},
									"returnParameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:3"
									},
									"scope": 1030,
									"src": "8707:128:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 980,
										"nodeType": "Block",
										"src": "9780:334:3",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 933,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "9794:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 934,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "9790:89:3",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "9815:64:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 942,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 940,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 939,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 414,
																	"src": "9836:20:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "RevertStatement",
															"src": "9829:39:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 948,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "9892:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 950,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 949,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:3",
																"typeDescriptions": {}
															}
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 962,
												"nodeType": "IfStatement",
												"src": "9888:90:3",
												"trueBody": {
													"id": 961,
													"nodeType": "Block",
													"src": "9915:63:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 957,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 955,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:3",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 958,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 954,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 419,
																	"src": "9936:19:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 960,
															"nodeType": "RevertStatement",
															"src": "9929:38:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 963,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 544,
																"src": "9987:11:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 966,
															"indexExpression": {
																"id": 964,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 924,
																"src": "9999:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 967,
														"indexExpression": {
															"id": 965,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10006:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 968,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 928,
														"src": "10017:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 970,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:3"
											},
											{
												"condition": {
													"id": 971,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 930,
													"src": "10036:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "10032:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "10047:61:3",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 973,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "10075:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 974,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 926,
																		"src": "10082:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 975,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 928,
																		"src": "10091:5:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 972,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1051,
																	"src": "10066:8:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 977,
															"nodeType": "EmitStatement",
															"src": "10061:36:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 922,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:3",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9700:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9715:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9732:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "9747:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 929,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:3"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:3"
									},
									"scope": 1030,
									"src": "9682:432:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "10485:387:3",
										"statements": [
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:3",
														"nodeType": "VariableDeclaration",
														"scope": 1028,
														"src": "10495:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 997,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 984,
															"src": "10532:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 995,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "10539:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "10522:9:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 998,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "10561:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 999,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1027,
												"nodeType": "IfStatement",
												"src": "10557:309:3",
												"trueBody": {
													"id": 1026,
													"nodeType": "Block",
													"src": "10599:267:3",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1005,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "10617:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1006,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 988,
																	"src": "10636:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1015,
															"nodeType": "IfStatement",
															"src": "10613:130:3",
															"trueBody": {
																"id": 1014,
																"nodeType": "Block",
																"src": "10643:100:3",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1009,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 986,
																					"src": "10695:7:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1010,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10704:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1011,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10722:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1008,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 409,
																				"src": "10668:26:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 1012,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1013,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:3"
																	}
																]
															}
														},
														{
															"id": 1025,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:3",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 984,
																				"src": "10793:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 986,
																				"src": "10800:7:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1021,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1019,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 992,
																					"src": "10809:16:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1020,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 988,
																					"src": "10828:5:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1022,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1016,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				921,
																				981
																			],
																			"referencedDeclaration": 981,
																			"src": "10784:8:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1024,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:3"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:3",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10421:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10436:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "10453:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 987,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:3"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:3"
									},
									"scope": 1030,
									"src": "10396:476:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1031,
							"src": "1106:9768:3",
							"usedErrors": [
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "105:10770:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						]
					},
					"id": 1109,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1032,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1033,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:4",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1108,
							"linearizedBaseContracts": [
								1108
							],
							"name": "IERC20",
							"nameLocation": "214:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:4",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1042,
									"name": "Transfer",
									"nameLocation": "396:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "405:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "427:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1037,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1042,
												"src": "447:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:4"
									},
									"src": "390:72:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1043,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:4",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1051,
									"name": "Approval",
									"nameLocation": "627:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "636:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "659:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "684:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:4"
									},
									"src": "621:78:4"
								},
								{
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:4",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:4"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "821:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:4"
									},
									"scope": 1108,
									"src": "775:55:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:4",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "931:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:4"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "971:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:4"
									},
									"scope": 1108,
									"src": "912:68:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:4",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1222:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1234:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1069,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "1267:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1072,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:4"
									},
									"scope": 1108,
									"src": "1204:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:4",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1085,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1567:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1582:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:4"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1085,
												"src": "1622:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:4"
									},
									"scope": 1108,
									"src": "1548:83:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1086,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:4",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1095,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2326:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2343:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1089,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:4"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "2376:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1092,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:4"
									},
									"scope": 1108,
									"src": "2309:73:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2712:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2726:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2738:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:4"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "2771:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:4"
									},
									"scope": 1108,
									"src": "2690:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1109,
							"src": "204:2575:4",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "106:2674:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1108
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 1135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1110,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1112,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1135,
							"sourceUnit": 1109,
							"src": "151:37:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1111,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1108,
										"src": "159:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1114,
										"name": "IERC20",
										"nameLocations": [
											"306:6:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1108,
										"src": "306:6:5"
									},
									"id": 1115,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:5"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1113,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:5",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1134,
							"linearizedBaseContracts": [
								1134,
								1108
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:5",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:5"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "417:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:5"
									},
									"scope": 1134,
									"src": "378:54:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:5",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1127,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "540:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1124,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:5"
									},
									"scope": 1134,
									"src": "499:56:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:5",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1133,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1133,
												"src": "674:5:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1130,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:5"
									},
									"scope": 1134,
									"src": "631:50:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1135,
							"src": "278:405:5",
							"usedErrors": [],
							"usedEvents": [
								1042,
								1051
							]
						}
					],
					"src": "125:559:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1164
						]
					},
					"id": 1165,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1164,
							"linearizedBaseContracts": [
								1164
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1145,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1142,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1141,
												"id": 1144,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1146,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1164,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1154,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1151,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1150,
												"id": 1153,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1155,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1148,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1164,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1159,
												"id": 1161,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1164,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1165,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1164
						],
						"Pausable": [
							1272
						]
					},
					"id": 1273,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1166,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 1168,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1273,
							"sourceUnit": 1165,
							"src": "128:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1167,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1164,
										"src": "136:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1170,
										"name": "Context",
										"nameLocations": [
											"645:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1164,
										"src": "645:7:7"
									},
									"id": 1171,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:7"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1169,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1272,
							"linearizedBaseContracts": [
								1272,
								1164
							],
							"name": "Pausable",
							"nameLocation": "633:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1173,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 1272,
									"src": "659:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1172,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1178,
									"name": "Paused",
									"nameLocation": "770:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "777:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:7"
									},
									"src": "764:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1183,
									"name": "Unpaused",
									"nameLocation": "881:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "890:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:7"
									},
									"src": "875:32:7"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:7",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1186,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:7"
									},
									"src": "994:22:7"
								},
								{
									"documentation": {
										"id": 1187,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:7",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1189,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:7"
									},
									"src": "1107:22:7"
								},
								{
									"body": {
										"id": 1196,
										"nodeType": "Block",
										"src": "1340:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1192,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1226,
														"src": "1350:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1194,
												"nodeType": "ExpressionStatement",
												"src": "1350:19:7"
											},
											{
												"id": 1195,
												"nodeType": "PlaceholderStatement",
												"src": "1379:1:7"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "1135:175:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1197,
									"name": "whenNotPaused",
									"nameLocation": "1324:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1337:2:7"
									},
									"src": "1315:72:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1204,
										"nodeType": "Block",
										"src": "1587:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1200,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1239,
														"src": "1597:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1597:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1202,
												"nodeType": "ExpressionStatement",
												"src": "1597:16:7"
											},
											{
												"id": 1203,
												"nodeType": "PlaceholderStatement",
												"src": "1623:1:7"
											}
										]
									},
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "1393:167:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1205,
									"name": "whenPaused",
									"nameLocation": "1574:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1584:2:7"
									},
									"src": "1565:66:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "1779:31:7",
										"statements": [
											{
												"expression": {
													"id": 1211,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1173,
													"src": "1796:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1210,
												"id": 1212,
												"nodeType": "Return",
												"src": "1789:14:7"
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "1637:84:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1735:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1741:2:7"
									},
									"returnParameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "1773:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1773:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:6:7"
									},
									"scope": 1272,
									"src": "1726:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1225,
										"nodeType": "Block",
										"src": "1929:77:7",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1218,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1214,
														"src": "1943:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1224,
												"nodeType": "IfStatement",
												"src": "1939:61:7",
												"trueBody": {
													"id": 1223,
													"nodeType": "Block",
													"src": "1953:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1220,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "1974:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1974:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1222,
															"nodeType": "RevertStatement",
															"src": "1967:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "1816:57:7",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1887:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:7"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1929:0:7"
									},
									"scope": 1272,
									"src": "1878:128:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1238,
										"nodeType": "Block",
										"src": "2126:78:7",
										"statements": [
											{
												"condition": {
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2140:9:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1230,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1214,
															"src": "2141:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2141:8:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1237,
												"nodeType": "IfStatement",
												"src": "2136:62:7",
												"trueBody": {
													"id": 1236,
													"nodeType": "Block",
													"src": "2151:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1233,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1189,
																	"src": "2172:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2172:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1235,
															"nodeType": "RevertStatement",
															"src": "2165:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1227,
										"nodeType": "StructuredDocumentation",
										"src": "2012:61:7",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2087:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2101:2:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2126:0:7"
									},
									"scope": 1272,
									"src": "2078:126:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "2388:66:7",
										"statements": [
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1245,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2398:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2408:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2398:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "2398:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1250,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "2434:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2434:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1249,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1178,
														"src": "2427:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "EmitStatement",
												"src": "2422:25:7"
											}
										]
									},
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "2210:124:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1243,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1242,
												"name": "whenNotPaused",
												"nameLocations": [
													"2374:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1197,
												"src": "2374:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2374:13:7"
										}
									],
									"name": "_pause",
									"nameLocation": "2348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2354:2:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2388:0:7"
									},
									"scope": 1272,
									"src": "2339:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "2634:69:7",
										"statements": [
											{
												"expression": {
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1261,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1173,
														"src": "2644:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2654:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2644:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "ExpressionStatement",
												"src": "2644:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1266,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1146,
																"src": "2683:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2683:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1265,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "2674:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2674:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "EmitStatement",
												"src": "2669:27:7"
											}
										]
									},
									"documentation": {
										"id": 1256,
										"nodeType": "StructuredDocumentation",
										"src": "2460:121:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1259,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1258,
												"name": "whenPaused",
												"nameLocations": [
													"2623:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1205,
												"src": "2623:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2623:10:7"
										}
									],
									"name": "_unpause",
									"nameLocation": "2595:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2603:2:7"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2634:0:7"
									},
									"scope": 1272,
									"src": "2586:117:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1273,
							"src": "615:2090:7",
							"usedErrors": [
								1186,
								1189
							],
							"usedEvents": [
								1178,
								1183
							]
						}
					],
					"src": "102:2604:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1296
						],
						"IERC165": [
							1308
						]
					},
					"id": 1297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1276,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1297,
							"sourceUnit": 1309,
							"src": "140:38:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1275,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1308,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1278,
										"name": "IERC165",
										"nameLocations": [
											"688:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1308,
										"src": "688:7:8"
									},
									"id": 1279,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:8"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1277,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1296,
							"linearizedBaseContracts": [
								1296,
								1308
							],
							"name": "ERC165",
							"nameLocation": "678:6:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "845:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1287,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "862:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1289,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1308,
																	"src": "882:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1308_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1308_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1288,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1308",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1286,
												"id": 1293,
												"nodeType": "Return",
												"src": "855:47:8"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "790:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1281,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:8"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "839:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1284,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:8"
									},
									"scope": 1296,
									"src": "763:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1297,
							"src": "660:251:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1308
						]
					},
					"id": 1309,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1299,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1308,
							"linearizedBaseContracts": [
								1308
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1300,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1301,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 1308,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1309,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"contracts/CMBS20Demo.sol": {
				"ast": {
					"absolutePath": "contracts/CMBS20Demo.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"CMBS20Demo": [
							1999
						],
						"Context": [
							1164
						],
						"ERC165": [
							1296
						],
						"ERC20": [
							1030
						],
						"ERC3643Token": [
							2114
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						],
						"Pausable": [
							1272
						]
					},
					"id": 2000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1310,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1311,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2000,
							"sourceUnit": 296,
							"src": "58:58:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
							"file": "@openzeppelin/contracts/utils/Pausable.sol",
							"id": 1312,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2000,
							"sourceUnit": 1273,
							"src": "117:52:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2000,
							"sourceUnit": 1109,
							"src": "170:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/ERC3643Token.sol",
							"file": "./ERC3643Token.sol",
							"id": 1314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2000,
							"sourceUnit": 2115,
							"src": "227:28:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1315,
										"name": "AccessControl",
										"nameLocations": [
											"312:13:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "312:13:10"
									},
									"id": 1316,
									"nodeType": "InheritanceSpecifier",
									"src": "312:13:10"
								},
								{
									"baseName": {
										"id": 1317,
										"name": "Pausable",
										"nameLocations": [
											"327:8:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1272,
										"src": "327:8:10"
									},
									"id": 1318,
									"nodeType": "InheritanceSpecifier",
									"src": "327:8:10"
								}
							],
							"canonicalName": "CMBS20Demo",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1999,
							"linearizedBaseContracts": [
								1999,
								1272,
								295,
								1296,
								1308,
								378,
								1164
							],
							"name": "CMBS20Demo",
							"nameLocation": "298:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "09a01608",
									"id": 1323,
									"mutability": "constant",
									"name": "SERVICER_ROLE",
									"nameLocation": "366:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "342:66:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1319,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "342:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "53455256494345525f524f4c45",
												"id": 1321,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "392:15:10",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db6980537",
													"typeString": "literal_string \"SERVICER_ROLE\""
												},
												"value": "SERVICER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_250b76734a070a69c7b3930477dd35007ad9c9d0952e97903fdafb2db6980537",
													"typeString": "literal_string \"SERVICER_ROLE\""
												}
											],
											"id": 1320,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "382:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "382:26:10",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CMBS20Demo.Tranche",
									"id": 1337,
									"members": [
										{
											"constant": false,
											"id": 1326,
											"mutability": "mutable",
											"name": "token",
											"nameLocation": "453:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1337,
											"src": "440:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_contract$_ERC3643Token_$2114",
												"typeString": "contract ERC3643Token"
											},
											"typeName": {
												"id": 1325,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1324,
													"name": "ERC3643Token",
													"nameLocations": [
														"440:12:10"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 2114,
													"src": "440:12:10"
												},
												"referencedDeclaration": 2114,
												"src": "440:12:10",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC3643Token_$2114",
													"typeString": "contract ERC3643Token"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1328,
											"mutability": "mutable",
											"name": "principal",
											"nameLocation": "513:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1337,
											"src": "505:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1327,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "505:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1330,
											"mutability": "mutable",
											"name": "couponBps",
											"nameLocation": "540:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1337,
											"src": "532:17:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1329,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "532:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1332,
											"mutability": "mutable",
											"name": "seniority",
											"nameLocation": "565:9:10",
											"nodeType": "VariableDeclaration",
											"scope": 1337,
											"src": "559:15:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1331,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "559:5:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1334,
											"mutability": "mutable",
											"name": "accruedInterest",
											"nameLocation": "592:15:10",
											"nodeType": "VariableDeclaration",
											"scope": 1337,
											"src": "584:23:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1333,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "584:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1336,
											"mutability": "mutable",
											"name": "cashAvailable",
											"nameLocation": "625:13:10",
											"nodeType": "VariableDeclaration",
											"scope": 1337,
											"src": "617:21:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1335,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "617:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Tranche",
									"nameLocation": "422:7:10",
									"nodeType": "StructDefinition",
									"scope": 1999,
									"src": "415:230:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eac989f8",
									"id": 1339,
									"mutability": "mutable",
									"name": "uri",
									"nameLocation": "665:3:10",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "651:17:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1338,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "651:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "22be3de1",
									"id": 1342,
									"mutability": "immutable",
									"name": "stable",
									"nameLocation": "698:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "674:30:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1108",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1341,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1340,
											"name": "IERC20",
											"nameLocations": [
												"674:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1108,
											"src": "674:6:10"
										},
										"referencedDeclaration": 1108,
										"src": "674:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1108",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f0f9243b",
									"id": 1344,
									"mutability": "mutable",
									"name": "nextTrancheId",
									"nameLocation": "725:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "710:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1343,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "710:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7b3baab4",
									"id": 1346,
									"mutability": "mutable",
									"name": "lastAccrual",
									"nameLocation": "759:11:10",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "744:26:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1345,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "26c25962",
									"id": 1351,
									"mutability": "mutable",
									"name": "tranches",
									"nameLocation": "811:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1999,
									"src": "776:43:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
										"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche)"
									},
									"typeName": {
										"id": 1350,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1347,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "784:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "776:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
											"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1349,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1348,
												"name": "Tranche",
												"nameLocations": [
													"795:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1337,
												"src": "795:7:10"
											},
											"referencedDeclaration": 1337,
											"src": "795:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
												"typeString": "struct CMBS20Demo.Tranche"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "564b343ad33dbf7eb84ef778355be83df7b0a44ce6021e56d7bd757a03c03544",
									"id": 1363,
									"name": "TrancheCreated",
									"nameLocation": "832:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1353,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "863:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "847:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "847:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"indexed": false,
												"mutability": "mutable",
												"name": "principal",
												"nameLocation": "875:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "867:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1357,
												"indexed": false,
												"mutability": "mutable",
												"name": "couponBps",
												"nameLocation": "894:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "886:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1359,
												"indexed": false,
												"mutability": "mutable",
												"name": "seniority",
												"nameLocation": "911:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "905:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1358,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "905:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1361,
												"indexed": false,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "930:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "922:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "922:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "846:91:10"
									},
									"src": "826:112:10"
								},
								{
									"anonymous": false,
									"eventSelector": "c679124717471d056fe130fb8066ce200851eec03c00256ee1158b7d2354036f",
									"id": 1371,
									"name": "PaymentAllocated",
									"nameLocation": "949:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "982:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "966:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": false,
												"mutability": "mutable",
												"name": "interestPaid",
												"nameLocation": "994:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "986:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "986:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": false,
												"mutability": "mutable",
												"name": "principalPaid",
												"nameLocation": "1016:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1008:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1008:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:65:10"
									},
									"src": "943:88:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b6bcab815b7a952b8759f2f92fc9981dc1156f6c11bf4dc7e9cb3036495e653a",
									"id": 1379,
									"name": "Distribution",
									"nameLocation": "1042:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1071:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1055:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "1091:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1075:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1075:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1109:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "1101:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1101:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1054:62:10"
									},
									"src": "1036:81:10"
								},
								{
									"anonymous": false,
									"eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
									"id": 1387,
									"name": "Withdraw",
									"nameLocation": "1128:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1381,
												"indexed": true,
												"mutability": "mutable",
												"name": "investor",
												"nameLocation": "1153:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1137:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1137:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1179:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1163:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1191:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "1183:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1183:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1136:62:10"
									},
									"src": "1122:77:10"
								},
								{
									"body": {
										"id": 1420,
										"nodeType": "Block",
										"src": "1253:191:10",
										"statements": [
											{
												"expression": {
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1395,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1339,
														"src": "1263:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1396,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "1269:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1263:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "1263:10:10"
											},
											{
												"expression": {
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1399,
														"name": "stable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1342,
														"src": "1283:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1108",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1400,
														"name": "_stable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1390,
														"src": "1292:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1108",
															"typeString": "contract IERC20"
														}
													},
													"src": "1283:16:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1108",
														"typeString": "contract IERC20"
													}
												},
												"id": 1402,
												"nodeType": "ExpressionStatement",
												"src": "1283:16:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1404,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1320:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1405,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1340:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1344:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1340:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1403,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1309:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "1309:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1410,
															"name": "SERVICER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "1372:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1411,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1387:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1391:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1387:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1409,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "1361:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1361:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "1361:37:10"
											},
											{
												"expression": {
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1415,
														"name": "lastAccrual",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "1408:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1416,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1422:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1428:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1422:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1408:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "1408:29:10"
											}
										]
									},
									"id": 1421,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "_stable",
												"nameLocation": "1224:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1217:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1108",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1389,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1388,
														"name": "IERC20",
														"nameLocations": [
															"1217:6:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1108,
														"src": "1217:6:10"
													},
													"referencedDeclaration": 1108,
													"src": "1217:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1108",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "_uri",
												"nameLocation": "1247:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1421,
												"src": "1233:18:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1233:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1216:36:10"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:0:10"
									},
									"scope": 1999,
									"src": "1205:239:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1492,
										"nodeType": "Block",
										"src": "1798:558:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1439,
																"name": "principal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "1816:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1828:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1816:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f5052494e434950414c",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1831:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7cb342cb595ec1fa3179b8cca4a95fc160e3e9ba84273d658095957106dd18c",
																"typeString": "literal_string \"INVALID_PRINCIPAL\""
															},
															"value": "INVALID_PRINCIPAL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7cb342cb595ec1fa3179b8cca4a95fc160e3e9ba84273d658095957106dd18c",
																"typeString": "literal_string \"INVALID_PRINCIPAL\""
															}
														],
														"id": 1438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:43:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1444,
												"nodeType": "ExpressionStatement",
												"src": "1808:43:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1446,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "1869:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1878:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1869:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f535550504c59",
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1881:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25441db5b8ffe88664d2ec001eb1590f25a295726428902d60a1f9e95e736afd",
																"typeString": "literal_string \"INVALID_SUPPLY\""
															},
															"value": "INVALID_SUPPLY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25441db5b8ffe88664d2ec001eb1590f25a295726428902d60a1f9e95e736afd",
																"typeString": "literal_string \"INVALID_SUPPLY\""
															}
														],
														"id": 1445,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1861:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1861:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1451,
												"nodeType": "ExpressionStatement",
												"src": "1861:37:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1453,
																"name": "supply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1432,
																"src": "1916:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1454,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1424,
																		"src": "1926:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																			"typeString": "contract ERC3643Token"
																		}
																	},
																	"id": 1455,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1932:11:10",
																	"memberName": "totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 603,
																	"src": "1926:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																		"typeString": "function () view external returns (uint256)"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1926:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1916:29:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e56414c49445f544f4b454e5f535550504c59",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1947:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf9f72848977dbd5a0caa5dc319c57d87cc2289f8ecb5225f8a7c2d1fe6d7f56",
																"typeString": "literal_string \"INVALID_TOKEN_SUPPLY\""
															},
															"value": "INVALID_TOKEN_SUPPLY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf9f72848977dbd5a0caa5dc319c57d87cc2289f8ecb5225f8a7c2d1fe6d7f56",
																"typeString": "literal_string \"INVALID_TOKEN_SUPPLY\""
															}
														],
														"id": 1452,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1908:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1908:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "1908:62:10"
											},
											{
												"assignments": [
													1462
												],
												"declarations": [
													{
														"constant": false,
														"id": 1462,
														"mutability": "mutable",
														"name": "id",
														"nameLocation": "1989:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1492,
														"src": "1981:10:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1461,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1981:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"id": 1463,
													"name": "nextTrancheId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1344,
													"src": "1994:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1981:26:10"
											},
											{
												"expression": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1465,
														"name": "nextTrancheId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "2017:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1466,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2033:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1467,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2038:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2033:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2017:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1470,
												"nodeType": "ExpressionStatement",
												"src": "2017:22:10"
											},
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1471,
															"name": "tranches",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "2050:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
																"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche storage ref)"
															}
														},
														"id": 1473,
														"indexExpression": {
															"id": 1472,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2059:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2050:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Tranche_$1337_storage",
															"typeString": "struct CMBS20Demo.Tranche storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1475,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "2094:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																	"typeString": "contract ERC3643Token"
																}
															},
															{
																"id": 1476,
																"name": "principal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1426,
																"src": "2124:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1477,
																"name": "couponBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1428,
																"src": "2158:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1478,
																"name": "seniority",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "2192:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"hexValue": "30",
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2232:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "30",
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																	"typeString": "contract ERC3643Token"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1474,
															"name": "Tranche",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "2065:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Tranche_$1337_storage_ptr_$",
																"typeString": "type(struct CMBS20Demo.Tranche storage pointer)"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2087:5:10",
															"2113:9:10",
															"2147:9:10",
															"2181:9:10",
															"2215:15:10",
															"2247:13:10"
														],
														"names": [
															"token",
															"principal",
															"couponBps",
															"seniority",
															"accruedInterest",
															"cashAvailable"
														],
														"nodeType": "FunctionCall",
														"src": "2065:209:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Tranche_$1337_memory_ptr",
															"typeString": "struct CMBS20Demo.Tranche memory"
														}
													},
													"src": "2050:224:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Tranche_$1337_storage",
														"typeString": "struct CMBS20Demo.Tranche storage ref"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "2050:224:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1485,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "2305:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1486,
															"name": "principal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1426,
															"src": "2309:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1487,
															"name": "couponBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "2320:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1488,
															"name": "seniority",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "2331:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 1489,
															"name": "supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "2342:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1484,
														"name": "TrancheCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "2290:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint8_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256,uint8,uint256)"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "EmitStatement",
												"src": "2285:64:10"
											}
										]
									},
									"functionSelector": "9612df5c",
									"id": 1493,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1435,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "1778:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1436,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1434,
												"name": "onlyRole",
												"nameLocations": [
													"1769:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1769:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "1769:28:10"
										}
									],
									"name": "createTranche",
									"nameLocation": "1609:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1645:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1632:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC3643Token_$2114",
													"typeString": "contract ERC3643Token"
												},
												"typeName": {
													"id": 1423,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1422,
														"name": "ERC3643Token",
														"nameLocations": [
															"1632:12:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2114,
														"src": "1632:12:10"
													},
													"referencedDeclaration": 2114,
													"src": "1632:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC3643Token_$2114",
														"typeString": "contract ERC3643Token"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "principal",
												"nameLocation": "1668:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1660:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1660:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "couponBps",
												"nameLocation": "1695:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1687:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "seniority",
												"nameLocation": "1720:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1714:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1429,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1714:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "supply",
												"nameLocation": "1747:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "1739:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:137:10"
									},
									"returnParameters": {
										"id": 1437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1798:0:10"
									},
									"scope": 1999,
									"src": "1600:756:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1573,
										"nodeType": "Block",
										"src": "2531:417:10",
										"statements": [
											{
												"assignments": [
													1509
												],
												"declarations": [
													{
														"constant": false,
														"id": 1509,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "2554:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1573,
														"src": "2541:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC3643Token_$2114",
															"typeString": "contract ERC3643Token"
														},
														"typeName": {
															"id": 1508,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1507,
																"name": "ERC3643Token",
																"nameLocations": [
																	"2541:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2114,
																"src": "2541:12:10"
															},
															"referencedDeclaration": 2114,
															"src": "2541:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																"typeString": "contract ERC3643Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1514,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 1510,
															"name": "tranches",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "2562:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
																"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche storage ref)"
															}
														},
														"id": 1512,
														"indexExpression": {
															"id": 1511,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "2571:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2562:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Tranche_$1337_storage",
															"typeString": "struct CMBS20Demo.Tranche storage ref"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2575:5:10",
													"memberName": "token",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1326,
													"src": "2562:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC3643Token_$2114",
														"typeString": "contract ERC3643Token"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2541:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1516,
																	"name": "investors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "2598:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 1517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2608:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2598:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1518,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1501,
																	"src": "2618:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 1519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2626:6:10",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2618:14:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2598:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41525241595f4c454e4754485f4d49534d41544348",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2634:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8",
																"typeString": "literal_string \"ARRAY_LENGTH_MISMATCH\""
															},
															"value": "ARRAY_LENGTH_MISMATCH"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce9a8942be13ddbfea97cc19823de3d1d97580661127eec2a746a53f877ce4a8",
																"typeString": "literal_string \"ARRAY_LENGTH_MISMATCH\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2590:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "2590:68:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1529,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2700:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_CMBS20Demo_$1999",
																					"typeString": "contract CMBS20Demo"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_CMBS20Demo_$1999",
																					"typeString": "contract CMBS20Demo"
																				}
																			],
																			"id": 1528,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1527,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1530,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1525,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "2676:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																			"typeString": "contract ERC3643Token"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2682:9:10",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 616,
																	"src": "2676:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2676:30:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1533,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1501,
																		"src": "2723:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	],
																	"id": 1532,
																	"name": "_totalAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1602,
																	"src": "2710:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$",
																		"typeString": "function (uint256[] memory) pure returns (uint256)"
																	}
																},
																"id": 1534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2710:21:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:55:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f41444d494e5f42414c",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2733:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_214decfc806888f72503545abf1650c3cb8a88f29582b5986097444c27d475ad",
																"typeString": "literal_string \"INSUFFICIENT_ADMIN_BAL\""
															},
															"value": "INSUFFICIENT_ADMIN_BAL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_214decfc806888f72503545abf1650c3cb8a88f29582b5986097444c27d475ad",
																"typeString": "literal_string \"INSUFFICIENT_ADMIN_BAL\""
															}
														],
														"id": 1524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2668:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2668:90:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1538,
												"nodeType": "ExpressionStatement",
												"src": "2668:90:10"
											},
											{
												"body": {
													"id": 1571,
													"nodeType": "Block",
													"src": "2816:126:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1553,
																			"name": "investors",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "2845:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1555,
																		"indexExpression": {
																			"id": 1554,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "2855:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2845:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1556,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "2859:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1558,
																		"indexExpression": {
																			"id": 1557,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "2867:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2859:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1550,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1509,
																		"src": "2830:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																			"typeString": "contract ERC3643Token"
																		}
																	},
																	"id": 1552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2836:8:10",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2113,
																	"src": "2830:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 1559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2830:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1560,
															"nodeType": "ExpressionStatement",
															"src": "2830:40:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1562,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1495,
																		"src": "2902:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1563,
																			"name": "investors",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1498,
																			"src": "2906:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																				"typeString": "address[] calldata"
																			}
																		},
																		"id": 1565,
																		"indexExpression": {
																			"id": 1564,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "2916:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2906:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 1566,
																			"name": "amounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1501,
																			"src": "2920:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 1568,
																		"indexExpression": {
																			"id": 1567,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1540,
																			"src": "2928:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2920:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1561,
																	"name": "Distribution",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1379,
																	"src": "2889:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256)"
																	}
																},
																"id": 1569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2889:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1570,
															"nodeType": "EmitStatement",
															"src": "2884:47:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1543,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1540,
														"src": "2789:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1544,
															"name": "investors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "2793:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2803:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2793:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2789:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1572,
												"initializationExpression": {
													"assignments": [
														1540
													],
													"declarations": [
														{
															"constant": false,
															"id": 1540,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2782:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1572,
															"src": "2774:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1539,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2774:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1542,
													"initialValue": {
														"hexValue": "30",
														"id": 1541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2786:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2774:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2811:3:10",
														"subExpression": {
															"id": 1547,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "2813:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1549,
													"nodeType": "ExpressionStatement",
													"src": "2811:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2769:173:10"
											}
										]
									},
									"functionSelector": "897a3651",
									"id": 1574,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1504,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "2511:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1505,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1503,
												"name": "onlyRole",
												"nameLocations": [
													"2502:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "2502:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2502:28:10"
										}
									],
									"name": "distributeToInvestors",
									"nameLocation": "2371:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1495,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "2410:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2402:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2402:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "investors",
												"nameLocation": "2441:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2422:28:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1496,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2422:7:10",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1497,
													"nodeType": "ArrayTypeName",
													"src": "2422:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2479:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1574,
												"src": "2460:26:10",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1499,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2460:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1500,
													"nodeType": "ArrayTypeName",
													"src": "2460:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2392:100:10"
									},
									"returnParameters": {
										"id": 1506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:0:10"
									},
									"scope": 1999,
									"src": "2362:586:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "3034:95:10",
										"statements": [
											{
												"body": {
													"id": 1599,
													"nodeType": "Block",
													"src": "3085:38:10",
													"statements": [
														{
															"expression": {
																"id": 1597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1593,
																	"name": "sum",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "3099:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1594,
																		"name": "arr",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1577,
																		"src": "3106:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1596,
																	"indexExpression": {
																		"id": 1595,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1583,
																		"src": "3110:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3106:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3099:13:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1598,
															"nodeType": "ExpressionStatement",
															"src": "3099:13:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1586,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "3064:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1587,
															"name": "arr",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "3068:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3072:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3068:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3064:14:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1600,
												"initializationExpression": {
													"assignments": [
														1583
													],
													"declarations": [
														{
															"constant": false,
															"id": 1583,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3057:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1600,
															"src": "3049:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1582,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3049:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1585,
													"initialValue": {
														"hexValue": "30",
														"id": 1584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3049:13:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3080:3:10",
														"subExpression": {
															"id": 1590,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1583,
															"src": "3082:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1592,
													"nodeType": "ExpressionStatement",
													"src": "3080:3:10"
												},
												"nodeType": "ForStatement",
												"src": "3044:79:10"
											}
										]
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalAmount",
									"nameLocation": "2963:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "2993:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2976:20:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1575,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2976:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1576,
													"nodeType": "ArrayTypeName",
													"src": "2976:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:22:10"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "sum",
												"nameLocation": "3029:3:10",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "3021:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3021:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3020:13:10"
									},
									"scope": 1999,
									"src": "2954:175:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "3322:29:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1605,
														"name": "_accrueAllInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "3328:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3328:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "3328:20:10"
											}
										]
									},
									"functionSelector": "0bfed82a",
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "accrueAllInterest",
									"nameLocation": "3295:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:10"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3322:0:10"
									},
									"scope": 1999,
									"src": "3286:65:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "3397:416:10",
										"statements": [
											{
												"assignments": [
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "dt",
														"nameLocation": "3415:2:10",
														"nodeType": "VariableDeclaration",
														"scope": 1676,
														"src": "3407:10:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3407:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1618,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1614,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3420:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3426:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3420:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1616,
														"name": "lastAccrual",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "3438:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3420:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3407:42:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1619,
														"name": "dt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "3463:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3469:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3463:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1623,
												"nodeType": "IfStatement",
												"src": "3459:20:10",
												"trueBody": {
													"functionReturnParameters": 1611,
													"id": 1622,
													"nodeType": "Return",
													"src": "3472:7:10"
												}
											},
											{
												"expression": {
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1624,
														"name": "lastAccrual",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1346,
														"src": "3488:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1625,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3502:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3508:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3502:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3488:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1628,
												"nodeType": "ExpressionStatement",
												"src": "3488:29:10"
											},
											{
												"body": {
													"id": 1674,
													"nodeType": "Block",
													"src": "3576:231:10",
													"statements": [
														{
															"assignments": [
																1641
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1641,
																	"mutability": "mutable",
																	"name": "t",
																	"nameLocation": "3606:1:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1674,
																	"src": "3590:17:10",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																		"typeString": "struct CMBS20Demo.Tranche"
																	},
																	"typeName": {
																		"id": 1640,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1639,
																			"name": "Tranche",
																			"nameLocations": [
																				"3590:7:10"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1337,
																			"src": "3590:7:10"
																		},
																		"referencedDeclaration": 1337,
																		"src": "3590:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																			"typeString": "struct CMBS20Demo.Tranche"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1645,
															"initialValue": {
																"baseExpression": {
																	"id": 1642,
																	"name": "tranches",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "3610:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
																		"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche storage ref)"
																	}
																},
																"id": 1644,
																"indexExpression": {
																	"id": 1643,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1630,
																	"src": "3619:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3610:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Tranche_$1337_storage",
																	"typeString": "struct CMBS20Demo.Tranche storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3590:32:10"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1646,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "3640:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																			"typeString": "struct CMBS20Demo.Tranche storage pointer"
																		}
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3642:9:10",
																	"memberName": "principal",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1328,
																	"src": "3640:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3655:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3640:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1651,
															"nodeType": "IfStatement",
															"src": "3636:30:10",
															"trueBody": {
																"id": 1650,
																"nodeType": "Continue",
																"src": "3658:8:10"
															}
														},
														{
															"assignments": [
																1653
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1653,
																	"mutability": "mutable",
																	"name": "interest",
																	"nameLocation": "3688:8:10",
																	"nodeType": "VariableDeclaration",
																	"scope": 1674,
																	"src": "3680:16:10",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1652,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3680:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1667,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1660,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1658,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1654,
																						"name": "t",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1641,
																						"src": "3700:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																							"typeString": "struct CMBS20Demo.Tranche storage pointer"
																						}
																					},
																					"id": 1655,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3702:9:10",
																					"memberName": "principal",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1328,
																					"src": "3700:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 1656,
																						"name": "t",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1641,
																						"src": "3714:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																							"typeString": "struct CMBS20Demo.Tranche storage pointer"
																						}
																					},
																					"id": 1657,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3716:9:10",
																					"memberName": "couponBps",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1330,
																					"src": "3714:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3700:25:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1659,
																				"name": "dt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1613,
																				"src": "3728:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3700:30:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1661,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3699:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_rational_315360000000_by_1",
																				"typeString": "int_const 315360000000"
																			},
																			"id": 1664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "333635",
																				"id": 1662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3735:8:10",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_31536000_by_1",
																					"typeString": "int_const 31536000"
																				},
																				"value": "365"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"hexValue": "31305f303030",
																				"id": 1663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3746:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10000_by_1",
																					"typeString": "int_const 10000"
																				},
																				"value": "10_000"
																			},
																			"src": "3735:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_315360000000_by_1",
																				"typeString": "int_const 315360000000"
																			}
																		}
																	],
																	"id": 1665,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3734:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_315360000000_by_1",
																		"typeString": "int_const 315360000000"
																	}
																},
																"src": "3699:54:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3680:73:10"
														},
														{
															"expression": {
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1668,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "3767:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																			"typeString": "struct CMBS20Demo.Tranche storage pointer"
																		}
																	},
																	"id": 1670,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3769:15:10",
																	"memberName": "accruedInterest",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1334,
																	"src": "3767:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1671,
																	"name": "interest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "3788:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3767:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1673,
															"nodeType": "ExpressionStatement",
															"src": "3767:29:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1633,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1630,
														"src": "3550:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1634,
														"name": "nextTrancheId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "3555:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3550:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1675,
												"initializationExpression": {
													"assignments": [
														1630
													],
													"declarations": [
														{
															"constant": false,
															"id": 1630,
															"mutability": "mutable",
															"name": "id",
															"nameLocation": "3542:2:10",
															"nodeType": "VariableDeclaration",
															"scope": 1675,
															"src": "3534:10:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1629,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3534:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1632,
													"initialValue": {
														"hexValue": "30",
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3547:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3534:14:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1637,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3570:4:10",
														"subExpression": {
															"id": 1636,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1630,
															"src": "3572:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1638,
													"nodeType": "ExpressionStatement",
													"src": "3570:4:10"
												},
												"nodeType": "ForStatement",
												"src": "3529:278:10"
											}
										]
									},
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_accrueAllInterest",
									"nameLocation": "3367:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1610,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3385:2:10"
									},
									"returnParameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3397:0:10"
									},
									"scope": 1999,
									"src": "3358:455:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1823,
										"nodeType": "Block",
										"src": "4096:1019:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1690,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4134:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4138:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4134:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1694,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4154:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CMBS20Demo_$1999",
																				"typeString": "contract CMBS20Demo"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CMBS20Demo_$1999",
																				"typeString": "contract CMBS20Demo"
																			}
																		],
																		"id": 1693,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4146:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1692,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4146:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4146:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1696,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1679,
																	"src": "4161:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1688,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "4114:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4121:12:10",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1107,
																"src": "4114:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4114:54:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5452414e534645525f4641494c4544",
															"id": 1698,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4170:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															},
															"value": "TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8bf8f0d780f13740660fe63233b17f96cb1813889e7dce4121e55b817b367b72",
																"typeString": "literal_string \"TRANSFER_FAILED\""
															}
														],
														"id": 1687,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4106:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:82:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "4106:82:10"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1701,
														"name": "_accrueAllInterest",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1677,
														"src": "4198:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4198:20:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "4198:20:10"
											},
											{
												"assignments": [
													1705
												],
												"declarations": [
													{
														"constant": false,
														"id": 1705,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "4237:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1823,
														"src": "4229:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4229:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"id": 1706,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1679,
													"src": "4249:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4229:26:10"
											},
											{
												"body": {
													"id": 1811,
													"nodeType": "Block",
													"src": "4315:712:10",
													"statements": [
														{
															"body": {
																"id": 1809,
																"nodeType": "Block",
																"src": "4393:624:10",
																"statements": [
																	{
																		"assignments": [
																			1738
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1738,
																				"mutability": "mutable",
																				"name": "t",
																				"nameLocation": "4427:1:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1809,
																				"src": "4411:17:10",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																					"typeString": "struct CMBS20Demo.Tranche"
																				},
																				"typeName": {
																					"id": 1737,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1736,
																						"name": "Tranche",
																						"nameLocations": [
																							"4411:7:10"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 1337,
																						"src": "4411:7:10"
																					},
																					"referencedDeclaration": 1337,
																					"src": "4411:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1742,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1739,
																				"name": "tranches",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1351,
																				"src": "4431:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
																					"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche storage ref)"
																				}
																			},
																			"id": 1741,
																			"indexExpression": {
																				"id": 1740,
																				"name": "id",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1723,
																				"src": "4440:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4431:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Tranche_$1337_storage",
																				"typeString": "struct CMBS20Demo.Tranche storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4411:32:10"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1746,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1743,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "4465:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche storage pointer"
																					}
																				},
																				"id": 1744,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4467:9:10",
																				"memberName": "seniority",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1332,
																				"src": "4465:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "!=",
																			"rightExpression": {
																				"id": 1745,
																				"name": "s",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1709,
																				"src": "4480:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "4465:16:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1748,
																		"nodeType": "IfStatement",
																		"src": "4461:30:10",
																		"trueBody": {
																			"id": 1747,
																			"nodeType": "Continue",
																			"src": "4483:8:10"
																		}
																	},
																	{
																		"assignments": [
																			1750
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1750,
																				"mutability": "mutable",
																				"name": "payInt",
																				"nameLocation": "4518:6:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1809,
																				"src": "4510:14:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1749,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4510:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1759,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1754,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1751,
																						"name": "t",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1738,
																						"src": "4527:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																							"typeString": "struct CMBS20Demo.Tranche storage pointer"
																						}
																					},
																					"id": 1752,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4529:15:10",
																					"memberName": "accruedInterest",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1334,
																					"src": "4527:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"id": 1753,
																					"name": "remaining",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "4548:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4527:30:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"id": 1757,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "4580:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "4527:62:10",
																			"trueExpression": {
																				"expression": {
																					"id": 1755,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "4560:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche storage pointer"
																					}
																				},
																				"id": 1756,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4562:15:10",
																				"memberName": "accruedInterest",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1334,
																				"src": "4560:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4510:79:10"
																	},
																	{
																		"expression": {
																			"id": 1764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1760,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "4607:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche storage pointer"
																					}
																				},
																				"id": 1762,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4609:15:10",
																				"memberName": "accruedInterest",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1334,
																				"src": "4607:17:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1763,
																				"name": "payInt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1750,
																				"src": "4628:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4607:27:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1765,
																		"nodeType": "ExpressionStatement",
																		"src": "4607:27:10"
																	},
																	{
																		"expression": {
																			"id": 1770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1766,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "4652:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche storage pointer"
																					}
																				},
																				"id": 1768,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4654:13:10",
																				"memberName": "cashAvailable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1336,
																				"src": "4652:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1769,
																				"name": "payInt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1750,
																				"src": "4672:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4652:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1771,
																		"nodeType": "ExpressionStatement",
																		"src": "4652:26:10"
																	},
																	{
																		"expression": {
																			"id": 1774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1772,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "4696:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1773,
																				"name": "payInt",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1750,
																				"src": "4716:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4696:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1775,
																		"nodeType": "ExpressionStatement",
																		"src": "4696:26:10"
																	},
																	{
																		"assignments": [
																			1777
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1777,
																				"mutability": "mutable",
																				"name": "payPrin",
																				"nameLocation": "4749:7:10",
																				"nodeType": "VariableDeclaration",
																				"scope": 1809,
																				"src": "4741:15:10",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1776,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "4741:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1786,
																		"initialValue": {
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 1778,
																						"name": "t",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1738,
																						"src": "4759:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																							"typeString": "struct CMBS20Demo.Tranche storage pointer"
																						}
																					},
																					"id": 1779,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4761:9:10",
																					"memberName": "principal",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1328,
																					"src": "4759:11:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<=",
																				"rightExpression": {
																					"id": 1780,
																					"name": "remaining",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1705,
																					"src": "4774:9:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "4759:24:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"id": 1784,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "4800:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "4759:50:10",
																			"trueExpression": {
																				"expression": {
																					"id": 1782,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "4786:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche storage pointer"
																					}
																				},
																				"id": 1783,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4788:9:10",
																				"memberName": "principal",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1328,
																				"src": "4786:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "4741:68:10"
																	},
																	{
																		"expression": {
																			"id": 1791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1787,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "4827:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche storage pointer"
																					}
																				},
																				"id": 1789,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4829:9:10",
																				"memberName": "principal",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1328,
																				"src": "4827:11:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1790,
																				"name": "payPrin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1777,
																				"src": "4846:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4827:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1792,
																		"nodeType": "ExpressionStatement",
																		"src": "4827:26:10"
																	},
																	{
																		"expression": {
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 1793,
																					"name": "t",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1738,
																					"src": "4871:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																						"typeString": "struct CMBS20Demo.Tranche storage pointer"
																					}
																				},
																				"id": 1795,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "4873:13:10",
																				"memberName": "cashAvailable",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1336,
																				"src": "4871:15:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 1796,
																				"name": "payPrin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1777,
																				"src": "4890:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4871:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1798,
																		"nodeType": "ExpressionStatement",
																		"src": "4871:26:10"
																	},
																	{
																		"expression": {
																			"id": 1801,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1799,
																				"name": "remaining",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1705,
																				"src": "4915:9:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 1800,
																				"name": "payPrin",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1777,
																				"src": "4934:7:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4915:26:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1802,
																		"nodeType": "ExpressionStatement",
																		"src": "4915:26:10"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1804,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1723,
																					"src": "4982:2:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1805,
																					"name": "payInt",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1750,
																					"src": "4986:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1806,
																					"name": "payPrin",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1777,
																					"src": "4994:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1803,
																				"name": "PaymentAllocated",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1371,
																				"src": "4965:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (uint256,uint256,uint256)"
																				}
																			},
																			"id": 1807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4965:37:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1808,
																		"nodeType": "EmitStatement",
																		"src": "4960:42:10"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1728,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1726,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "4350:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 1727,
																		"name": "nextTrancheId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1344,
																		"src": "4355:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4350:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1729,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "4372:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4384:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4372:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4350:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1810,
															"initializationExpression": {
																"assignments": [
																	1723
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1723,
																		"mutability": "mutable",
																		"name": "id",
																		"nameLocation": "4342:2:10",
																		"nodeType": "VariableDeclaration",
																		"scope": 1810,
																		"src": "4334:10:10",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1722,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "4334:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1725,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4347:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "4334:14:10"
															},
															"isSimpleCounterLoop": false,
															"loopExpression": {
																"expression": {
																	"id": 1734,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": true,
																	"src": "4387:4:10",
																	"subExpression": {
																		"id": 1733,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1723,
																		"src": "4389:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1735,
																"nodeType": "ExpressionStatement",
																"src": "4387:4:10"
															},
															"nodeType": "ForStatement",
															"src": "4329:688:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1712,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "4284:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "323535",
															"id": 1713,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4288:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_255_by_1",
																"typeString": "int_const 255"
															},
															"value": "255"
														},
														"src": "4284:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1715,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "4295:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4307:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4295:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4284:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1812,
												"initializationExpression": {
													"assignments": [
														1709
													],
													"declarations": [
														{
															"constant": false,
															"id": 1709,
															"mutability": "mutable",
															"name": "s",
															"nameLocation": "4277:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1812,
															"src": "4271:7:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 1708,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "4271:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1711,
													"initialValue": {
														"hexValue": "30",
														"id": 1710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4271:11:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4310:3:10",
														"subExpression": {
															"id": 1719,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1709,
															"src": "4312:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1721,
													"nodeType": "ExpressionStatement",
													"src": "4310:3:10"
												},
												"nodeType": "ForStatement",
												"src": "4266:761:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5064:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1815,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5064:7:10",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 1814,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "5059:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5059:13:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "5073:3:10",
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "5059:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5078:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1820,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1705,
															"src": "5081:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1813,
														"name": "PaymentAllocated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1371,
														"src": "5042:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:49:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1822,
												"nodeType": "EmitStatement",
												"src": "5037:54:10"
											}
										]
									},
									"functionSelector": "bef6f540",
									"id": 1824,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1681,
												"name": "whenNotPaused",
												"nameLocations": [
													"4046:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1197,
												"src": "4046:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4046:13:10"
										},
										{
											"arguments": [
												{
													"id": 1684,
													"name": "SERVICER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1323,
													"src": "4077:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1685,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1683,
												"name": "onlyRole",
												"nameLocations": [
													"4068:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "4068:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4068:23:10"
										}
									],
									"name": "depositAndDistribute",
									"nameLocation": "3984:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1679,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4013:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1824,
												"src": "4005:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4005:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4004:16:10"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4096:0:10"
									},
									"scope": 1999,
									"src": "3975:1140:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1900,
										"nodeType": "Block",
										"src": "5335:484:10",
										"statements": [
											{
												"assignments": [
													1835
												],
												"declarations": [
													{
														"constant": false,
														"id": 1835,
														"mutability": "mutable",
														"name": "t",
														"nameLocation": "5361:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "5345:17:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
															"typeString": "struct CMBS20Demo.Tranche"
														},
														"typeName": {
															"id": 1834,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1833,
																"name": "Tranche",
																"nameLocations": [
																	"5345:7:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1337,
																"src": "5345:7:10"
															},
															"referencedDeclaration": 1337,
															"src": "5345:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																"typeString": "struct CMBS20Demo.Tranche"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1839,
												"initialValue": {
													"baseExpression": {
														"id": 1836,
														"name": "tranches",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "5365:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
															"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche storage ref)"
														}
													},
													"id": 1838,
													"indexExpression": {
														"id": 1837,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1826,
														"src": "5374:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5365:12:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Tranche_$1337_storage",
														"typeString": "struct CMBS20Demo.Tranche storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5345:32:10"
											},
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "5400:5:10",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "5387:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC3643Token_$2114",
															"typeString": "contract ERC3643Token"
														},
														"typeName": {
															"id": 1841,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1840,
																"name": "ERC3643Token",
																"nameLocations": [
																	"5387:12:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2114,
																"src": "5387:12:10"
															},
															"referencedDeclaration": 2114,
															"src": "5387:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																"typeString": "contract ERC3643Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1845,
												"initialValue": {
													"expression": {
														"id": 1843,
														"name": "t",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1835,
														"src": "5408:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
															"typeString": "struct CMBS20Demo.Tranche storage pointer"
														}
													},
													"id": 1844,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5410:5:10",
													"memberName": "token",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1326,
													"src": "5408:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC3643Token_$2114",
														"typeString": "contract ERC3643Token"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5387:28:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1849,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5449:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5453:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5449:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1847,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "5433:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																			"typeString": "contract ERC3643Token"
																		}
																	},
																	"id": 1848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5439:9:10",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 616,
																	"src": "5433:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1851,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5433:27:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1852,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1828,
																"src": "5464:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5433:37:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "494e53554646494349454e545f42414c",
															"id": 1854,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5472:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2204223a7bbd7b9038b89e38862936a74c38617cdd0a5a77f69c308f09676d00",
																"typeString": "literal_string \"INSUFFICIENT_BAL\""
															},
															"value": "INSUFFICIENT_BAL"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2204223a7bbd7b9038b89e38862936a74c38617cdd0a5a77f69c308f09676d00",
																"typeString": "literal_string \"INSUFFICIENT_BAL\""
															}
														],
														"id": 1846,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5425:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5425:66:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1856,
												"nodeType": "ExpressionStatement",
												"src": "5425:66:10"
											},
											{
												"assignments": [
													1858
												],
												"declarations": [
													{
														"constant": false,
														"id": 1858,
														"mutability": "mutable",
														"name": "proRata",
														"nameLocation": "5510:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1900,
														"src": "5502:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5502:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1868,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1859,
																		"name": "t",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "5521:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																			"typeString": "struct CMBS20Demo.Tranche storage pointer"
																		}
																	},
																	"id": 1860,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5523:13:10",
																	"memberName": "cashAvailable",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1336,
																	"src": "5521:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1861,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1828,
																	"src": "5539:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5521:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1863,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5520:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 1864,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "5549:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																	"typeString": "contract ERC3643Token"
																}
															},
															"id": 1865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5555:11:10",
															"memberName": "totalSupply",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 603,
															"src": "5549:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 1866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5549:19:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5520:48:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5502:66:10"
											},
											{
												"expression": {
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1869,
															"name": "t",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1835,
															"src": "5578:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Tranche_$1337_storage_ptr",
																"typeString": "struct CMBS20Demo.Tranche storage pointer"
															}
														},
														"id": 1871,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5580:13:10",
														"memberName": "cashAvailable",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1336,
														"src": "5578:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1872,
														"name": "proRata",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1858,
														"src": "5597:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5578:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1874,
												"nodeType": "ExpressionStatement",
												"src": "5578:26:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1878,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5626:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5630:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5626:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1880,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1828,
															"src": "5638:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1875,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "5615:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																"typeString": "contract ERC3643Token"
															}
														},
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5621:4:10",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2080,
														"src": "5615:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:30:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1882,
												"nodeType": "ExpressionStatement",
												"src": "5615:30:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1886,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5717:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5721:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5717:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1888,
																	"name": "proRata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "5729:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1884,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "5701:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5708:8:10",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1075,
																"src": "5701:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1889,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5701:36:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535441424c455f5452414e534645525f4641494c4544",
															"id": 1890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5739:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f4d1a6d7d8a25833c643917dbdc7ad6ec4bfa4e2dea45c3be822af24a621e299",
																"typeString": "literal_string \"STABLE_TRANSFER_FAILED\""
															},
															"value": "STABLE_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f4d1a6d7d8a25833c643917dbdc7ad6ec4bfa4e2dea45c3be822af24a621e299",
																"typeString": "literal_string \"STABLE_TRANSFER_FAILED\""
															}
														],
														"id": 1883,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5693:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5693:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "5693:71:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1894,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5788:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5792:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5788:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1896,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "5800:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1897,
															"name": "proRata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "5804:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1893,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1387,
														"src": "5779:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5779:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1899,
												"nodeType": "EmitStatement",
												"src": "5774:38:10"
											}
										]
									},
									"functionSelector": "441a3e70",
									"id": 1901,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1831,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1830,
												"name": "whenNotPaused",
												"nameLocations": [
													"5321:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1197,
												"src": "5321:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5321:13:10"
										}
									],
									"name": "withdraw",
									"nameLocation": "5275:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "5292:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5284:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1825,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5284:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1828,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5304:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1901,
												"src": "5296:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5283:28:10"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5335:0:10"
									},
									"scope": 1999,
									"src": "5266:553:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1910,
										"nodeType": "Block",
										"src": "6027:13:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1907,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1255,
														"src": "6029:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6029:8:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1909,
												"nodeType": "ExpressionStatement",
												"src": "6029:8:10"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1911,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1904,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "6007:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1905,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1903,
												"name": "onlyRole",
												"nameLocations": [
													"5998:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "5998:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "5998:28:10"
										}
									],
									"name": "pause",
									"nameLocation": "5981:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5986:2:10"
									},
									"returnParameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6027:0:10"
									},
									"scope": 1999,
									"src": "5972:68:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1920,
										"nodeType": "Block",
										"src": "6102:15:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1917,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1271,
														"src": "6104:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:10:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "6104:10:10"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1921,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1914,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "6082:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1915,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1913,
												"name": "onlyRole",
												"nameLocations": [
													"6073:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6073:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6073:28:10"
										}
									],
									"name": "unpause",
									"nameLocation": "6054:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6061:2:10"
									},
									"returnParameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6102:0:10"
									},
									"scope": 1999,
									"src": "6045:72:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1940,
										"nodeType": "Block",
										"src": "6204:69:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1934,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "6238:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1935,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1925,
																	"src": "6242:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1932,
																	"name": "stable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "6222:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1108",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6229:8:10",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1075,
																"src": "6222:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6222:27:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53574545505f4641494c4544",
															"id": 1937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6251:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87d1d38fa197450bc123268bc8a27ff3ab3aa012371a74033ddcd71362d34110",
																"typeString": "literal_string \"SWEEP_FAILED\""
															},
															"value": "SWEEP_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87d1d38fa197450bc123268bc8a27ff3ab3aa012371a74033ddcd71362d34110",
																"typeString": "literal_string \"SWEEP_FAILED\""
															}
														],
														"id": 1931,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6214:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:52:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1939,
												"nodeType": "ExpressionStatement",
												"src": "6214:52:10"
											}
										]
									},
									"functionSelector": "6ea056a9",
									"id": 1941,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1928,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 29,
													"src": "6184:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1929,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1927,
												"name": "onlyRole",
												"nameLocations": [
													"6175:8:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "6175:8:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "6175:28:10"
										}
									],
									"name": "sweep",
									"nameLocation": "6132:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6146:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "6138:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6138:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6158:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "6150:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6150:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6137:28:10"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6204:0:10"
									},
									"scope": 1999,
									"src": "6123:150:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "6481:56:10",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1948,
																	"name": "tranches",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "6498:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
																		"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche storage ref)"
																	}
																},
																"id": 1950,
																"indexExpression": {
																	"id": 1949,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "6507:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6498:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Tranche_$1337_storage",
																	"typeString": "struct CMBS20Demo.Tranche storage ref"
																}
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6511:5:10",
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1326,
															"src": "6498:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																"typeString": "contract ERC3643Token"
															}
														},
														"id": 1952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6517:11:10",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 603,
														"src": "6498:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 1953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6498:32:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1947,
												"id": 1954,
												"nodeType": "Return",
												"src": "6491:39:10"
											}
										]
									},
									"functionSelector": "bd85b039",
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6427:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6447:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "6439:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6439:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6438:12:10"
									},
									"returnParameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "6472:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6472:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6471:9:10"
									},
									"scope": 1999,
									"src": "6418:119:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "6602:112:10",
										"statements": [
											{
												"body": {
													"id": 1977,
													"nodeType": "Block",
													"src": "6659:49:10",
													"statements": [
														{
															"expression": {
																"id": 1975,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1971,
																	"name": "total",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1959,
																	"src": "6673:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1973,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1962,
																			"src": "6694:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1972,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1956,
																			1980
																		],
																		"referencedDeclaration": 1956,
																		"src": "6682:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6682:15:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6673:24:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1976,
															"nodeType": "ExpressionStatement",
															"src": "6673:24:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1965,
														"name": "id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1962,
														"src": "6633:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1966,
														"name": "nextTrancheId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1344,
														"src": "6638:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6633:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1978,
												"initializationExpression": {
													"assignments": [
														1962
													],
													"declarations": [
														{
															"constant": false,
															"id": 1962,
															"mutability": "mutable",
															"name": "id",
															"nameLocation": "6625:2:10",
															"nodeType": "VariableDeclaration",
															"scope": 1978,
															"src": "6617:10:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1961,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6617:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1964,
													"initialValue": {
														"hexValue": "30",
														"id": 1963,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6630:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6617:14:10"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1969,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6653:4:10",
														"subExpression": {
															"id": 1968,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1962,
															"src": "6655:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1970,
													"nodeType": "ExpressionStatement",
													"src": "6653:4:10"
												},
												"nodeType": "ForStatement",
												"src": "6612:96:10"
											}
										]
									},
									"functionSelector": "18160ddd",
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "6552:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6563:2:10"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "total",
												"nameLocation": "6595:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "6587:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6587:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6586:15:10"
									},
									"scope": 1999,
									"src": "6543:171:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "6800:61:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1994,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1982,
															"src": "6846:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 1989,
																	"name": "tranches",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "6817:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Tranche_$1337_storage_$",
																		"typeString": "mapping(uint256 => struct CMBS20Demo.Tranche storage ref)"
																	}
																},
																"id": 1991,
																"indexExpression": {
																	"id": 1990,
																	"name": "id",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1984,
																	"src": "6826:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6817:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Tranche_$1337_storage",
																	"typeString": "struct CMBS20Demo.Tranche storage ref"
																}
															},
															"id": 1992,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6830:5:10",
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1326,
															"src": "6817:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC3643Token_$2114",
																"typeString": "contract ERC3643Token"
															}
														},
														"id": 1993,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6836:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 616,
														"src": "6817:28:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6817:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1988,
												"id": 1996,
												"nodeType": "Return",
												"src": "6810:44:10"
											}
										]
									},
									"functionSelector": "00fdd58e",
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "6729:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6747:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "6739:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6739:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1984,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "6764:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "6756:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6756:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6738:29:10"
									},
									"returnParameters": {
										"id": 1988,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1987,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "6791:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6791:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6790:9:10"
									},
									"scope": 1999,
									"src": "6720:141:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2000,
							"src": "289:6574:10",
							"usedErrors": [
								305,
								308,
								1186,
								1189
							],
							"usedEvents": [
								317,
								326,
								335,
								1178,
								1183,
								1363,
								1371,
								1379,
								1387
							]
						}
					],
					"src": "32:6832:10"
				},
				"id": 10
			},
			"contracts/ERC3643Token.sol": {
				"ast": {
					"absolutePath": "contracts/ERC3643Token.sol",
					"exportedSymbols": {
						"AccessControl": [
							295
						],
						"Context": [
							1164
						],
						"ERC165": [
							1296
						],
						"ERC20": [
							1030
						],
						"ERC3643Token": [
							2114
						],
						"IAccessControl": [
							378
						],
						"IERC20": [
							1108
						],
						"IERC20Errors": [
							420
						],
						"IERC20Metadata": [
							1134
						]
					},
					"id": 2115,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2001,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2002,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 1031,
							"src": "58:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2003,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2115,
							"sourceUnit": 296,
							"src": "114:58:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2004,
										"name": "ERC20",
										"nameLocations": [
											"199:5:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1030,
										"src": "199:5:11"
									},
									"id": 2005,
									"nodeType": "InheritanceSpecifier",
									"src": "199:5:11"
								},
								{
									"baseName": {
										"id": 2006,
										"name": "AccessControl",
										"nameLocations": [
											"206:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 295,
										"src": "206:13:11"
									},
									"id": 2007,
									"nodeType": "InheritanceSpecifier",
									"src": "206:13:11"
								}
							],
							"canonicalName": "ERC3643Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2114,
							"linearizedBaseContracts": [
								2114,
								295,
								1296,
								1308,
								378,
								1030,
								420,
								1134,
								1108,
								1164
							],
							"name": "ERC3643Token",
							"nameLocation": "183:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "092c5b3b",
									"id": 2012,
									"mutability": "constant",
									"name": "CONTROLLER_ROLE",
									"nameLocation": "250:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "226:70:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2008,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "226:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "434f4e54524f4c4c45525f524f4c45",
												"id": 2010,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "278:17:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
													"typeString": "literal_string \"CONTROLLER_ROLE\""
												},
												"value": "CONTROLLER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7b765e0e932d348852a6f810bfa1ab891e259123f02db8cdcde614c570223357",
													"typeString": "literal_string \"CONTROLLER_ROLE\""
												}
											],
											"id": 2009,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "268:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2011,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "268:28:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 2017,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "326:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2114,
									"src": "302:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2013,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "302:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 2015,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "350:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 2014,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "340:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2016,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "340:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "415:469:11",
										"statements": [
											{
												"assignments": [
													2025
												],
												"declarations": [
													{
														"constant": false,
														"id": 2025,
														"mutability": "mutable",
														"name": "controller",
														"nameLocation": "433:10:11",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "425:18:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2024,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "425:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2027,
												"initialValue": {
													"hexValue": "307834373537344333313163443643374638623037434631386437373661323537313963363145453232",
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "446:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x47574C311cD6C7F8b07CF18d776a25719c61EE22"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "425:63:11"
											},
											{
												"assignments": [
													2029
												],
												"declarations": [
													{
														"constant": false,
														"id": 2029,
														"mutability": "mutable",
														"name": "minter",
														"nameLocation": "534:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "526:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2028,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "526:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2031,
												"initialValue": {
													"hexValue": "307834373537344333313163443643374638623037434631386437373661323537313963363145453232",
													"id": 2030,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "547:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x47574C311cD6C7F8b07CF18d776a25719c61EE22"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "526:63:11"
											},
											{
												"assignments": [
													2033
												],
												"declarations": [
													{
														"constant": false,
														"id": 2033,
														"mutability": "mutable",
														"name": "initialSupply",
														"nameLocation": "631:13:11",
														"nodeType": "VariableDeclaration",
														"scope": 2063,
														"src": "623:21:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2032,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "623:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2040,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2039,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "315f3030305f303030",
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "647:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000_by_1",
															"typeString": "int_const 1000000"
														},
														"value": "1_000_000"
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "3130",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "659:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 2036,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "663:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																	"typeString": "function () view returns (uint8)"
																}
															},
															"id": 2037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "663:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "659:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "647:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "623:50:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2042,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "713:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2043,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "733:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "737:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "733:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2041,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "702:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "702:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "702:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "CONTROLLER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2012,
															"src": "765:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2049,
															"name": "controller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2025,
															"src": "782:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2047,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "754:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "754:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2051,
												"nodeType": "ExpressionStatement",
												"src": "754:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2053,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "814:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2054,
															"name": "minter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2029,
															"src": "827:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2052,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 256,
														"src": "803:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "803:31:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "803:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2058,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "851:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "855:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "851:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2060,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2033,
															"src": "863:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2057,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "845:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "845:32:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2062,
												"nodeType": "ExpressionStatement",
												"src": "845:32:11"
											}
										]
									},
									"id": 2064,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "5472616e636865546f6b656e41",
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "391:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_0ed8514ffdcbec13554ad67dde3685cd790f38436a296bcece1d1c0ff0f1b78b",
														"typeString": "literal_string \"TrancheTokenA\""
													},
													"value": "TrancheTokenA"
												},
												{
													"hexValue": "545441",
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "408:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_b85adb7584037e8a01ad820b5b115393cc44617e9df681c574849f41d3715e3a",
														"typeString": "literal_string \"TTA\""
													},
													"value": "TTA"
												}
											],
											"id": 2022,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2019,
												"name": "ERC20",
												"nameLocations": [
													"385:5:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1030,
												"src": "385:5:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "385:29:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:2:11"
									},
									"returnParameters": {
										"id": 2023,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "415:0:11"
									},
									"scope": 2114,
									"src": "371:513:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "969:36:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2075,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2066,
															"src": "985:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2076,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2068,
															"src": "991:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2074,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "979:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "979:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "979:19:11"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2071,
													"name": "CONTROLLER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2012,
													"src": "952:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2072,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2070,
												"name": "onlyRole",
												"nameLocations": [
													"943:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "943:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "943:25:11"
										}
									],
									"name": "burn",
									"nameLocation": "899:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "912:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "904:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "904:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2068,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "926:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "918:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2067,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:30:11"
									},
									"returnParameters": {
										"id": 2073,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "969:0:11"
									},
									"scope": 2114,
									"src": "890:115:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "1084:34:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2091,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "1100:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2092,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "1104:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2090,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "1094:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:17:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2094,
												"nodeType": "ExpressionStatement",
												"src": "1094:17:11"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 2096,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2087,
													"name": "MINTER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2017,
													"src": "1071:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2088,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2086,
												"name": "onlyRole",
												"nameLocations": [
													"1062:8:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 40,
												"src": "1062:8:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "1062:21:11"
										}
									],
									"name": "mint",
									"nameLocation": "1020:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1033:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1025:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1025:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1045:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2096,
												"src": "1037:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1037:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1024:28:11"
									},
									"returnParameters": {
										"id": 2089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1084:0:11"
									},
									"scope": 2114,
									"src": "1011:107:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 2112,
										"nodeType": "Block",
										"src": "1201:89:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2108,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2098,
															"src": "1233:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2109,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "1237:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2106,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1218:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC3643Token_$2114_$",
																"typeString": "type(contract super ERC3643Token)"
															}
														},
														"id": 2107,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1224:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 640,
														"src": "1218:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 2110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1218:26:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2105,
												"id": 2111,
												"nodeType": "Return",
												"src": "1211:33:11"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 2113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1133:8:11",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2102,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1177:8:11"
									},
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1150:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "1142:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1142:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1162:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "1154:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1154:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:28:11"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "1195:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2103,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:6:11"
									},
									"scope": 2114,
									"src": "1124:166:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2115,
							"src": "174:1118:11",
							"usedErrors": [
								305,
								308,
								390,
								395,
								400,
								409,
								414,
								419
							],
							"usedEvents": [
								317,
								326,
								335,
								1042,
								1051
							]
						}
					],
					"src": "32:1262:11"
				},
				"id": 11
			}
		}
	}
}