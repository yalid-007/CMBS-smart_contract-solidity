{
	"id": "47eee0f058a92e815e7955beae064a12",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MockUSDC.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title GLDToken\n * @notice A simple ERC20 “Gold” token (GLD) with an initial mint.\n *         - Defaults to 18 decimals\n */\ncontract USDToken is ERC20 {\n    constructor(uint256 initialSupply) ERC20(\"USD\", \"USDC\") {\n        _mint(msg.sender, initialSupply);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/MockUSDC.sol": {
				"USDToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "GLDToken",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MockUSDC.sol\":250:390  contract USDToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/MockUSDC.sol\":283:388  constructor(uint256 initialSupply) ERC20(\"USD\", \"USDC\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xea, 0x1554d1)\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x04\n  dup2\n  mstore\n  0x20\n  add\n  shl(0xe0, 0x55534443)\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1656:1661  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1653  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1648:1661  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_9\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1681:1688  symbol_ */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1678  _symbol */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1671:1688  _symbol = symbol_ */\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1582:1695  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/MockUSDC.sol\":349:381  _mint(msg.sender, initialSupply) */\n  tag_11\n    /* \"contracts/MockUSDC.sol\":355:365  msg.sender */\n  caller\n    /* \"contracts/MockUSDC.sol\":367:380  initialSupply */\n  dup3\n    /* \"contracts/MockUSDC.sol\":349:354  _mint */\n  shl(0x20, tag_12)\n    /* \"contracts/MockUSDC.sol\":349:381  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"contracts/MockUSDC.sol\":283:388  constructor(uint256 initialSupply) ERC20(\"USD\", \"USDC\") {... */\n  pop\n    /* \"contracts/MockUSDC.sol\":250:390  contract USDToken is ERC20 {... */\n  jump(tag_37)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\ntag_12:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7509:7530  account == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\n  tag_15\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0xec442f05)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7582:7583  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3061:3112   */\n  mstore\n    /* \"#utility.yul\":3034:3052   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7553:7585  ERC20InvalidReceiver(address(0)) */\ntag_16:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7505:7596  if (account == address(0)) {... */\ntag_15:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  tag_18\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7621:7622  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7625:7632  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7634:7639  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7612  _update */\n  tag_19\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7605:7640  _update(address(0), account, value) */\n  jump\t// in\ntag_18:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7439:7647  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_19:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_21\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  swap1\n  swap2\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n  tag_24\n  swap1\n  pop\n  jump\ntag_21:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  dup4\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n  dup2\n  dup2\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n  iszero\n  tag_25\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  shl(0xe2, 0x391434e3)\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":3570:3602   */\n  dup6\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":3552:3603   */\n  mstore\n    /* \"#utility.yul\":3619:3637   */\n  0x24\n  dup2\n  add\n    /* \"#utility.yul\":3612:3646   */\n  dup3\n  swap1\n  mstore\n    /* \"#utility.yul\":3662:3680   */\n  0x44\n  dup2\n  add\n    /* \"#utility.yul\":3655:3689   */\n  dup4\n  swap1\n  mstore\n    /* \"#utility.yul\":3525:3543   */\n  0x64\n  add\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n  tag_16\n    /* \"#utility.yul\":3350:3695   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\ntag_25:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  dup5\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n  swap1\n  dup3\n  swap1\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n  0x02\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n  dup1\n  sload\n  dup3\n  swap1\n  sub\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n  jump(tag_29)\ntag_28:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  dup3\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n  dup1\n  sload\n  dup3\n  add\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\ntag_29:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n  dup4\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n  mload(0x40)\n  tag_30\n  swap2\n    /* \"#utility.yul\":3846:3871   */\n  dup2\n  mstore\n    /* \"#utility.yul\":3834:3836   */\n  0x20\n    /* \"#utility.yul\":3819:3837   */\n  add\n  swap1\n    /* \"#utility.yul\":3700:3877   */\n  jump\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\ntag_30:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:198   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_39:\n  pop\n    /* \"#utility.yul\":176:192   */\n  mload\n  swap2\n    /* \"#utility.yul\":14:198   */\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":203:330   */\ntag_32:\n    /* \"#utility.yul\":264:274   */\n  0x4e487b71\n    /* \"#utility.yul\":259:262   */\n  0xe0\n    /* \"#utility.yul\":255:275   */\n  shl\n    /* \"#utility.yul\":252:253   */\n  0x00\n    /* \"#utility.yul\":245:276   */\n  mstore\n    /* \"#utility.yul\":295:299   */\n  0x41\n    /* \"#utility.yul\":292:293   */\n  0x04\n    /* \"#utility.yul\":285:300   */\n  mstore\n    /* \"#utility.yul\":319:323   */\n  0x24\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":309:324   */\n  revert\n    /* \"#utility.yul\":335:715   */\ntag_33:\n    /* \"#utility.yul\":414:415   */\n  0x01\n    /* \"#utility.yul\":410:422   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":457:469   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":478:539   */\n  tag_42\n  jumpi\n    /* \"#utility.yul\":532:536   */\n  0x7f\n    /* \"#utility.yul\":524:530   */\n  dup3\n    /* \"#utility.yul\":520:537   */\n  and\n    /* \"#utility.yul\":510:537   */\n  swap2\n  pop\n    /* \"#utility.yul\":478:539   */\ntag_42:\n    /* \"#utility.yul\":585:587   */\n  0x20\n    /* \"#utility.yul\":577:583   */\n  dup3\n    /* \"#utility.yul\":574:588   */\n  lt\n    /* \"#utility.yul\":554:572   */\n  dup2\n    /* \"#utility.yul\":551:589   */\n  sub\n    /* \"#utility.yul\":548:709   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":631:641   */\n  0x4e487b71\n    /* \"#utility.yul\":626:629   */\n  0xe0\n    /* \"#utility.yul\":622:642   */\n  shl\n    /* \"#utility.yul\":619:620   */\n  0x00\n    /* \"#utility.yul\":612:643   */\n  mstore\n    /* \"#utility.yul\":666:670   */\n  0x22\n    /* \"#utility.yul\":663:664   */\n  0x04\n    /* \"#utility.yul\":656:671   */\n  mstore\n    /* \"#utility.yul\":694:698   */\n  0x24\n    /* \"#utility.yul\":691:692   */\n  0x00\n    /* \"#utility.yul\":684:699   */\n  revert\n    /* \"#utility.yul\":548:709   */\ntag_43:\n  pop\n    /* \"#utility.yul\":335:715   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":846:1389   */\ntag_35:\n    /* \"#utility.yul\":948:950   */\n  0x1f\n    /* \"#utility.yul\":943:946   */\n  dup3\n    /* \"#utility.yul\":940:951   */\n  gt\n    /* \"#utility.yul\":937:1383   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":984:985   */\n  0x00\n    /* \"#utility.yul\":1008:1013   */\n  dup2\n    /* \"#utility.yul\":1005:1006   */\n  0x00\n    /* \"#utility.yul\":998:1014   */\n  mstore\n    /* \"#utility.yul\":1052:1056   */\n  0x20\n    /* \"#utility.yul\":1049:1050   */\n  0x00\n    /* \"#utility.yul\":1039:1057   */\n  keccak256\n    /* \"#utility.yul\":1122:1124   */\n  0x1f\n    /* \"#utility.yul\":1110:1120   */\n  dup6\n    /* \"#utility.yul\":1106:1125   */\n  add\n    /* \"#utility.yul\":1103:1104   */\n  0x05\n    /* \"#utility.yul\":1099:1126   */\n  shr\n    /* \"#utility.yul\":1093:1097   */\n  dup2\n    /* \"#utility.yul\":1089:1127   */\n  add\n    /* \"#utility.yul\":1158:1162   */\n  0x20\n    /* \"#utility.yul\":1146:1156   */\n  dup7\n    /* \"#utility.yul\":1143:1163   */\n  lt\n    /* \"#utility.yul\":1140:1187   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":1181:1185   */\n  dup1\n    /* \"#utility.yul\":1140:1187   */\ntag_47:\n    /* \"#utility.yul\":1236:1238   */\n  0x1f\n    /* \"#utility.yul\":1231:1234   */\n  dup6\n    /* \"#utility.yul\":1227:1239   */\n  add\n    /* \"#utility.yul\":1224:1225   */\n  0x05\n    /* \"#utility.yul\":1220:1240   */\n  shr\n    /* \"#utility.yul\":1214:1218   */\n  dup3\n    /* \"#utility.yul\":1210:1241   */\n  add\n    /* \"#utility.yul\":1200:1241   */\n  swap2\n  pop\n    /* \"#utility.yul\":1291:1373   */\ntag_48:\n    /* \"#utility.yul\":1309:1311   */\n  dup2\n    /* \"#utility.yul\":1302:1307   */\n  dup2\n    /* \"#utility.yul\":1299:1312   */\n  lt\n    /* \"#utility.yul\":1291:1373   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1354:1371   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1335:1336   */\n  0x01\n    /* \"#utility.yul\":1324:1337   */\n  add\n    /* \"#utility.yul\":1291:1373   */\n  jump(tag_48)\ntag_50:\n    /* \"#utility.yul\":1295:1298   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":937:1383   */\ntag_46:\n    /* \"#utility.yul\":846:1389   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1565:2910   */\ntag_8:\n    /* \"#utility.yul\":1685:1695   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1707:1737   */\n  dup2\n  gt\n    /* \"#utility.yul\":1704:1760   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1740:1758   */\n  tag_54\n  tag_32\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1769:1866   */\n  tag_55\n    /* \"#utility.yul\":1859:1865   */\n  dup2\n    /* \"#utility.yul\":1819:1857   */\n  tag_56\n    /* \"#utility.yul\":1851:1855   */\n  dup5\n    /* \"#utility.yul\":1845:1856   */\n  sload\n    /* \"#utility.yul\":1819:1857   */\n  tag_33\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1813:1817   */\n  dup5\n    /* \"#utility.yul\":1769:1866   */\n  tag_35\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1921:1925   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1978:1980   */\n  0x1f\n    /* \"#utility.yul\":1967:1981   */\n  dup4\n  gt\n    /* \"#utility.yul\":1995:1996   */\n  0x01\n    /* \"#utility.yul\":1990:2653   */\n  dup2\n  eq\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2697:2698   */\n  0x00\n    /* \"#utility.yul\":2714:2720   */\n  dup5\n    /* \"#utility.yul\":2711:2800   */\n  iszero\n  tag_59\n  jumpi\n  pop\n    /* \"#utility.yul\":2766:2785   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2760:2786   */\n  mload\n    /* \"#utility.yul\":2711:2800   */\ntag_59:\n  not(0x00)\n    /* \"#utility.yul\":1522:1523   */\n  0x03\n    /* \"#utility.yul\":1518:1529   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1514:1538   */\n  shr\n    /* \"#utility.yul\":1510:1539   */\n  not\n    /* \"#utility.yul\":1500:1540   */\n  and\n    /* \"#utility.yul\":1546:1547   */\n  0x01\n    /* \"#utility.yul\":1542:1553   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1497:1554   */\n  or\n    /* \"#utility.yul\":2813:2894   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1960:2904   */\n  jump(tag_50)\n    /* \"#utility.yul\":1990:2653   */\ntag_58:\n    /* \"#utility.yul\":793:794   */\n  0x00\n    /* \"#utility.yul\":786:800   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":817:835   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2026:2046   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":2144:2380   */\ntag_62:\n    /* \"#utility.yul\":2158:2165   */\n  dup3\n    /* \"#utility.yul\":2155:2156   */\n  dup2\n    /* \"#utility.yul\":2152:2166   */\n  lt\n    /* \"#utility.yul\":2144:2380   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2247:2266   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2241:2267   */\n  mload\n    /* \"#utility.yul\":2226:2268   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2339:2366   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2307:2308   */\n  0x01\n    /* \"#utility.yul\":2295:2309   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":2174:2193   */\n  dup5\n  add\n    /* \"#utility.yul\":2144:2380   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":2148:2151   */\n  pop\n    /* \"#utility.yul\":2408:2414   */\n  dup6\n    /* \"#utility.yul\":2399:2406   */\n  dup3\n    /* \"#utility.yul\":2396:2415   */\n  lt\n    /* \"#utility.yul\":2393:2594   */\n  iszero\n  tag_65\n  jumpi\n    /* \"#utility.yul\":2469:2488   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2463:2489   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2552:2553   */\n  0x03\n    /* \"#utility.yul\":2548:2562   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2564:2567   */\n  0xf8\n    /* \"#utility.yul\":2544:2568   */\n  and\n    /* \"#utility.yul\":2540:2577   */\n  shr\n    /* \"#utility.yul\":2536:2578   */\n  not\n    /* \"#utility.yul\":2521:2579   */\n  and\n    /* \"#utility.yul\":2506:2580   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2393:2594   */\ntag_65:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2640:2641   */\n  0x01\n    /* \"#utility.yul\":2624:2638   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2620:2642   */\n  add\n    /* \"#utility.yul\":2607:2643   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1565:2910   */\n  jump\t// out\n    /* \"#utility.yul\":3123:3345   */\ntag_23:\n    /* \"#utility.yul\":3188:3197   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":3209:3219   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":3206:3339   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":3261:3271   */\n  0x4e487b71\n    /* \"#utility.yul\":3256:3259   */\n  0xe0\n    /* \"#utility.yul\":3252:3272   */\n  shl\n    /* \"#utility.yul\":3249:3250   */\n  0x00\n    /* \"#utility.yul\":3242:3273   */\n  mstore\n    /* \"#utility.yul\":3296:3300   */\n  0x11\n    /* \"#utility.yul\":3293:3294   */\n  0x04\n    /* \"#utility.yul\":3286:3301   */\n  mstore\n    /* \"#utility.yul\":3324:3328   */\n  0x24\n    /* \"#utility.yul\":3321:3322   */\n  0x00\n    /* \"#utility.yul\":3314:3329   */\n  revert\n    /* \"#utility.yul\":3206:3339   */\ntag_68:\n    /* \"#utility.yul\":3123:3345   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3700:3877   */\ntag_37:\n    /* \"contracts/MockUSDC.sol\":250:390  contract USDToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MockUSDC.sol\":250:390  contract USDToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x313ce567\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1192:1206   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1185:1207   */\n      iszero\n        /* \"#utility.yul\":1167:1208   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1155:1157   */\n      0x20\n        /* \"#utility.yul\":1140:1158   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1027:1214   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2908:2920  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n    tag_24:\n      mload(0x40)\n        /* \"#utility.yul\":1365:1390   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1353:1355   */\n      0x20\n        /* \"#utility.yul\":1338:1356   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2830:2927  function totalSupply() public view virtual returns (uint256) {... */\n      tag_16\n        /* \"#utility.yul\":1219:1396   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_18\n      tag_29\n      calldatasize\n      0x04\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2761:2763  18 */\n      0x12\n        /* \"#utility.yul\":1876:1912   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1864:1866   */\n      0x20\n        /* \"#utility.yul\":1849:1867   */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2688:2770  function decimals() public view virtual returns (uint8) {... */\n      tag_16\n        /* \"#utility.yul\":1734:1918   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_8:\n      tag_24\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3050:3057  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3076:3094  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2985:3101  function balanceOf(address account) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_9:\n      tag_14\n      tag_43\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_10:\n      tag_18\n      tag_46\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_24\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3612:3619  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3532:3672  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1805:1818  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1837:1842  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1830:1842  return _name */\n      dup1\n      sload\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_57\n      swap1\n      tag_56\n      jump\t// in\n    tag_57:\n      dup1\n      iszero\n      tag_58\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_59\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_58)\n    tag_59:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_60:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_60\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1760:1849  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4052:4056  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      tag_64\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4122:4129  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4131:4136  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4114  _approve */\n      tag_65\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4106:4137  _approve(owner, spender, value) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4154:4158  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4147:4158  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3979:4165  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4844:4848  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      tag_69\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4916:4920  from */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4931:4936  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4915  _spendAllowance */\n      tag_70\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4900:4937  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      tag_71\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4957:4961  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4963:4965  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4967:4972  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4956  _transfer */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4947:4973  _transfer(from, to, value) */\n      jump\t// in\n    tag_71:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4990:4994  true */\n      0x01\n      swap5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4757:5001  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:2055  function symbol() public view virtual returns (string memory) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2009:2022  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2041:2048  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2034:2048  return _symbol */\n      dup1\n      sload\n      tag_55\n      swap1\n      tag_56\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3296:3474  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3369  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      tag_64\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3436:3438  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3440:3445  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3428  _transfer */\n      tag_72\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3419:3446  _transfer(owner, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8800:8805  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8807:8814  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8816:8821  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8823:8827  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8799  _approve */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8791:8828  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_87:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8707:8835  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      dup4\n      dup2\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10495:10519  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3649  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3656  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3638:3665  _allowances[owner][spender] */\n      swap4\n      dup7\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n      sload\n      not(0x00)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10561:10597  currentAllowance < type(uint256).max */\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10557:10866  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10636:10641  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10633  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10617:10641  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n      iszero\n      tag_92\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3041:3096   */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3023:3097   */\n      mstore\n        /* \"#utility.yul\":3113:3131   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3106:3140   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3156:3174   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3149:3183   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2996:3014   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10668:10728  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10613:10743  if (currentAllowance < value) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10793:10798  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10800:10807  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10833  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10825  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10809:10833  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10835:10840  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10792  _approve */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10784:10841  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10485:10872  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10396:10872  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5374:5674  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5457:5475  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n      tag_97\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5525:5526  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3340:3414   */\n      mstore\n        /* \"#utility.yul\":3313:3331   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5498:5528  ERC20InvalidSender(address(0)) */\n      tag_93\n        /* \"#utility.yul\":3194:3420   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5453:5539  if (from == address(0)) {... */\n    tag_97:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5552:5568  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n      tag_100\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5620:5621  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3340:3414   */\n      mstore\n        /* \"#utility.yul\":3313:3331   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5591:5623  ERC20InvalidReceiver(address(0)) */\n      tag_93\n        /* \"#utility.yul\":3194:3420   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5548:5634  if (to == address(0)) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      tag_87\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5651:5655  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5657:5659  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5661:5666  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5650  _update */\n      tag_103\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5643:5667  _update(from, to, value) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_88:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9794:9813  owner == address(0) */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n      tag_105\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9865:9866  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3340:3414   */\n      mstore\n        /* \"#utility.yul\":3313:3331   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9836:9868  ERC20InvalidApprover(address(0)) */\n      tag_93\n        /* \"#utility.yul\":3194:3420   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9790:9879  if (owner == address(0)) {... */\n    tag_105:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9892:9913  spender == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n      tag_107\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9964:9965  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3340:3414   */\n      mstore\n        /* \"#utility.yul\":3313:3331   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9936:9967  ERC20InvalidSpender(address(0)) */\n      tag_93\n        /* \"#utility.yul\":3194:3420   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9888:9978  if (spender == address(0)) {... */\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:9998  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10005  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10014  _allowances[owner][spender] */\n      swap4\n      dup8\n      and\n      dup4\n      mstore\n      swap3\n      swap1\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9987:10022  _allowances[owner][spender] = value */\n      dup3\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10032:10108  if (emitEvent) {... */\n      dup1\n      iszero\n      tag_95\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10082:10089  spender */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10075:10080  owner */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10091:10096  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_110\n      swap2\n        /* \"#utility.yul\":1365:1390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1353:1355   */\n      0x20\n        /* \"#utility.yul\":1338:1356   */\n      add\n      swap1\n        /* \"#utility.yul\":1219:1396   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10066:10097  Approval(owner, spender, value) */\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9682:10114  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6078:6096  from == address(0) */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6230:6235  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6226  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6214:6235  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n      tag_115\n      swap1\n      pop\n      jump\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      dup4\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6266:6285  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6303  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6321:6340  fromBalance < value */\n      dup2\n      dup2\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3041:3096   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3023:3097   */\n      mstore\n        /* \"#utility.yul\":3113:3131   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3106:3140   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":3156:3174   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":3149:3183   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":2996:3014   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6417  ERC20InsufficientBalance(from, fromBalance, value) */\n      tag_93\n        /* \"#utility.yul\":2821:3189   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6432  if (fromBalance < value) {... */\n    tag_116:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      dup5\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6561  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6567  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6589  fromBalance - value */\n      swap1\n      dup3\n      swap1\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6552:6589  _balances[from] = fromBalance - value */\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6074:6614  if (from == address(0)) {... */\n    tag_115:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6628:6644  to == address(0) */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      tag_118\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6803  _totalSupply */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6791:6812  _totalSupply -= value */\n      dup1\n      sload\n      dup3\n      swap1\n      sub\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n      jump(tag_119)\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7011  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7015  _balances[to] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7002:7024  _balances[to] += value */\n      dup1\n      sload\n      dup3\n      add\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6624:7049  if (to == address(0)) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7079:7081  to */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7077  from */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7088  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n      mload(0x40)\n      tag_120\n      swap2\n        /* \"#utility.yul\":1365:1390   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1353:1355   */\n      0x20\n        /* \"#utility.yul\":1338:1356   */\n      add\n      swap1\n        /* \"#utility.yul\":1219:1396   */\n      jump\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7064:7089  Transfer(from, to, value) */\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5989:7096  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:562   */\n    tag_17:\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":155:157   */\n      0x20\n        /* \"#utility.yul\":184:186   */\n      dup1\n        /* \"#utility.yul\":173:182   */\n      dup4\n        /* \"#utility.yul\":166:187   */\n      mstore\n        /* \"#utility.yul\":216:222   */\n      dup4\n        /* \"#utility.yul\":210:223   */\n      mload\n        /* \"#utility.yul\":259:265   */\n      dup1\n        /* \"#utility.yul\":254:256   */\n      0x20\n        /* \"#utility.yul\":243:252   */\n      dup6\n        /* \"#utility.yul\":239:257   */\n      add\n        /* \"#utility.yul\":232:266   */\n      mstore\n        /* \"#utility.yul\":284:285   */\n      0x00\n        /* \"#utility.yul\":294:434   */\n    tag_124:\n        /* \"#utility.yul\":308:314   */\n      dup2\n        /* \"#utility.yul\":305:306   */\n      dup2\n        /* \"#utility.yul\":302:315   */\n      lt\n        /* \"#utility.yul\":294:434   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":403:417   */\n      dup6\n      dup2\n      add\n        /* \"#utility.yul\":399:422   */\n      dup4\n      add\n        /* \"#utility.yul\":393:423   */\n      mload\n        /* \"#utility.yul\":369:386   */\n      dup6\n      dup3\n      add\n        /* \"#utility.yul\":388:390   */\n      0x40\n        /* \"#utility.yul\":365:391   */\n      add\n        /* \"#utility.yul\":358:424   */\n      mstore\n        /* \"#utility.yul\":323:333   */\n      dup3\n      add\n        /* \"#utility.yul\":294:434   */\n      jump(tag_124)\n    tag_126:\n        /* \"#utility.yul\":298:301   */\n      pop\n        /* \"#utility.yul\":483:484   */\n      0x00\n        /* \"#utility.yul\":478:480   */\n      0x40\n        /* \"#utility.yul\":469:475   */\n      dup3\n        /* \"#utility.yul\":458:467   */\n      dup7\n        /* \"#utility.yul\":454:476   */\n      add\n        /* \"#utility.yul\":450:481   */\n      add\n        /* \"#utility.yul\":443:485   */\n      mstore\n        /* \"#utility.yul\":553:555   */\n      0x40\n        /* \"#utility.yul\":546:548   */\n      0x1f\n        /* \"#utility.yul\":542:549   */\n      not\n        /* \"#utility.yul\":537:539   */\n      0x1f\n        /* \"#utility.yul\":529:535   */\n      dup4\n        /* \"#utility.yul\":525:540   */\n      add\n        /* \"#utility.yul\":521:550   */\n      and\n        /* \"#utility.yul\":510:519   */\n      dup6\n        /* \"#utility.yul\":506:551   */\n      add\n        /* \"#utility.yul\":502:556   */\n      add\n        /* \"#utility.yul\":494:556   */\n      swap3\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":567:763   */\n    tag_121:\n        /* \"#utility.yul\":635:655   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":684:738   */\n      dup2\n      and\n        /* \"#utility.yul\":674:739   */\n      dup2\n      eq\n        /* \"#utility.yul\":664:757   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":753:754   */\n      0x00\n        /* \"#utility.yul\":750:751   */\n      dup1\n        /* \"#utility.yul\":743:755   */\n      revert\n        /* \"#utility.yul\":664:757   */\n    tag_128:\n        /* \"#utility.yul\":567:763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":768:1022   */\n    tag_20:\n        /* \"#utility.yul\":836:842   */\n      0x00\n        /* \"#utility.yul\":844:850   */\n      dup1\n        /* \"#utility.yul\":897:899   */\n      0x40\n        /* \"#utility.yul\":885:894   */\n      dup4\n        /* \"#utility.yul\":876:883   */\n      dup6\n        /* \"#utility.yul\":872:895   */\n      sub\n        /* \"#utility.yul\":868:900   */\n      slt\n        /* \"#utility.yul\":865:917   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":913:914   */\n      0x00\n        /* \"#utility.yul\":910:911   */\n      dup1\n        /* \"#utility.yul\":903:915   */\n      revert\n        /* \"#utility.yul\":865:917   */\n    tag_130:\n        /* \"#utility.yul\":936:965   */\n      tag_131\n        /* \"#utility.yul\":955:964   */\n      dup4\n        /* \"#utility.yul\":936:965   */\n      tag_121\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":926:965   */\n      swap5\n        /* \"#utility.yul\":1012:1014   */\n      0x20\n        /* \"#utility.yul\":997:1015   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":984:1016   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":768:1022   */\n      jump\t// out\n        /* \"#utility.yul\":1401:1729   */\n    tag_30:\n        /* \"#utility.yul\":1478:1484   */\n      0x00\n        /* \"#utility.yul\":1486:1492   */\n      dup1\n        /* \"#utility.yul\":1494:1500   */\n      0x00\n        /* \"#utility.yul\":1547:1549   */\n      0x60\n        /* \"#utility.yul\":1535:1544   */\n      dup5\n        /* \"#utility.yul\":1526:1533   */\n      dup7\n        /* \"#utility.yul\":1522:1545   */\n      sub\n        /* \"#utility.yul\":1518:1550   */\n      slt\n        /* \"#utility.yul\":1515:1567   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":1563:1564   */\n      0x00\n        /* \"#utility.yul\":1560:1561   */\n      dup1\n        /* \"#utility.yul\":1553:1565   */\n      revert\n        /* \"#utility.yul\":1515:1567   */\n    tag_135:\n        /* \"#utility.yul\":1586:1615   */\n      tag_136\n        /* \"#utility.yul\":1605:1614   */\n      dup5\n        /* \"#utility.yul\":1586:1615   */\n      tag_121\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1576:1615   */\n      swap3\n      pop\n        /* \"#utility.yul\":1634:1672   */\n      tag_137\n        /* \"#utility.yul\":1668:1670   */\n      0x20\n        /* \"#utility.yul\":1657:1666   */\n      dup6\n        /* \"#utility.yul\":1653:1671   */\n      add\n        /* \"#utility.yul\":1634:1672   */\n      tag_121\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1624:1672   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:1721   */\n      0x40\n        /* \"#utility.yul\":1708:1717   */\n      dup5\n        /* \"#utility.yul\":1704:1722   */\n      add\n        /* \"#utility.yul\":1691:1723   */\n      calldataload\n        /* \"#utility.yul\":1681:1723   */\n      swap1\n      pop\n        /* \"#utility.yul\":1401:1729   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1923:2109   */\n    tag_39:\n        /* \"#utility.yul\":1982:1988   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup3\n        /* \"#utility.yul\":2014:2021   */\n      dup5\n        /* \"#utility.yul\":2010:2033   */\n      sub\n        /* \"#utility.yul\":2006:2038   */\n      slt\n        /* \"#utility.yul\":2003:2055   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2051:2052   */\n      0x00\n        /* \"#utility.yul\":2048:2049   */\n      dup1\n        /* \"#utility.yul\":2041:2053   */\n      revert\n        /* \"#utility.yul\":2003:2055   */\n    tag_140:\n        /* \"#utility.yul\":2074:2103   */\n      tag_141\n        /* \"#utility.yul\":2093:2102   */\n      dup3\n        /* \"#utility.yul\":2074:2103   */\n      tag_121\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":2064:2103   */\n      swap4\n        /* \"#utility.yul\":1923:2109   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2114:2374   */\n    tag_51:\n        /* \"#utility.yul\":2182:2188   */\n      0x00\n        /* \"#utility.yul\":2190:2196   */\n      dup1\n        /* \"#utility.yul\":2243:2245   */\n      0x40\n        /* \"#utility.yul\":2231:2240   */\n      dup4\n        /* \"#utility.yul\":2222:2229   */\n      dup6\n        /* \"#utility.yul\":2218:2241   */\n      sub\n        /* \"#utility.yul\":2214:2246   */\n      slt\n        /* \"#utility.yul\":2211:2263   */\n      iszero\n      tag_143\n      jumpi\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2256:2257   */\n      dup1\n        /* \"#utility.yul\":2249:2261   */\n      revert\n        /* \"#utility.yul\":2211:2263   */\n    tag_143:\n        /* \"#utility.yul\":2282:2311   */\n      tag_144\n        /* \"#utility.yul\":2301:2310   */\n      dup4\n        /* \"#utility.yul\":2282:2311   */\n      tag_121\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":2272:2311   */\n      swap2\n      pop\n        /* \"#utility.yul\":2330:2368   */\n      tag_145\n        /* \"#utility.yul\":2364:2366   */\n      0x20\n        /* \"#utility.yul\":2353:2362   */\n      dup5\n        /* \"#utility.yul\":2349:2367   */\n      add\n        /* \"#utility.yul\":2330:2368   */\n      tag_121\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":2320:2368   */\n      swap1\n      pop\n        /* \"#utility.yul\":2114:2374   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2379:2816   */\n    tag_56:\n        /* \"#utility.yul\":2458:2459   */\n      0x01\n        /* \"#utility.yul\":2454:2466   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2501:2513   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2522:2583   */\n      tag_147\n      jumpi\n        /* \"#utility.yul\":2576:2580   */\n      0x7f\n        /* \"#utility.yul\":2568:2574   */\n      dup3\n        /* \"#utility.yul\":2564:2581   */\n      and\n        /* \"#utility.yul\":2554:2581   */\n      swap2\n      pop\n        /* \"#utility.yul\":2522:2583   */\n    tag_147:\n        /* \"#utility.yul\":2629:2631   */\n      0x20\n        /* \"#utility.yul\":2621:2627   */\n      dup3\n        /* \"#utility.yul\":2618:2632   */\n      lt\n        /* \"#utility.yul\":2598:2616   */\n      dup2\n        /* \"#utility.yul\":2595:2633   */\n      sub\n        /* \"#utility.yul\":2592:2810   */\n      tag_148\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":2663:2664   */\n      0x00\n        /* \"#utility.yul\":2656:2744   */\n      mstore\n        /* \"#utility.yul\":2767:2771   */\n      0x22\n        /* \"#utility.yul\":2764:2765   */\n      0x04\n        /* \"#utility.yul\":2757:2772   */\n      mstore\n        /* \"#utility.yul\":2795:2799   */\n      0x24\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2785:2800   */\n      revert\n        /* \"#utility.yul\":2592:2810   */\n    tag_148:\n      pop\n        /* \"#utility.yul\":2379:2816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3425:3704   */\n    tag_114:\n        /* \"#utility.yul\":3490:3499   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3511:3521   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3508:3698   */\n      iszero\n      tag_61\n      jumpi\n      shl(0xe0, 0x4e487b71)\n        /* \"#utility.yul\":3551:3552   */\n      0x00\n        /* \"#utility.yul\":3544:3632   */\n      mstore\n        /* \"#utility.yul\":3655:3659   */\n      0x11\n        /* \"#utility.yul\":3652:3653   */\n      0x04\n        /* \"#utility.yul\":3645:3660   */\n      mstore\n        /* \"#utility.yul\":3683:3687   */\n      0x24\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3673:3688   */\n      revert\n\n    auxdata: 0xa2646970667358221220ed1deb080d277878993a0449dd2fdec4549742ec7b8fc5291ab0c3f7d8eb097464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_188": {
									"entryPoint": null,
									"id": 188,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_807": {
									"entryPoint": null,
									"id": 807,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_491": {
									"entryPoint": 169,
									"id": 491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 235,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 650,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3879:6",
										"nodeType": "YulBlock",
										"src": "0:3879:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "95:103:6",
													"nodeType": "YulBlock",
													"src": "95:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "141:16:6",
																"nodeType": "YulBlock",
																"src": "141:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "150:1:6",
																					"nodeType": "YulLiteral",
																					"src": "150:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "153:1:6",
																					"nodeType": "YulLiteral",
																					"src": "153:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "143:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:6"
																			},
																			"nativeSrc": "143:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:6"
																		},
																		"nativeSrc": "143:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "116:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "125:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "112:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:6"
																		},
																		"nativeSrc": "112:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "137:2:6",
																		"nodeType": "YulLiteral",
																		"src": "137:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "108:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:6"
																},
																"nativeSrc": "108:32:6",
																"nodeType": "YulFunctionCall",
																"src": "108:32:6"
															},
															"nativeSrc": "105:52:6",
															"nodeType": "YulIf",
															"src": "105:52:6"
														},
														{
															"nativeSrc": "166:26:6",
															"nodeType": "YulAssignment",
															"src": "166:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "182:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "182:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "176:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "176:5:6"
																},
																"nativeSrc": "176:16:6",
																"nodeType": "YulFunctionCall",
																"src": "176:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "14:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "61:9:6",
														"nodeType": "YulTypedName",
														"src": "61:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "72:7:6",
														"nodeType": "YulTypedName",
														"src": "72:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "84:6:6",
														"nodeType": "YulTypedName",
														"src": "84:6:6",
														"type": ""
													}
												],
												"src": "14:184:6"
											},
											{
												"body": {
													"nativeSrc": "235:95:6",
													"nodeType": "YulBlock",
													"src": "235:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "252:1:6",
																		"nodeType": "YulLiteral",
																		"src": "252:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "259:3:6",
																				"nodeType": "YulLiteral",
																				"src": "259:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "264:10:6",
																				"nodeType": "YulLiteral",
																				"src": "264:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "255:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:6"
																		},
																		"nativeSrc": "255:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "255:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "245:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "245:6:6"
																},
																"nativeSrc": "245:31:6",
																"nodeType": "YulFunctionCall",
																"src": "245:31:6"
															},
															"nativeSrc": "245:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "245:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "292:1:6",
																		"nodeType": "YulLiteral",
																		"src": "292:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "295:4:6",
																		"nodeType": "YulLiteral",
																		"src": "295:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "285:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "285:6:6"
																},
																"nativeSrc": "285:15:6",
																"nodeType": "YulFunctionCall",
																"src": "285:15:6"
															},
															"nativeSrc": "285:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "285:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "316:1:6",
																		"nodeType": "YulLiteral",
																		"src": "316:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "319:4:6",
																		"nodeType": "YulLiteral",
																		"src": "319:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "309:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "309:6:6"
																},
																"nativeSrc": "309:15:6",
																"nodeType": "YulFunctionCall",
																"src": "309:15:6"
															},
															"nativeSrc": "309:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "309:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "203:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "203:127:6"
											},
											{
												"body": {
													"nativeSrc": "390:325:6",
													"nodeType": "YulBlock",
													"src": "390:325:6",
													"statements": [
														{
															"nativeSrc": "400:22:6",
															"nodeType": "YulAssignment",
															"src": "400:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "414:1:6",
																		"nodeType": "YulLiteral",
																		"src": "414:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "417:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "417:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "410:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "410:3:6"
																},
																"nativeSrc": "410:12:6",
																"nodeType": "YulFunctionCall",
																"src": "410:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "400:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:6"
																}
															]
														},
														{
															"nativeSrc": "431:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "431:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "461:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "461:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:1:6",
																		"nodeType": "YulLiteral",
																		"src": "467:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "457:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "457:3:6"
																},
																"nativeSrc": "457:12:6",
																"nodeType": "YulFunctionCall",
																"src": "457:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "435:18:6",
																	"nodeType": "YulTypedName",
																	"src": "435:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "508:31:6",
																"nodeType": "YulBlock",
																"src": "508:31:6",
																"statements": [
																	{
																		"nativeSrc": "510:27:6",
																		"nodeType": "YulAssignment",
																		"src": "510:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "524:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "524:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "532:4:6",
																					"nodeType": "YulLiteral",
																					"src": "532:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "520:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "520:3:6"
																			},
																			"nativeSrc": "520:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "520:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "510:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "510:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "488:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "488:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "481:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "481:6:6"
																},
																"nativeSrc": "481:26:6",
																"nodeType": "YulFunctionCall",
																"src": "481:26:6"
															},
															"nativeSrc": "478:61:6",
															"nodeType": "YulIf",
															"src": "478:61:6"
														},
														{
															"body": {
																"nativeSrc": "598:111:6",
																"nodeType": "YulBlock",
																"src": "598:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "619:1:6",
																					"nodeType": "YulLiteral",
																					"src": "619:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "626:3:6",
																							"nodeType": "YulLiteral",
																							"src": "626:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "631:10:6",
																							"nodeType": "YulLiteral",
																							"src": "631:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "622:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "622:3:6"
																					},
																					"nativeSrc": "622:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "622:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "612:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "612:6:6"
																			},
																			"nativeSrc": "612:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "612:31:6"
																		},
																		"nativeSrc": "612:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "612:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "663:1:6",
																					"nodeType": "YulLiteral",
																					"src": "663:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "666:4:6",
																					"nodeType": "YulLiteral",
																					"src": "666:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "656:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "656:6:6"
																			},
																			"nativeSrc": "656:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "656:15:6"
																		},
																		"nativeSrc": "656:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "656:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "691:1:6",
																					"nodeType": "YulLiteral",
																					"src": "691:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "694:4:6",
																					"nodeType": "YulLiteral",
																					"src": "694:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "684:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "684:6:6"
																			},
																			"nativeSrc": "684:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "684:15:6"
																		},
																		"nativeSrc": "684:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "684:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "554:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "554:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "577:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "577:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "585:2:6",
																				"nodeType": "YulLiteral",
																				"src": "585:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "574:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "574:2:6"
																		},
																		"nativeSrc": "574:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "574:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "551:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "551:2:6"
																},
																"nativeSrc": "551:38:6",
																"nodeType": "YulFunctionCall",
																"src": "551:38:6"
															},
															"nativeSrc": "548:161:6",
															"nodeType": "YulIf",
															"src": "548:161:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "335:380:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "370:4:6",
														"nodeType": "YulTypedName",
														"src": "370:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "379:6:6",
														"nodeType": "YulTypedName",
														"src": "379:6:6",
														"type": ""
													}
												],
												"src": "335:380:6"
											},
											{
												"body": {
													"nativeSrc": "776:65:6",
													"nodeType": "YulBlock",
													"src": "776:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "793:1:6",
																		"nodeType": "YulLiteral",
																		"src": "793:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "796:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "796:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "786:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:6"
																},
																"nativeSrc": "786:14:6",
																"nodeType": "YulFunctionCall",
																"src": "786:14:6"
															},
															"nativeSrc": "786:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "786:14:6"
														},
														{
															"nativeSrc": "809:26:6",
															"nodeType": "YulAssignment",
															"src": "809:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "827:1:6",
																		"nodeType": "YulLiteral",
																		"src": "827:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "830:4:6",
																		"nodeType": "YulLiteral",
																		"src": "830:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "817:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "817:9:6"
																},
																"nativeSrc": "817:18:6",
																"nodeType": "YulFunctionCall",
																"src": "817:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "809:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "809:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "720:121:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "759:3:6",
														"nodeType": "YulTypedName",
														"src": "759:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "767:4:6",
														"nodeType": "YulTypedName",
														"src": "767:4:6",
														"type": ""
													}
												],
												"src": "720:121:6"
											},
											{
												"body": {
													"nativeSrc": "927:462:6",
													"nodeType": "YulBlock",
													"src": "927:462:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "960:423:6",
																"nodeType": "YulBlock",
																"src": "960:423:6",
																"statements": [
																	{
																		"nativeSrc": "974:11:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "974:11:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "984:1:6",
																			"nodeType": "YulLiteral",
																			"src": "984:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "978:2:6",
																				"nodeType": "YulTypedName",
																				"src": "978:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1005:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1005:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "1008:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1008:5:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "998:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "998:6:6"
																			},
																			"nativeSrc": "998:16:6",
																			"nodeType": "YulFunctionCall",
																			"src": "998:16:6"
																		},
																		"nativeSrc": "998:16:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "998:16:6"
																	},
																	{
																		"nativeSrc": "1027:30:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1027:30:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1049:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1049:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1052:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1052:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "1039:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:6"
																			},
																			"nativeSrc": "1039:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1039:18:6"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "1031:4:6",
																				"nodeType": "YulTypedName",
																				"src": "1031:4:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1070:57:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1070:57:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1093:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1093:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1103:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1103:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "1110:10:6",
																									"nodeType": "YulIdentifier",
																									"src": "1110:10:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1122:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1122:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1106:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1106:3:6"
																							},
																							"nativeSrc": "1106:19:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1106:19:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1099:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1099:3:6"
																					},
																					"nativeSrc": "1099:27:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1099:27:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1089:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1089:3:6"
																			},
																			"nativeSrc": "1089:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1089:38:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "1074:11:6",
																				"nodeType": "YulTypedName",
																				"src": "1074:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1164:23:6",
																			"nodeType": "YulBlock",
																			"src": "1164:23:6",
																			"statements": [
																				{
																					"nativeSrc": "1166:19:6",
																					"nodeType": "YulAssignment",
																					"src": "1166:19:6",
																					"value": {
																						"name": "data",
																						"nativeSrc": "1181:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1181:4:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "1166:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "1166:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "1146:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "1146:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1158:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1158:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1143:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1143:2:6"
																			},
																			"nativeSrc": "1143:20:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1143:20:6"
																		},
																		"nativeSrc": "1140:47:6",
																		"nodeType": "YulIf",
																		"src": "1140:47:6"
																	},
																	{
																		"nativeSrc": "1200:41:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1200:41:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "1214:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "1214:4:6"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1224:1:6",
																							"nodeType": "YulLiteral",
																							"src": "1224:1:6",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "1231:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1231:3:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "1236:2:6",
																									"nodeType": "YulLiteral",
																									"src": "1236:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1227:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "1227:3:6"
																							},
																							"nativeSrc": "1227:12:6",
																							"nodeType": "YulFunctionCall",
																							"src": "1227:12:6"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "1220:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1220:3:6"
																					},
																					"nativeSrc": "1220:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "1220:20:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1210:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1210:3:6"
																			},
																			"nativeSrc": "1210:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1210:31:6"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nativeSrc": "1204:2:6",
																				"nodeType": "YulTypedName",
																				"src": "1204:2:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "1254:24:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "1254:24:6",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "1267:11:6",
																			"nodeType": "YulIdentifier",
																			"src": "1267:11:6"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "1258:5:6",
																				"nodeType": "YulTypedName",
																				"src": "1258:5:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "1352:21:6",
																			"nodeType": "YulBlock",
																			"src": "1352:21:6",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1361:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1361:5:6"
																							},
																							{
																								"name": "_1",
																								"nativeSrc": "1368:2:6",
																								"nodeType": "YulIdentifier",
																								"src": "1368:2:6"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "1354:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "1354:6:6"
																						},
																						"nativeSrc": "1354:17:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1354:17:6"
																					},
																					"nativeSrc": "1354:17:6",
																					"nodeType": "YulExpressionStatement",
																					"src": "1354:17:6"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "1302:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1302:5:6"
																				},
																				{
																					"name": "_2",
																					"nativeSrc": "1309:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "1309:2:6"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "1299:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "1299:2:6"
																			},
																			"nativeSrc": "1299:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1299:13:6"
																		},
																		"nativeSrc": "1291:82:6",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "1313:26:6",
																			"nodeType": "YulBlock",
																			"src": "1313:26:6",
																			"statements": [
																				{
																					"nativeSrc": "1315:22:6",
																					"nodeType": "YulAssignment",
																					"src": "1315:22:6",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "1328:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "1328:5:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1335:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1335:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1324:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1324:3:6"
																						},
																						"nativeSrc": "1324:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1324:13:6"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "1315:5:6",
																							"nodeType": "YulIdentifier",
																							"src": "1315:5:6"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "1295:3:6",
																			"nodeType": "YulBlock",
																			"src": "1295:3:6",
																			"statements": []
																		},
																		"src": "1291:82:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "943:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "943:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:2:6",
																		"nodeType": "YulLiteral",
																		"src": "948:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "940:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "940:2:6"
																},
																"nativeSrc": "940:11:6",
																"nodeType": "YulFunctionCall",
																"src": "940:11:6"
															},
															"nativeSrc": "937:446:6",
															"nodeType": "YulIf",
															"src": "937:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "846:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "899:5:6",
														"nodeType": "YulTypedName",
														"src": "899:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "906:3:6",
														"nodeType": "YulTypedName",
														"src": "906:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "911:10:6",
														"nodeType": "YulTypedName",
														"src": "911:10:6",
														"type": ""
													}
												],
												"src": "846:543:6"
											},
											{
												"body": {
													"nativeSrc": "1479:81:6",
													"nodeType": "YulBlock",
													"src": "1479:81:6",
													"statements": [
														{
															"nativeSrc": "1489:65:6",
															"nodeType": "YulAssignment",
															"src": "1489:65:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "1504:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1504:4:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1522:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1522:1:6",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "1525:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "1525:3:6"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1518:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1518:3:6"
																								},
																								"nativeSrc": "1518:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1518:11:6"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1535:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1535:1:6",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "1531:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1531:3:6"
																								},
																								"nativeSrc": "1531:6:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1531:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "1514:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1514:3:6"
																						},
																						"nativeSrc": "1514:24:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1514:24:6"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "1510:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1510:3:6"
																				},
																				"nativeSrc": "1510:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1510:29:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1500:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1500:3:6"
																		},
																		"nativeSrc": "1500:40:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1500:40:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1546:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1546:1:6",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "1549:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1549:3:6"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1542:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1542:3:6"
																		},
																		"nativeSrc": "1542:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1542:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1497:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1497:2:6"
																},
																"nativeSrc": "1497:57:6",
																"nodeType": "YulFunctionCall",
																"src": "1497:57:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "1489:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1489:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "1394:166:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1456:4:6",
														"nodeType": "YulTypedName",
														"src": "1456:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "1462:3:6",
														"nodeType": "YulTypedName",
														"src": "1462:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "1470:4:6",
														"nodeType": "YulTypedName",
														"src": "1470:4:6",
														"type": ""
													}
												],
												"src": "1394:166:6"
											},
											{
												"body": {
													"nativeSrc": "1661:1249:6",
													"nodeType": "YulBlock",
													"src": "1661:1249:6",
													"statements": [
														{
															"nativeSrc": "1671:24:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1671:24:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "1691:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1691:3:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1685:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1685:5:6"
																},
																"nativeSrc": "1685:10:6",
																"nodeType": "YulFunctionCall",
																"src": "1685:10:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "1675:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1675:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1738:22:6",
																"nodeType": "YulBlock",
																"src": "1738:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1740:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1740:16:6"
																			},
																			"nativeSrc": "1740:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1740:18:6"
																		},
																		"nativeSrc": "1740:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1740:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1710:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1710:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1726:2:6",
																						"nodeType": "YulLiteral",
																						"src": "1726:2:6",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1730:1:6",
																						"nodeType": "YulLiteral",
																						"src": "1730:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1722:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1722:3:6"
																				},
																				"nativeSrc": "1722:10:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1722:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1734:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1734:1:6",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1718:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1718:3:6"
																		},
																		"nativeSrc": "1718:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1718:18:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1707:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1707:2:6"
																},
																"nativeSrc": "1707:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1707:30:6"
															},
															"nativeSrc": "1704:56:6",
															"nodeType": "YulIf",
															"src": "1704:56:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "1813:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1813:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "1851:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1851:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "1845:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "1845:5:6"
																				},
																				"nativeSrc": "1845:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1845:11:6"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "1819:25:6",
																			"nodeType": "YulIdentifier",
																			"src": "1819:25:6"
																		},
																		"nativeSrc": "1819:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1819:38:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "1859:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1859:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "1769:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1769:43:6"
																},
																"nativeSrc": "1769:97:6",
																"nodeType": "YulFunctionCall",
																"src": "1769:97:6"
															},
															"nativeSrc": "1769:97:6",
															"nodeType": "YulExpressionStatement",
															"src": "1769:97:6"
														},
														{
															"nativeSrc": "1875:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1875:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1892:1:6",
																"nodeType": "YulLiteral",
																"src": "1892:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1879:9:6",
																	"nodeType": "YulTypedName",
																	"src": "1879:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1902:23:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1902:23:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1921:4:6",
																"nodeType": "YulLiteral",
																"src": "1921:4:6",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "1906:11:6",
																	"nodeType": "YulTypedName",
																	"src": "1906:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1934:17:6",
															"nodeType": "YulAssignment",
															"src": "1934:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1947:4:6",
																"nodeType": "YulLiteral",
																"src": "1947:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "1934:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1934:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "1997:656:6",
																		"nodeType": "YulBlock",
																		"src": "1997:656:6",
																		"statements": [
																			{
																				"nativeSrc": "2011:35:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2011:35:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "2030:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2030:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "2042:2:6",
																									"nodeType": "YulLiteral",
																									"src": "2042:2:6",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "2038:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2038:3:6"
																							},
																							"nativeSrc": "2038:7:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2038:7:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "2026:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2026:3:6"
																					},
																					"nativeSrc": "2026:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2026:20:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "2015:7:6",
																						"nodeType": "YulTypedName",
																						"src": "2015:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2059:49:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2059:49:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2103:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2103:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "2073:29:6",
																						"nodeType": "YulIdentifier",
																						"src": "2073:29:6"
																					},
																					"nativeSrc": "2073:35:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2073:35:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "2063:6:6",
																						"nodeType": "YulTypedName",
																						"src": "2063:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "2121:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2121:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2130:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2130:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "2125:1:6",
																						"nodeType": "YulTypedName",
																						"src": "2125:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2208:172:6",
																					"nodeType": "YulBlock",
																					"src": "2208:172:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2233:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2233:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "2251:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "2251:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "2256:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "2256:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "2247:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2247:3:6"
																												},
																												"nativeSrc": "2247:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2247:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "2241:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "2241:5:6"
																										},
																										"nativeSrc": "2241:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2241:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2226:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2226:6:6"
																								},
																								"nativeSrc": "2226:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2226:42:6"
																							},
																							"nativeSrc": "2226:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2226:42:6"
																						},
																						{
																							"nativeSrc": "2285:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2285:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2299:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2299:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2307:1:6",
																										"nodeType": "YulLiteral",
																										"src": "2307:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2295:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2295:3:6"
																								},
																								"nativeSrc": "2295:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2295:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "2285:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2285:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "2326:40:6",
																							"nodeType": "YulAssignment",
																							"src": "2326:40:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "2343:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "2343:9:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2354:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "2354:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2339:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2339:3:6"
																								},
																								"nativeSrc": "2339:27:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2339:27:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "2326:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "2326:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "2155:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "2155:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2158:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2158:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2152:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2152:2:6"
																					},
																					"nativeSrc": "2152:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2152:14:6"
																				},
																				"nativeSrc": "2144:236:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "2167:28:6",
																					"nodeType": "YulBlock",
																					"src": "2167:28:6",
																					"statements": [
																						{
																							"nativeSrc": "2169:24:6",
																							"nodeType": "YulAssignment",
																							"src": "2169:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "2178:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "2178:1:6"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "2181:11:6",
																										"nodeType": "YulIdentifier",
																										"src": "2181:11:6"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2174:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "2174:3:6"
																								},
																								"nativeSrc": "2174:19:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2174:19:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "2169:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "2169:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "2148:3:6",
																					"nodeType": "YulBlock",
																					"src": "2148:3:6",
																					"statements": []
																				},
																				"src": "2144:236:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "2428:166:6",
																					"nodeType": "YulBlock",
																					"src": "2428:166:6",
																					"statements": [
																						{
																							"nativeSrc": "2446:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "2446:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2473:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2473:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2478:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2478:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2469:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2469:3:6"
																										},
																										"nativeSrc": "2469:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2469:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2463:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2463:5:6"
																								},
																								"nativeSrc": "2463:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2463:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "2450:9:6",
																									"nodeType": "YulTypedName",
																									"src": "2450:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "2513:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "2513:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "2525:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2525:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "2552:1:6",
																																				"nodeType": "YulLiteral",
																																				"src": "2552:1:6",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "2555:6:6",
																																				"nodeType": "YulIdentifier",
																																				"src": "2555:6:6"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "2548:3:6",
																																			"nodeType": "YulIdentifier",
																																			"src": "2548:3:6"
																																		},
																																		"nativeSrc": "2548:14:6",
																																		"nodeType": "YulFunctionCall",
																																		"src": "2548:14:6"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2564:3:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2564:3:6",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "2544:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2544:3:6"
																																},
																																"nativeSrc": "2544:24:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2544:24:6"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "2574:1:6",
																																		"nodeType": "YulLiteral",
																																		"src": "2574:1:6",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "2570:3:6",
																																	"nodeType": "YulIdentifier",
																																	"src": "2570:3:6"
																																},
																																"nativeSrc": "2570:6:6",
																																"nodeType": "YulFunctionCall",
																																"src": "2570:6:6"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "2540:3:6",
																															"nodeType": "YulIdentifier",
																															"src": "2540:3:6"
																														},
																														"nativeSrc": "2540:37:6",
																														"nodeType": "YulFunctionCall",
																														"src": "2540:37:6"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "2536:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "2536:3:6"
																												},
																												"nativeSrc": "2536:42:6",
																												"nodeType": "YulFunctionCall",
																												"src": "2536:42:6"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "2521:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2521:3:6"
																										},
																										"nativeSrc": "2521:58:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2521:58:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "2506:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2506:6:6"
																								},
																								"nativeSrc": "2506:74:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2506:74:6"
																							},
																							"nativeSrc": "2506:74:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "2506:74:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "2399:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "2399:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "2408:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "2408:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "2396:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "2396:2:6"
																					},
																					"nativeSrc": "2396:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2396:19:6"
																				},
																				"nativeSrc": "2393:201:6",
																				"nodeType": "YulIf",
																				"src": "2393:201:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2614:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2614:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "2628:1:6",
																											"nodeType": "YulLiteral",
																											"src": "2628:1:6",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "2631:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "2631:6:6"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "2624:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "2624:3:6"
																									},
																									"nativeSrc": "2624:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "2624:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2640:1:6",
																									"nodeType": "YulLiteral",
																									"src": "2640:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2620:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "2620:3:6"
																							},
																							"nativeSrc": "2620:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2620:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2607:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2607:6:6"
																					},
																					"nativeSrc": "2607:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2607:36:6"
																				},
																				"nativeSrc": "2607:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2607:36:6"
																			}
																		]
																	},
																	"nativeSrc": "1990:663:6",
																	"nodeType": "YulCase",
																	"src": "1990:663:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1995:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1995:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "2670:234:6",
																		"nodeType": "YulBlock",
																		"src": "2670:234:6",
																		"statements": [
																			{
																				"nativeSrc": "2684:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "2684:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "2697:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2697:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "2688:5:6",
																						"nodeType": "YulTypedName",
																						"src": "2688:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "2733:67:6",
																					"nodeType": "YulBlock",
																					"src": "2733:67:6",
																					"statements": [
																						{
																							"nativeSrc": "2751:35:6",
																							"nodeType": "YulAssignment",
																							"src": "2751:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "2770:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "2770:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "2775:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "2775:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "2766:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "2766:3:6"
																										},
																										"nativeSrc": "2766:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "2766:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "2760:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2760:5:6"
																								},
																								"nativeSrc": "2760:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "2760:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "2751:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2751:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "2714:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2714:6:6"
																				},
																				"nativeSrc": "2711:89:6",
																				"nodeType": "YulIf",
																				"src": "2711:89:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "2820:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "2820:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "2879:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "2879:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "2886:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "2886:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "2826:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "2826:52:6"
																							},
																							"nativeSrc": "2826:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "2826:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "2813:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2813:6:6"
																					},
																					"nativeSrc": "2813:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2813:81:6"
																				},
																				"nativeSrc": "2813:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "2813:81:6"
																			}
																		]
																	},
																	"nativeSrc": "2662:242:6",
																	"nodeType": "YulCase",
																	"src": "2662:242:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "1970:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1970:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1978:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1978:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1967:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1967:2:6"
																},
																"nativeSrc": "1967:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1967:14:6"
															},
															"nativeSrc": "1960:944:6",
															"nodeType": "YulSwitch",
															"src": "1960:944:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "1565:1345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1646:4:6",
														"nodeType": "YulTypedName",
														"src": "1646:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "1652:3:6",
														"nodeType": "YulTypedName",
														"src": "1652:3:6",
														"type": ""
													}
												],
												"src": "1565:1345:6"
											},
											{
												"body": {
													"nativeSrc": "3016:102:6",
													"nodeType": "YulBlock",
													"src": "3016:102:6",
													"statements": [
														{
															"nativeSrc": "3026:26:6",
															"nodeType": "YulAssignment",
															"src": "3026:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3038:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3038:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3049:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3049:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3034:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3034:3:6"
																},
																"nativeSrc": "3034:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3034:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3026:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3026:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3068:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3068:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3083:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3099:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3099:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3104:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3104:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3095:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3095:3:6"
																						},
																						"nativeSrc": "3095:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3095:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3108:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3108:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3091:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3091:3:6"
																				},
																				"nativeSrc": "3091:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3091:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3079:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3079:3:6"
																		},
																		"nativeSrc": "3079:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3079:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3061:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3061:6:6"
																},
																"nativeSrc": "3061:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3061:51:6"
															},
															"nativeSrc": "3061:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3061:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2915:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2985:9:6",
														"nodeType": "YulTypedName",
														"src": "2985:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2996:6:6",
														"nodeType": "YulTypedName",
														"src": "2996:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3007:4:6",
														"nodeType": "YulTypedName",
														"src": "3007:4:6",
														"type": ""
													}
												],
												"src": "2915:203:6"
											},
											{
												"body": {
													"nativeSrc": "3171:174:6",
													"nodeType": "YulBlock",
													"src": "3171:174:6",
													"statements": [
														{
															"nativeSrc": "3181:16:6",
															"nodeType": "YulAssignment",
															"src": "3181:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3192:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3192:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3195:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3195:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3188:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:6"
																},
																"nativeSrc": "3188:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3188:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3228:111:6",
																"nodeType": "YulBlock",
																"src": "3228:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3249:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3249:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3256:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3256:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3261:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3261:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3252:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3252:3:6"
																					},
																					"nativeSrc": "3252:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3252:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3242:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3242:6:6"
																			},
																			"nativeSrc": "3242:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3242:31:6"
																		},
																		"nativeSrc": "3242:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3242:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3293:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3293:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3296:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3296:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3286:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3286:6:6"
																			},
																			"nativeSrc": "3286:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3286:15:6"
																		},
																		"nativeSrc": "3286:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3286:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3321:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3321:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3324:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3324:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3314:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3314:6:6"
																			},
																			"nativeSrc": "3314:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3314:15:6"
																		},
																		"nativeSrc": "3314:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3314:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3212:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3212:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3215:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3215:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3209:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3209:2:6"
																},
																"nativeSrc": "3209:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3209:10:6"
															},
															"nativeSrc": "3206:133:6",
															"nodeType": "YulIf",
															"src": "3206:133:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3123:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3154:1:6",
														"nodeType": "YulTypedName",
														"src": "3154:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3157:1:6",
														"nodeType": "YulTypedName",
														"src": "3157:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3163:3:6",
														"nodeType": "YulTypedName",
														"src": "3163:3:6",
														"type": ""
													}
												],
												"src": "3123:222:6"
											},
											{
												"body": {
													"nativeSrc": "3507:188:6",
													"nodeType": "YulBlock",
													"src": "3507:188:6",
													"statements": [
														{
															"nativeSrc": "3517:26:6",
															"nodeType": "YulAssignment",
															"src": "3517:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3529:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3529:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3540:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3540:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3525:3:6"
																},
																"nativeSrc": "3525:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3525:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3517:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3517:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3559:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3559:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3574:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3574:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "3590:3:6",
																								"nodeType": "YulLiteral",
																								"src": "3590:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "3595:1:6",
																								"nodeType": "YulLiteral",
																								"src": "3595:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "3586:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3586:3:6"
																						},
																						"nativeSrc": "3586:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3586:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3599:1:6",
																						"nodeType": "YulLiteral",
																						"src": "3599:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "3582:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3582:3:6"
																				},
																				"nativeSrc": "3582:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3582:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3570:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3570:3:6"
																		},
																		"nativeSrc": "3570:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3570:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3552:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3552:6:6"
																},
																"nativeSrc": "3552:51:6",
																"nodeType": "YulFunctionCall",
																"src": "3552:51:6"
															},
															"nativeSrc": "3552:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "3552:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3623:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3623:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3634:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3634:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3619:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3619:3:6"
																		},
																		"nativeSrc": "3619:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3619:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3639:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3639:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3612:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3612:6:6"
																},
																"nativeSrc": "3612:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3612:34:6"
															},
															"nativeSrc": "3612:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3612:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3666:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3666:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3677:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3677:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3662:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3662:3:6"
																		},
																		"nativeSrc": "3662:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3662:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3682:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3682:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3655:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3655:6:6"
																},
																"nativeSrc": "3655:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3655:34:6"
															},
															"nativeSrc": "3655:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3655:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3350:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3460:9:6",
														"nodeType": "YulTypedName",
														"src": "3460:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3471:6:6",
														"nodeType": "YulTypedName",
														"src": "3471:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3479:6:6",
														"nodeType": "YulTypedName",
														"src": "3479:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3487:6:6",
														"nodeType": "YulTypedName",
														"src": "3487:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3498:4:6",
														"nodeType": "YulTypedName",
														"src": "3498:4:6",
														"type": ""
													}
												],
												"src": "3350:345:6"
											},
											{
												"body": {
													"nativeSrc": "3801:76:6",
													"nodeType": "YulBlock",
													"src": "3801:76:6",
													"statements": [
														{
															"nativeSrc": "3811:26:6",
															"nodeType": "YulAssignment",
															"src": "3811:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3823:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3823:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3834:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3834:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3819:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3819:3:6"
																},
																"nativeSrc": "3819:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3819:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3811:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3811:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3853:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3864:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3864:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3846:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3846:6:6"
																},
																"nativeSrc": "3846:25:6",
																"nodeType": "YulFunctionCall",
																"src": "3846:25:6"
															},
															"nativeSrc": "3846:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "3846:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3700:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3770:9:6",
														"nodeType": "YulTypedName",
														"src": "3770:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3781:6:6",
														"nodeType": "YulTypedName",
														"src": "3781:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3792:4:6",
														"nodeType": "YulTypedName",
														"src": "3792:4:6",
														"type": ""
													}
												],
												"src": "3700:177:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000bab38038062000bab83398101604081905262000034916200021e565b604051806040016040528060038152602001621554d160ea1b815250604051806040016040528060048152602001635553444360e01b81525081600390816200007e9190620002df565b5060046200008d8282620002df565b505050620000a23382620000a960201b60201c565b50620003d3565b6001600160a01b038216620000d95760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b620000e760008383620000eb565b5050565b6001600160a01b0383166200011a5780600260008282546200010e9190620003ab565b909155506200018e9050565b6001600160a01b038316600090815260208190526040902054818110156200016f5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401620000d0565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216620001ac57600280548290039055620001cb565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021191815260200190565b60405180910390a3505050565b6000602082840312156200023157600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200026357607f821691505b6020821081036200028457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002da576000816000526020600020601f850160051c81016020861015620002b55750805b601f850160051c820191505b81811015620002d657828155600101620002c1565b5050505b505050565b81516001600160401b03811115620002fb57620002fb62000238565b62000313816200030c84546200024e565b846200028a565b602080601f8311600181146200034b5760008415620003325750858301515b600019600386901b1c1916600185901b178555620002d6565b600085815260208120601f198616915b828110156200037c578886015182559484019460019091019084016200035b565b50858210156200039b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115620003cd57634e487b7160e01b600052601160045260246000fd5b92915050565b6107c880620003e36000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610146578063a9059cbb1461014e578063dd62ed3e1461016157600080fd5b8063313ce5671461010e57806370a082311461011d57600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd146100fb575b600080fd5b6100b061019a565b6040516100bd9190610611565b60405180910390f35b6100d96100d436600461067c565b61022c565b60405190151581526020016100bd565b6002545b6040519081526020016100bd565b6100d96101093660046106a6565b610246565b604051601281526020016100bd565b6100ed61012b3660046106e2565b6001600160a01b031660009081526020819052604090205490565b6100b061026a565b6100d961015c36600461067c565b610279565b6100ed61016f366004610704565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101a990610737565b80601f01602080910402602001604051908101604052809291908181526020018280546101d590610737565b80156102225780601f106101f757610100808354040283529160200191610222565b820191906000526020600020905b81548152906001019060200180831161020557829003601f168201915b5050505050905090565b60003361023a818585610287565b60019150505b92915050565b600033610254858285610299565b61025f858585610336565b506001949350505050565b6060600480546101a990610737565b60003361023a818585610336565b61029483838360016103c7565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156103305781811015610321576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610330848484840360006103c7565b50505050565b6001600160a01b038316610379576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b0382166103bc576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6102948383836104ce565b6001600160a01b03841661040a576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b03831661044d576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c091815260200190565b60405180910390a350505050565b6001600160a01b0383166104f95780600260008282546104ee9190610771565b909155506105849050565b6001600160a01b03831660009081526020819052604090205481811015610565576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024810182905260448101839052606401610318565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105a0576002805482900390556105bf565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161060491815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b8181101561063f57858101830151858201604001528201610623565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461067757600080fd5b919050565b6000806040838503121561068f57600080fd5b61069883610660565b946020939093013593505050565b6000806000606084860312156106bb57600080fd5b6106c484610660565b92506106d260208501610660565b9150604084013590509250925092565b6000602082840312156106f457600080fd5b6106fd82610660565b9392505050565b6000806040838503121561071757600080fd5b61072083610660565b915061072e60208401610660565b90509250929050565b600181811c9082168061074b57607f821691505b60208210810361076b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024057634e487b7160e01b600052601160045260246000fdfea2646970667358221220ed1deb080d277878993a0449dd2fdec4549742ec7b8fc5291ab0c3f7d8eb097464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xBAB CODESIZE SUB DUP1 PUSH3 0xBAB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x21E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x1554D1 PUSH1 0xEA SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x55534443 PUSH1 0xE0 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x7E SWAP2 SWAP1 PUSH3 0x2DF JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x8D DUP3 DUP3 PUSH3 0x2DF JUMP JUMPDEST POP POP POP PUSH3 0xA2 CALLER DUP3 PUSH3 0xA9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x3D3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0xD9 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xE7 PUSH1 0x0 DUP4 DUP4 PUSH3 0xEB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH3 0x11A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x10E SWAP2 SWAP1 PUSH3 0x3AB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH3 0x18E SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH3 0x16F JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH3 0xD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x1AC JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH3 0x1CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x211 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x231 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x263 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x284 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x2DA JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x2B5 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2D6 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x2C1 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2FB JUMPI PUSH3 0x2FB PUSH3 0x238 JUMP JUMPDEST PUSH3 0x313 DUP2 PUSH3 0x30C DUP5 SLOAD PUSH3 0x24E JUMP JUMPDEST DUP5 PUSH3 0x28A JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x34B JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x332 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x2D6 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x37C JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x35B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x39B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH3 0x3CD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7C8 DUP1 PUSH3 0x3E3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x67C JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xED PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x26A JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x67C JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH2 0xED PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A9 SWAP1 PUSH2 0x737 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x737 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x222 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x222 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x205 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x254 DUP6 DUP3 DUP6 PUSH2 0x299 JUMP JUMPDEST PUSH2 0x25F DUP6 DUP6 DUP6 PUSH2 0x336 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A9 SWAP1 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x294 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x330 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x330 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH2 0x294 DUP4 DUP4 DUP4 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x330 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4F9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x584 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x623 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP4 PUSH2 0x660 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C4 DUP5 PUSH2 0x660 JUMP JUMPDEST SWAP3 POP PUSH2 0x6D2 PUSH1 0x20 DUP6 ADD PUSH2 0x660 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FD DUP3 PUSH2 0x660 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x720 DUP4 PUSH2 0x660 JUMP JUMPDEST SWAP2 POP PUSH2 0x72E PUSH1 0x20 DUP5 ADD PUSH2 0x660 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x74B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x76B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x240 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SAR 0xEB ADDMOD 0xD 0x27 PUSH25 0x78993A0449DD2FDEC4549742EC7B8FC5291AB0C3F7D8EB0974 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "250:140:5:-:0;;;283:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:1;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:1;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:1;:17;1681:7;1671;:17;:::i;:::-;;1582:113;;349:32:5::1;355:10;367:13;349:5;;;:32;;:::i;:::-;283:105:::0;250:140;;7439:208:1;-1:-1:-1;;;;;7509:21:1;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:1;;7582:1;7553:32;;;3061:51:6;3034:18;;7553:32:1;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:1;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:1;;-1:-1:-1;6074:540:1;;-1:-1:-1;;;;;6288:15:1;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:1;;-1:-1:-1;;;;;3570:32:6;;6367:50:1;;;3552:51:6;3619:18;;;3612:34;;;3662:18;;;3655:34;;;3525:18;;6367:50:1;3350:345:6;6317:115:1;-1:-1:-1;;;;;6552:15:1;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:1;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:1;7073:4;-1:-1:-1;;;;;7064:25:1;;7083:5;7064:25;;;;3846::6;;3834:2;3819:18;;3700:177;7064:25:1;;;;;;;;5989:1107;;;:::o;14:184:6:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:6;;14:184;-1:-1:-1;14:184:6:o;203:127::-;264:10;259:3;255:20;252:1;245:31;295:4;292:1;285:15;319:4;316:1;309:15;335:380;414:1;410:12;;;;457;;;478:61;;532:4;524:6;520:17;510:27;;478:61;585:2;577:6;574:14;554:18;551:38;548:161;;631:10;626:3;622:20;619:1;612:31;666:4;663:1;656:15;694:4;691:1;684:15;548:161;;335:380;;;:::o;846:543::-;948:2;943:3;940:11;937:446;;;984:1;1008:5;1005:1;998:16;1052:4;1049:1;1039:18;1122:2;1110:10;1106:19;1103:1;1099:27;1093:4;1089:38;1158:4;1146:10;1143:20;1140:47;;;-1:-1:-1;1181:4:6;1140:47;1236:2;1231:3;1227:12;1224:1;1220:20;1214:4;1210:31;1200:41;;1291:82;1309:2;1302:5;1299:13;1291:82;;;1354:17;;;1335:1;1324:13;1291:82;;;1295:3;;;937:446;846:543;;;:::o;1565:1345::-;1685:10;;-1:-1:-1;;;;;1707:30:6;;1704:56;;;1740:18;;:::i;:::-;1769:97;1859:6;1819:38;1851:4;1845:11;1819:38;:::i;:::-;1813:4;1769:97;:::i;:::-;1921:4;;1978:2;1967:14;;1995:1;1990:663;;;;2697:1;2714:6;2711:89;;;-1:-1:-1;2766:19:6;;;2760:26;2711:89;-1:-1:-1;;1522:1:6;1518:11;;;1514:24;1510:29;1500:40;1546:1;1542:11;;;1497:57;2813:81;;1960:944;;1990:663;793:1;786:14;;;830:4;817:18;;-1:-1:-1;;2026:20:6;;;2144:236;2158:7;2155:1;2152:14;2144:236;;;2247:19;;;2241:26;2226:42;;2339:27;;;;2307:1;2295:14;;;;2174:19;;2144:236;;;2148:3;2408:6;2399:7;2396:19;2393:201;;;2469:19;;;2463:26;-1:-1:-1;;2552:1:6;2548:14;;;2564:3;2544:24;2540:37;2536:42;2521:58;2506:74;;2393:201;-1:-1:-1;;;;;2640:1:6;2624:14;;;2620:22;2607:36;;-1:-1:-1;1565:1345:6:o;3123:222::-;3188:9;;;3209:10;;;3206:133;;;3261:10;3256:3;3252:20;3249:1;3242:31;3296:4;3293:1;3286:15;3324:4;3321:1;3314:15;3206:133;3123:222;;;;:::o;3700:177::-;250:140:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_542": {
									"entryPoint": 647,
									"id": 542,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_602": {
									"entryPoint": 967,
									"id": 602,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_767": {
									"entryPoint": null,
									"id": 767,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_650": {
									"entryPoint": 665,
									"id": 650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_381": {
									"entryPoint": 822,
									"id": 381,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_458": {
									"entryPoint": 1230,
									"id": 458,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_278": {
									"entryPoint": null,
									"id": 278,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_302": {
									"entryPoint": 556,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_237": {
									"entryPoint": null,
									"id": 237,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@name_197": {
									"entryPoint": 410,
									"id": 197,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_206": {
									"entryPoint": 618,
									"id": 206,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_224": {
									"entryPoint": null,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_334": {
									"entryPoint": 582,
									"id": 334,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_261": {
									"entryPoint": 633,
									"id": 261,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1847,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3706:6",
										"nodeType": "YulBlock",
										"src": "0:3706:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:427:6",
													"nodeType": "YulBlock",
													"src": "135:427:6",
													"statements": [
														{
															"nativeSrc": "145:12:6",
															"nodeType": "YulVariableDeclaration",
															"src": "145:12:6",
															"value": {
																"kind": "number",
																"nativeSrc": "155:2:6",
																"nodeType": "YulLiteral",
																"src": "155:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "149:2:6",
																	"nodeType": "YulTypedName",
																	"src": "149:2:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "173:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "173:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "184:2:6",
																		"nodeType": "YulLiteral",
																		"src": "184:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "166:6:6"
																},
																"nativeSrc": "166:21:6",
																"nodeType": "YulFunctionCall",
																"src": "166:21:6"
															},
															"nativeSrc": "166:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "166:21:6"
														},
														{
															"nativeSrc": "196:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "196:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "216:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "210:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "210:5:6"
																},
																"nativeSrc": "210:13:6",
																"nodeType": "YulFunctionCall",
																"src": "210:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "200:6:6",
																	"nodeType": "YulTypedName",
																	"src": "200:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "243:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "243:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "254:2:6",
																				"nodeType": "YulLiteral",
																				"src": "254:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "239:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "239:3:6"
																		},
																		"nativeSrc": "239:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "239:18:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "259:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "259:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "232:6:6"
																},
																"nativeSrc": "232:34:6",
																"nodeType": "YulFunctionCall",
																"src": "232:34:6"
															},
															"nativeSrc": "232:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "232:34:6"
														},
														{
															"nativeSrc": "275:10:6",
															"nodeType": "YulVariableDeclaration",
															"src": "275:10:6",
															"value": {
																"kind": "number",
																"nativeSrc": "284:1:6",
																"nodeType": "YulLiteral",
																"src": "284:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "279:1:6",
																	"nodeType": "YulTypedName",
																	"src": "279:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "344:90:6",
																"nodeType": "YulBlock",
																"src": "344:90:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "headStart",
																									"nativeSrc": "373:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "373:9:6"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "384:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "384:1:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "369:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "369:3:6"
																							},
																							"nativeSrc": "369:17:6",
																							"nodeType": "YulFunctionCall",
																							"src": "369:17:6"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "388:2:6",
																							"nodeType": "YulLiteral",
																							"src": "388:2:6",
																							"type": "",
																							"value": "64"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "365:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "365:3:6"
																					},
																					"nativeSrc": "365:26:6",
																					"nodeType": "YulFunctionCall",
																					"src": "365:26:6"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nativeSrc": "407:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "407:6:6"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "415:1:6",
																											"nodeType": "YulIdentifier",
																											"src": "415:1:6"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "403:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "403:3:6"
																									},
																									"nativeSrc": "403:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "403:14:6"
																								},
																								{
																									"name": "_1",
																									"nativeSrc": "419:2:6",
																									"nodeType": "YulIdentifier",
																									"src": "419:2:6"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "399:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "399:3:6"
																							},
																							"nativeSrc": "399:23:6",
																							"nodeType": "YulFunctionCall",
																							"src": "399:23:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "393:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "393:5:6"
																					},
																					"nativeSrc": "393:30:6",
																					"nodeType": "YulFunctionCall",
																					"src": "393:30:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "358:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "358:6:6"
																			},
																			"nativeSrc": "358:66:6",
																			"nodeType": "YulFunctionCall",
																			"src": "358:66:6"
																		},
																		"nativeSrc": "358:66:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "358:66:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "305:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "305:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "308:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "308:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "302:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "302:2:6"
																},
																"nativeSrc": "302:13:6",
																"nodeType": "YulFunctionCall",
																"src": "302:13:6"
															},
															"nativeSrc": "294:140:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "316:19:6",
																"nodeType": "YulBlock",
																"src": "316:19:6",
																"statements": [
																	{
																		"nativeSrc": "318:15:6",
																		"nodeType": "YulAssignment",
																		"src": "318:15:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "327:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "327:1:6"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "330:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "330:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "323:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "323:3:6"
																			},
																			"nativeSrc": "323:10:6",
																			"nodeType": "YulFunctionCall",
																			"src": "323:10:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "318:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "318:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "298:3:6",
																"nodeType": "YulBlock",
																"src": "298:3:6",
																"statements": []
															},
															"src": "294:140:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "458:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "458:9:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "469:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "469:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "454:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "454:3:6"
																				},
																				"nativeSrc": "454:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "454:22:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "478:2:6",
																				"nodeType": "YulLiteral",
																				"src": "478:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "450:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "450:3:6"
																		},
																		"nativeSrc": "450:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "450:31:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "483:1:6",
																		"nodeType": "YulLiteral",
																		"src": "483:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "443:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "443:6:6"
																},
																"nativeSrc": "443:42:6",
																"nodeType": "YulFunctionCall",
																"src": "443:42:6"
															},
															"nativeSrc": "443:42:6",
															"nodeType": "YulExpressionStatement",
															"src": "443:42:6"
														},
														{
															"nativeSrc": "494:62:6",
															"nodeType": "YulAssignment",
															"src": "494:62:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "510:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "510:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "529:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "529:6:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "537:2:6",
																								"nodeType": "YulLiteral",
																								"src": "537:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "525:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "525:3:6"
																						},
																						"nativeSrc": "525:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "525:15:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "546:2:6",
																								"nodeType": "YulLiteral",
																								"src": "546:2:6",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "542:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "542:3:6"
																						},
																						"nativeSrc": "542:7:6",
																						"nodeType": "YulFunctionCall",
																						"src": "542:7:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "521:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "521:3:6"
																				},
																				"nativeSrc": "521:29:6",
																				"nodeType": "YulFunctionCall",
																				"src": "521:29:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "506:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "506:3:6"
																		},
																		"nativeSrc": "506:45:6",
																		"nodeType": "YulFunctionCall",
																		"src": "506:45:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "553:2:6",
																		"nodeType": "YulLiteral",
																		"src": "553:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nativeSrc": "502:54:6",
																"nodeType": "YulFunctionCall",
																"src": "502:54:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:548:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:6",
														"nodeType": "YulTypedName",
														"src": "104:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:6",
														"nodeType": "YulTypedName",
														"src": "115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:6",
														"nodeType": "YulTypedName",
														"src": "126:4:6",
														"type": ""
													}
												],
												"src": "14:548:6"
											},
											{
												"body": {
													"nativeSrc": "616:147:6",
													"nodeType": "YulBlock",
													"src": "616:147:6",
													"statements": [
														{
															"nativeSrc": "626:29:6",
															"nodeType": "YulAssignment",
															"src": "626:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "648:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "648:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "635:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "635:12:6"
																},
																"nativeSrc": "635:20:6",
																"nodeType": "YulFunctionCall",
																"src": "635:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "626:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "626:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "741:16:6",
																"nodeType": "YulBlock",
																"src": "741:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "750:1:6",
																					"nodeType": "YulLiteral",
																					"src": "750:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "753:1:6",
																					"nodeType": "YulLiteral",
																					"src": "753:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "743:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:6"
																			},
																			"nativeSrc": "743:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "743:12:6"
																		},
																		"nativeSrc": "743:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "743:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "677:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "677:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "688:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "688:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "695:42:6",
																						"nodeType": "YulLiteral",
																						"src": "695:42:6",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "684:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "684:3:6"
																				},
																				"nativeSrc": "684:54:6",
																				"nodeType": "YulFunctionCall",
																				"src": "684:54:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "674:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "674:2:6"
																		},
																		"nativeSrc": "674:65:6",
																		"nodeType": "YulFunctionCall",
																		"src": "674:65:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "667:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "667:6:6"
																},
																"nativeSrc": "667:73:6",
																"nodeType": "YulFunctionCall",
																"src": "667:73:6"
															},
															"nativeSrc": "664:93:6",
															"nodeType": "YulIf",
															"src": "664:93:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "567:196:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "595:6:6",
														"nodeType": "YulTypedName",
														"src": "595:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "606:5:6",
														"nodeType": "YulTypedName",
														"src": "606:5:6",
														"type": ""
													}
												],
												"src": "567:196:6"
											},
											{
												"body": {
													"nativeSrc": "855:167:6",
													"nodeType": "YulBlock",
													"src": "855:167:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "901:16:6",
																"nodeType": "YulBlock",
																"src": "901:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "910:1:6",
																					"nodeType": "YulLiteral",
																					"src": "910:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "913:1:6",
																					"nodeType": "YulLiteral",
																					"src": "913:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			},
																			"nativeSrc": "903:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "903:12:6"
																		},
																		"nativeSrc": "903:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "903:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "876:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "876:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "885:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "885:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "872:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "872:3:6"
																		},
																		"nativeSrc": "872:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "872:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "897:2:6",
																		"nodeType": "YulLiteral",
																		"src": "897:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "868:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "868:3:6"
																},
																"nativeSrc": "868:32:6",
																"nodeType": "YulFunctionCall",
																"src": "868:32:6"
															},
															"nativeSrc": "865:52:6",
															"nodeType": "YulIf",
															"src": "865:52:6"
														},
														{
															"nativeSrc": "926:39:6",
															"nodeType": "YulAssignment",
															"src": "926:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "955:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "955:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "936:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "936:18:6"
																},
																"nativeSrc": "936:29:6",
																"nodeType": "YulFunctionCall",
																"src": "936:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "926:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "926:6:6"
																}
															]
														},
														{
															"nativeSrc": "974:42:6",
															"nodeType": "YulAssignment",
															"src": "974:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1001:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1001:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1012:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1012:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "997:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "997:3:6"
																		},
																		"nativeSrc": "997:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "997:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "984:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "984:12:6"
																},
																"nativeSrc": "984:32:6",
																"nodeType": "YulFunctionCall",
																"src": "984:32:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "974:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "974:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "768:254:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "813:9:6",
														"nodeType": "YulTypedName",
														"src": "813:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "824:7:6",
														"nodeType": "YulTypedName",
														"src": "824:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "836:6:6",
														"nodeType": "YulTypedName",
														"src": "836:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "844:6:6",
														"nodeType": "YulTypedName",
														"src": "844:6:6",
														"type": ""
													}
												],
												"src": "768:254:6"
											},
											{
												"body": {
													"nativeSrc": "1122:92:6",
													"nodeType": "YulBlock",
													"src": "1122:92:6",
													"statements": [
														{
															"nativeSrc": "1132:26:6",
															"nodeType": "YulAssignment",
															"src": "1132:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1144:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1144:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1155:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1140:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:6"
																},
																"nativeSrc": "1140:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1140:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1132:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1132:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1174:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1174:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1199:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1199:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1192:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1192:6:6"
																				},
																				"nativeSrc": "1192:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1192:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1185:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1185:6:6"
																		},
																		"nativeSrc": "1185:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1185:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1167:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1167:6:6"
																},
																"nativeSrc": "1167:41:6",
																"nodeType": "YulFunctionCall",
																"src": "1167:41:6"
															},
															"nativeSrc": "1167:41:6",
															"nodeType": "YulExpressionStatement",
															"src": "1167:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1027:187:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1091:9:6",
														"nodeType": "YulTypedName",
														"src": "1091:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1102:6:6",
														"nodeType": "YulTypedName",
														"src": "1102:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1113:4:6",
														"nodeType": "YulTypedName",
														"src": "1113:4:6",
														"type": ""
													}
												],
												"src": "1027:187:6"
											},
											{
												"body": {
													"nativeSrc": "1320:76:6",
													"nodeType": "YulBlock",
													"src": "1320:76:6",
													"statements": [
														{
															"nativeSrc": "1330:26:6",
															"nodeType": "YulAssignment",
															"src": "1330:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1342:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1342:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1353:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1353:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1338:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1338:3:6"
																},
																"nativeSrc": "1338:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1338:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1330:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1330:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1372:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1372:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1383:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1383:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1365:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1365:6:6"
																},
																"nativeSrc": "1365:25:6",
																"nodeType": "YulFunctionCall",
																"src": "1365:25:6"
															},
															"nativeSrc": "1365:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "1365:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1219:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1289:9:6",
														"nodeType": "YulTypedName",
														"src": "1289:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1300:6:6",
														"nodeType": "YulTypedName",
														"src": "1300:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1311:4:6",
														"nodeType": "YulTypedName",
														"src": "1311:4:6",
														"type": ""
													}
												],
												"src": "1219:177:6"
											},
											{
												"body": {
													"nativeSrc": "1505:224:6",
													"nodeType": "YulBlock",
													"src": "1505:224:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1551:16:6",
																"nodeType": "YulBlock",
																"src": "1551:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1560:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1560:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1563:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1563:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1553:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1553:6:6"
																			},
																			"nativeSrc": "1553:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1553:12:6"
																		},
																		"nativeSrc": "1553:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1526:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1526:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1535:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1535:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1522:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1522:3:6"
																		},
																		"nativeSrc": "1522:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1522:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1547:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1547:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1518:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1518:3:6"
																},
																"nativeSrc": "1518:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1518:32:6"
															},
															"nativeSrc": "1515:52:6",
															"nodeType": "YulIf",
															"src": "1515:52:6"
														},
														{
															"nativeSrc": "1576:39:6",
															"nodeType": "YulAssignment",
															"src": "1576:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1605:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1605:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1586:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1586:18:6"
																},
																"nativeSrc": "1586:29:6",
																"nodeType": "YulFunctionCall",
																"src": "1586:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1576:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:6"
																}
															]
														},
														{
															"nativeSrc": "1624:48:6",
															"nodeType": "YulAssignment",
															"src": "1624:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1657:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1657:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1668:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1668:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1653:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1653:3:6"
																		},
																		"nativeSrc": "1653:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1653:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1634:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "1634:18:6"
																},
																"nativeSrc": "1634:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1634:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:6:6"
																}
															]
														},
														{
															"nativeSrc": "1681:42:6",
															"nodeType": "YulAssignment",
															"src": "1681:42:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1708:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1708:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1719:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1719:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1704:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:6"
																		},
																		"nativeSrc": "1704:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1704:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1691:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1691:12:6"
																},
																"nativeSrc": "1691:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1691:32:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1681:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1681:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1401:328:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1455:9:6",
														"nodeType": "YulTypedName",
														"src": "1455:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1466:7:6",
														"nodeType": "YulTypedName",
														"src": "1466:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1478:6:6",
														"nodeType": "YulTypedName",
														"src": "1478:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1486:6:6",
														"nodeType": "YulTypedName",
														"src": "1486:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1494:6:6",
														"nodeType": "YulTypedName",
														"src": "1494:6:6",
														"type": ""
													}
												],
												"src": "1401:328:6"
											},
											{
												"body": {
													"nativeSrc": "1831:87:6",
													"nodeType": "YulBlock",
													"src": "1831:87:6",
													"statements": [
														{
															"nativeSrc": "1841:26:6",
															"nodeType": "YulAssignment",
															"src": "1841:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1853:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1853:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1864:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1864:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1849:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1849:3:6"
																},
																"nativeSrc": "1849:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1849:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1841:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1841:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1883:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1883:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1898:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1898:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1906:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1906:4:6",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1894:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:6"
																		},
																		"nativeSrc": "1894:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1894:17:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1876:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1876:6:6"
																},
																"nativeSrc": "1876:36:6",
																"nodeType": "YulFunctionCall",
																"src": "1876:36:6"
															},
															"nativeSrc": "1876:36:6",
															"nodeType": "YulExpressionStatement",
															"src": "1876:36:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1734:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1800:9:6",
														"nodeType": "YulTypedName",
														"src": "1800:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1811:6:6",
														"nodeType": "YulTypedName",
														"src": "1811:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1822:4:6",
														"nodeType": "YulTypedName",
														"src": "1822:4:6",
														"type": ""
													}
												],
												"src": "1734:184:6"
											},
											{
												"body": {
													"nativeSrc": "1993:116:6",
													"nodeType": "YulBlock",
													"src": "1993:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2039:16:6",
																"nodeType": "YulBlock",
																"src": "2039:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2048:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2048:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2051:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2051:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2041:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2041:6:6"
																			},
																			"nativeSrc": "2041:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:12:6"
																		},
																		"nativeSrc": "2041:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2014:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2014:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2023:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2010:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2010:3:6"
																		},
																		"nativeSrc": "2010:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2010:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2035:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2035:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2006:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2006:3:6"
																},
																"nativeSrc": "2006:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2006:32:6"
															},
															"nativeSrc": "2003:52:6",
															"nodeType": "YulIf",
															"src": "2003:52:6"
														},
														{
															"nativeSrc": "2064:39:6",
															"nodeType": "YulAssignment",
															"src": "2064:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2093:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2093:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2074:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2074:18:6"
																},
																"nativeSrc": "2074:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2074:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2064:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2064:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1923:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1959:9:6",
														"nodeType": "YulTypedName",
														"src": "1959:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1970:7:6",
														"nodeType": "YulTypedName",
														"src": "1970:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1982:6:6",
														"nodeType": "YulTypedName",
														"src": "1982:6:6",
														"type": ""
													}
												],
												"src": "1923:186:6"
											},
											{
												"body": {
													"nativeSrc": "2201:173:6",
													"nodeType": "YulBlock",
													"src": "2201:173:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2247:16:6",
																"nodeType": "YulBlock",
																"src": "2247:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2256:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2259:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2259:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2249:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:6"
																			},
																			"nativeSrc": "2249:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2249:12:6"
																		},
																		"nativeSrc": "2249:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2222:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2222:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2231:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2231:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2218:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2218:3:6"
																		},
																		"nativeSrc": "2218:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2218:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2243:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2243:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2214:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2214:3:6"
																},
																"nativeSrc": "2214:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2214:32:6"
															},
															"nativeSrc": "2211:52:6",
															"nodeType": "YulIf",
															"src": "2211:52:6"
														},
														{
															"nativeSrc": "2272:39:6",
															"nodeType": "YulAssignment",
															"src": "2272:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2301:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2301:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2282:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2282:18:6"
																},
																"nativeSrc": "2282:29:6",
																"nodeType": "YulFunctionCall",
																"src": "2282:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2272:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2272:6:6"
																}
															]
														},
														{
															"nativeSrc": "2320:48:6",
															"nodeType": "YulAssignment",
															"src": "2320:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2353:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2353:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2364:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2364:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2349:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2349:3:6"
																		},
																		"nativeSrc": "2349:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2349:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2330:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2330:18:6"
																},
																"nativeSrc": "2330:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2330:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2320:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2320:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2114:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2159:9:6",
														"nodeType": "YulTypedName",
														"src": "2159:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2170:7:6",
														"nodeType": "YulTypedName",
														"src": "2170:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2182:6:6",
														"nodeType": "YulTypedName",
														"src": "2182:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2190:6:6",
														"nodeType": "YulTypedName",
														"src": "2190:6:6",
														"type": ""
													}
												],
												"src": "2114:260:6"
											},
											{
												"body": {
													"nativeSrc": "2434:382:6",
													"nodeType": "YulBlock",
													"src": "2434:382:6",
													"statements": [
														{
															"nativeSrc": "2444:22:6",
															"nodeType": "YulAssignment",
															"src": "2444:22:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2458:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2458:1:6",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2461:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2461:4:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2454:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2454:3:6"
																},
																"nativeSrc": "2454:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2454:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2444:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2444:6:6"
																}
															]
														},
														{
															"nativeSrc": "2475:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2475:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2505:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2505:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2511:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2511:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2501:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2501:3:6"
																},
																"nativeSrc": "2501:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2501:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2479:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2479:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2552:31:6",
																"nodeType": "YulBlock",
																"src": "2552:31:6",
																"statements": [
																	{
																		"nativeSrc": "2554:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2554:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2568:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2568:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2576:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2576:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2564:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2564:3:6"
																			},
																			"nativeSrc": "2564:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2564:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2554:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2554:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2532:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2532:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2525:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2525:6:6"
																},
																"nativeSrc": "2525:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2525:26:6"
															},
															"nativeSrc": "2522:61:6",
															"nodeType": "YulIf",
															"src": "2522:61:6"
														},
														{
															"body": {
																"nativeSrc": "2642:168:6",
																"nodeType": "YulBlock",
																"src": "2642:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2666:77:6",
																					"nodeType": "YulLiteral",
																					"src": "2666:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2656:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2656:6:6"
																			},
																			"nativeSrc": "2656:88:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2656:88:6"
																		},
																		"nativeSrc": "2656:88:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2656:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2764:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2764:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2767:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2767:4:6",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2757:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2757:6:6"
																			},
																			"nativeSrc": "2757:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2757:15:6"
																		},
																		"nativeSrc": "2757:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2757:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2792:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2792:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2795:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2795:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2785:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2785:6:6"
																			},
																			"nativeSrc": "2785:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2785:15:6"
																		},
																		"nativeSrc": "2785:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2785:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2598:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2598:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2621:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2621:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2629:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2629:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2618:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2618:2:6"
																		},
																		"nativeSrc": "2618:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2595:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2595:2:6"
																},
																"nativeSrc": "2595:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2595:38:6"
															},
															"nativeSrc": "2592:218:6",
															"nodeType": "YulIf",
															"src": "2592:218:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2379:437:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2414:4:6",
														"nodeType": "YulTypedName",
														"src": "2414:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2423:6:6",
														"nodeType": "YulTypedName",
														"src": "2423:6:6",
														"type": ""
													}
												],
												"src": "2379:437:6"
											},
											{
												"body": {
													"nativeSrc": "2978:211:6",
													"nodeType": "YulBlock",
													"src": "2978:211:6",
													"statements": [
														{
															"nativeSrc": "2988:26:6",
															"nodeType": "YulAssignment",
															"src": "2988:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3000:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3000:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3011:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3011:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2996:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:6"
																},
																"nativeSrc": "2996:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2996:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2988:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2988:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3030:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3030:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3045:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3053:42:6",
																				"nodeType": "YulLiteral",
																				"src": "3053:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3041:3:6"
																		},
																		"nativeSrc": "3041:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3041:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3023:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3023:6:6"
																},
																"nativeSrc": "3023:74:6",
																"nodeType": "YulFunctionCall",
																"src": "3023:74:6"
															},
															"nativeSrc": "3023:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "3023:74:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3117:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3117:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3128:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3128:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3113:3:6"
																		},
																		"nativeSrc": "3113:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3113:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3133:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3133:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3106:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3106:6:6"
																},
																"nativeSrc": "3106:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3106:34:6"
															},
															"nativeSrc": "3106:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3106:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3160:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3160:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3171:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3171:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3156:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3156:3:6"
																		},
																		"nativeSrc": "3156:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3156:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3176:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3176:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3149:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3149:6:6"
																},
																"nativeSrc": "3149:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3149:34:6"
															},
															"nativeSrc": "3149:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3149:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "2821:368:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2931:9:6",
														"nodeType": "YulTypedName",
														"src": "2931:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2942:6:6",
														"nodeType": "YulTypedName",
														"src": "2942:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2950:6:6",
														"nodeType": "YulTypedName",
														"src": "2950:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2958:6:6",
														"nodeType": "YulTypedName",
														"src": "2958:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2969:4:6",
														"nodeType": "YulTypedName",
														"src": "2969:4:6",
														"type": ""
													}
												],
												"src": "2821:368:6"
											},
											{
												"body": {
													"nativeSrc": "3295:125:6",
													"nodeType": "YulBlock",
													"src": "3295:125:6",
													"statements": [
														{
															"nativeSrc": "3305:26:6",
															"nodeType": "YulAssignment",
															"src": "3305:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3317:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3317:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3328:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3328:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3313:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3313:3:6"
																},
																"nativeSrc": "3313:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3313:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3305:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3305:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3347:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3347:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "3362:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3362:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3370:42:6",
																				"nodeType": "YulLiteral",
																				"src": "3370:42:6",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3358:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:6"
																		},
																		"nativeSrc": "3358:55:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3358:55:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3340:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3340:6:6"
																},
																"nativeSrc": "3340:74:6",
																"nodeType": "YulFunctionCall",
																"src": "3340:74:6"
															},
															"nativeSrc": "3340:74:6",
															"nodeType": "YulExpressionStatement",
															"src": "3340:74:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3194:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3264:9:6",
														"nodeType": "YulTypedName",
														"src": "3264:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3275:6:6",
														"nodeType": "YulTypedName",
														"src": "3275:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3286:4:6",
														"nodeType": "YulTypedName",
														"src": "3286:4:6",
														"type": ""
													}
												],
												"src": "3194:226:6"
											},
											{
												"body": {
													"nativeSrc": "3473:231:6",
													"nodeType": "YulBlock",
													"src": "3473:231:6",
													"statements": [
														{
															"nativeSrc": "3483:16:6",
															"nodeType": "YulAssignment",
															"src": "3483:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3494:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3494:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3497:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3497:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3490:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3490:3:6"
																},
																"nativeSrc": "3490:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3490:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3483:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3483:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3530:168:6",
																"nodeType": "YulBlock",
																"src": "3530:168:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3551:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3551:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3554:77:6",
																					"nodeType": "YulLiteral",
																					"src": "3554:77:6",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3544:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3544:6:6"
																			},
																			"nativeSrc": "3544:88:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3544:88:6"
																		},
																		"nativeSrc": "3544:88:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3544:88:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3652:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3652:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3655:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3655:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3645:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3645:6:6"
																			},
																			"nativeSrc": "3645:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3645:15:6"
																		},
																		"nativeSrc": "3645:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3645:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3680:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3680:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3683:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3683:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3673:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3673:6:6"
																			},
																			"nativeSrc": "3673:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3673:15:6"
																		},
																		"nativeSrc": "3673:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3673:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3514:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3514:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3517:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3517:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3511:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3511:2:6"
																},
																"nativeSrc": "3511:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3511:10:6"
															},
															"nativeSrc": "3508:190:6",
															"nodeType": "YulIf",
															"src": "3508:190:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3425:279:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3456:1:6",
														"nodeType": "YulTypedName",
														"src": "3456:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3459:1:6",
														"nodeType": "YulTypedName",
														"src": "3459:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3465:3:6",
														"nodeType": "YulTypedName",
														"src": "3465:3:6",
														"type": ""
													}
												],
												"src": "3425:279:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a35760003560e01c8063313ce5671161007657806395d89b411161005b57806395d89b4114610146578063a9059cbb1461014e578063dd62ed3e1461016157600080fd5b8063313ce5671461010e57806370a082311461011d57600080fd5b806306fdde03146100a8578063095ea7b3146100c657806318160ddd146100e957806323b872dd146100fb575b600080fd5b6100b061019a565b6040516100bd9190610611565b60405180910390f35b6100d96100d436600461067c565b61022c565b60405190151581526020016100bd565b6002545b6040519081526020016100bd565b6100d96101093660046106a6565b610246565b604051601281526020016100bd565b6100ed61012b3660046106e2565b6001600160a01b031660009081526020819052604090205490565b6100b061026a565b6100d961015c36600461067c565b610279565b6100ed61016f366004610704565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101a990610737565b80601f01602080910402602001604051908101604052809291908181526020018280546101d590610737565b80156102225780601f106101f757610100808354040283529160200191610222565b820191906000526020600020905b81548152906001019060200180831161020557829003601f168201915b5050505050905090565b60003361023a818585610287565b60019150505b92915050565b600033610254858285610299565b61025f858585610336565b506001949350505050565b6060600480546101a990610737565b60003361023a818585610336565b61029483838360016103c7565b505050565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198110156103305781811015610321576040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526001600160a01b038416600482015260248101829052604481018390526064015b60405180910390fd5b610330848484840360006103c7565b50505050565b6001600160a01b038316610379576040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b0382166103bc576040517fec442f0500000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6102948383836104ce565b6001600160a01b03841661040a576040517fe602df0500000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b03831661044d576040517f94280d6200000000000000000000000000000000000000000000000000000000815260006004820152602401610318565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561033057826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516104c091815260200190565b60405180910390a350505050565b6001600160a01b0383166104f95780600260008282546104ee9190610771565b909155506105849050565b6001600160a01b03831660009081526020819052604090205481811015610565576040517fe450d38c0000000000000000000000000000000000000000000000000000000081526001600160a01b03851660048201526024810182905260448101839052606401610318565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b0382166105a0576002805482900390556105bf565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161060491815260200190565b60405180910390a3505050565b60006020808352835180602085015260005b8181101561063f57858101830151858201604001528201610623565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461067757600080fd5b919050565b6000806040838503121561068f57600080fd5b61069883610660565b946020939093013593505050565b6000806000606084860312156106bb57600080fd5b6106c484610660565b92506106d260208501610660565b9150604084013590509250925092565b6000602082840312156106f457600080fd5b6106fd82610660565b9392505050565b6000806040838503121561071757600080fd5b61072083610660565b915061072e60208401610660565b90509250929050565b600181811c9082168061074b57607f821691505b60208210810361076b57634e487b7160e01b600052602260045260246000fd5b50919050565b8082018082111561024057634e487b7160e01b600052601160045260246000fdfea2646970667358221220ed1deb080d277878993a0449dd2fdec4549742ec7b8fc5291ab0c3f7d8eb097464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA3 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x313CE567 GT PUSH2 0x76 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x10E JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x11D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xA8 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x611 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD9 PUSH2 0xD4 CALLDATASIZE PUSH1 0x4 PUSH2 0x67C JUMP JUMPDEST PUSH2 0x22C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x6A6 JUMP JUMPDEST PUSH2 0x246 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBD JUMP JUMPDEST PUSH2 0xED PUSH2 0x12B CALLDATASIZE PUSH1 0x4 PUSH2 0x6E2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB0 PUSH2 0x26A JUMP JUMPDEST PUSH2 0xD9 PUSH2 0x15C CALLDATASIZE PUSH1 0x4 PUSH2 0x67C JUMP JUMPDEST PUSH2 0x279 JUMP JUMPDEST PUSH2 0xED PUSH2 0x16F CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1A9 SWAP1 PUSH2 0x737 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D5 SWAP1 PUSH2 0x737 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x222 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x222 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x205 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x287 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x254 DUP6 DUP3 DUP6 PUSH2 0x299 JUMP JUMPDEST PUSH2 0x25F DUP6 DUP6 DUP6 PUSH2 0x336 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1A9 SWAP1 PUSH2 0x737 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x23A DUP2 DUP6 DUP6 PUSH2 0x336 JUMP JUMPDEST PUSH2 0x294 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x3C7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x330 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x321 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x330 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0x3C7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x3BC JUMPI PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH2 0x294 DUP4 DUP4 DUP4 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x40A JUMPI PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x330 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x4C0 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x4F9 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x4EE SWAP2 SWAP1 PUSH2 0x771 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x584 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x565 JUMPI PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x318 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5A0 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x5BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x63F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x623 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x677 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x68F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x698 DUP4 PUSH2 0x660 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x6BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6C4 DUP5 PUSH2 0x660 JUMP JUMPDEST SWAP3 POP PUSH2 0x6D2 PUSH1 0x20 DUP6 ADD PUSH2 0x660 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6FD DUP3 PUSH2 0x660 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x720 DUP4 PUSH2 0x660 JUMP JUMPDEST SWAP2 POP PUSH2 0x72E PUSH1 0x20 DUP5 ADD PUSH2 0x660 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x74B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x76B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x240 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED SAR 0xEB ADDMOD 0xD 0x27 PUSH25 0x78993A0449DD2FDEC4549742EC7B8FC5291AB0C3F7D8EB0974 PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "250:140:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3979:186;;;;;;:::i;:::-;;:::i;:::-;;;1192:14:6;;1185:22;1167:41;;1155:2;1140:18;3979:186:1;1027:187:6;2830:97:1;2908:12;;2830:97;;;1365:25:6;;;1353:2;1338:18;2830:97:1;1219:177:6;4757:244:1;;;;;;:::i;:::-;;:::i;2688:82::-;;;2761:2;1876:36:6;;1864:2;1849:18;2688:82:1;1734:184:6;2985:116:1;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:1;3050:7;3076:18;;;;;;;;;;;;2985:116;1962:93;;;:::i;3296:178::-;;;;;;:::i;:::-;;:::i;3532:140::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:1;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;1760:89;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:4;4106:31:1;735:10:4;4122:7:1;4131:5;4106:8;:31::i;:::-;4154:4;4147:11;;;3979:186;;;;;:::o;4757:244::-;4844:4;735:10:4;4900:37:1;4916:4;735:10:4;4931:5:1;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:1;;4757:244;-1:-1:-1;;;;4757:244:1:o;1962:93::-;2009:13;2041:7;2034:14;;;;;:::i;3296:178::-;3365:4;735:10:4;3419:27:1;735:10:4;3436:2:1;3440:5;3419:9;:27::i;8707:128::-;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;:::-;8707:128;;;:::o;10396:476::-;-1:-1:-1;;;;;3638:18:1;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:1;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;;;;-1:-1:-1;;;;;3041:55:6;;10668:60:1;;;3023:74:6;3113:18;;;3106:34;;;3156:18;;;3149:34;;;2996:18;;10668:60:1;;;;;;;;10613:130;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;:::-;10485:387;10396:476;;;:::o;5374:300::-;-1:-1:-1;;;;;5457:18:1;;5453:86;;5498:30;;;;;5525:1;5498:30;;;3340:74:6;3313:18;;5498:30:1;3194:226:6;5453:86:1;-1:-1:-1;;;;;5552:16:1;;5548:86;;5591:32;;;;;5620:1;5591:32;;;3340:74:6;3313:18;;5591:32:1;3194:226:6;5548:86:1;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;9682:432::-;-1:-1:-1;;;;;9794:19:1;;9790:89;;9836:32;;;;;9865:1;9836:32;;;3340:74:6;3313:18;;9836:32:1;3194:226:6;9790:89:1;-1:-1:-1;;;;;9892:21:1;;9888:90;;9936:31;;;;;9964:1;9936:31;;;3340:74:6;3313:18;;9936:31:1;3194:226:6;9888:90:1;-1:-1:-1;;;;;9987:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:1;10075:5;-1:-1:-1;;;;;10066:31:1;;10091:5;10066:31;;;;1365:25:6;;1353:2;1338:18;;1219:177;10066:31:1;;;;;;;;9682:432;;;;:::o;5989:1107::-;-1:-1:-1;;;;;6078:18:1;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:1;;-1:-1:-1;6074:540:1;;-1:-1:-1;;;;;6288:15:1;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;;;;-1:-1:-1;;;;;3041:55:6;;6367:50:1;;;3023:74:6;3113:18;;;3106:34;;;3156:18;;;3149:34;;;2996:18;;6367:50:1;2821:368:6;6317:115:1;-1:-1:-1;;;;;6552:15:1;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:1;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:1;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:1;7073:4;-1:-1:-1;;;;;7064:25:1;;7083:5;7064:25;;;;1365::6;;1353:2;1338:18;;1219:177;7064:25:1;;;;;;;;5989:1107;;;:::o;14:548:6:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:196::-;635:20;;-1:-1:-1;;;;;684:54:6;;674:65;;664:93;;753:1;750;743:12;664:93;567:196;;;:::o;768:254::-;836:6;844;897:2;885:9;876:7;872:23;868:32;865:52;;;913:1;910;903:12;865:52;936:29;955:9;936:29;:::i;:::-;926:39;1012:2;997:18;;;;984:32;;-1:-1:-1;;;768:254:6:o;1401:328::-;1478:6;1486;1494;1547:2;1535:9;1526:7;1522:23;1518:32;1515:52;;;1563:1;1560;1553:12;1515:52;1586:29;1605:9;1586:29;:::i;:::-;1576:39;;1634:38;1668:2;1657:9;1653:18;1634:38;:::i;:::-;1624:48;;1719:2;1708:9;1704:18;1691:32;1681:42;;1401:328;;;;;:::o;1923:186::-;1982:6;2035:2;2023:9;2014:7;2010:23;2006:32;2003:52;;;2051:1;2048;2041:12;2003:52;2074:29;2093:9;2074:29;:::i;:::-;2064:39;1923:186;-1:-1:-1;;;1923:186:6:o;2114:260::-;2182:6;2190;2243:2;2231:9;2222:7;2218:23;2214:32;2211:52;;;2259:1;2256;2249:12;2211:52;2282:29;2301:9;2282:29;:::i;:::-;2272:39;;2330:38;2364:2;2353:9;2349:18;2330:38;:::i;:::-;2320:48;;2114:260;;;;;:::o;2379:437::-;2458:1;2454:12;;;;2501;;;2522:61;;2576:4;2568:6;2564:17;2554:27;;2522:61;2629:2;2621:6;2618:14;2598:18;2595:38;2592:218;;-1:-1:-1;;;2663:1:6;2656:88;2767:4;2764:1;2757:15;2795:4;2792:1;2785:15;2592:218;;2379:437;;;:::o;3425:279::-;3490:9;;;3511:10;;;3508:190;;;-1:-1:-1;;;3551:1:6;3544:88;3655:4;3652:1;3645:15;3683:4;3680:1;3673:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "398400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24739",
								"balanceOf(address)": "2585",
								"decimals()": "200",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2326",
								"transfer(address,uint256)": "51266",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 250,
									"end": 390,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 250,
									"end": 390,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 250,
									"end": 390,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 283,
									"end": 388,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 388,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 283,
									"end": 388,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 388,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 283,
									"end": 388,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 283,
									"end": 388,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 283,
									"end": 388,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 283,
									"end": 388,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1554D1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "55534443"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1653,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1648,
									"end": 1661,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1648,
									"end": 1661,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1681,
									"end": 1688,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1678,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1671,
									"end": 1688,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1671,
									"end": 1688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1695,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 349,
									"end": 381,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 355,
									"end": 365,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 367,
									"end": 380,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 349,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 349,
									"end": 354,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 349,
									"end": 354,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 349,
									"end": 381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 349,
									"end": 381,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 349,
									"end": 381,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 349,
									"end": 381,
									"modifierDepth": 1,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 349,
									"end": 381,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 283,
									"end": 388,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 250,
									"end": 390,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 250,
									"end": 390,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7509,
									"end": 7530,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "EC442F05"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7582,
									"end": 7583,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3061,
									"end": 3112,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3034,
									"end": 3052,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3034,
									"end": 3052,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7553,
									"end": 7585,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 7505,
									"end": 7596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7621,
									"end": 7622,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7625,
									"end": 7632,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7634,
									"end": 7639,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7612,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 7605,
									"end": 7640,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 7605,
									"end": 7640,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7439,
									"end": 7647,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6078,
									"end": 6096,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6230,
									"end": 6235,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6214,
									"end": 6226,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 6214,
									"end": 6235,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6214,
									"end": 6235,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6266,
									"end": 6285,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6288,
									"end": 6303,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6321,
									"end": 6340,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "391434E3"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3570,
									"end": 3602,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 3570,
									"end": 3602,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3552,
									"end": 3603,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3619,
									"end": 3637,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3619,
									"end": 3637,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3619,
									"end": 3637,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3646,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3646,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3612,
									"end": 3646,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3662,
									"end": 3680,
									"name": "PUSH",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 3662,
									"end": 3680,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3662,
									"end": 3680,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3655,
									"end": 3689,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3655,
									"end": 3689,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3655,
									"end": 3689,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3525,
									"end": 3543,
									"name": "PUSH",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 3525,
									"end": 3543,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6367,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 3350,
									"end": 3695,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 6317,
									"end": 6432,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6561,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6567,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6570,
									"end": 6589,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6552,
									"end": 6589,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6074,
									"end": 6614,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6628,
									"end": 6644,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6803,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6791,
									"end": 6812,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7011,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7015,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7002,
									"end": 7024,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 6624,
									"end": 7049,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7079,
									"end": 7081,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7073,
									"end": 7077,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7083,
									"end": 7088,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3846,
									"end": 3871,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3846,
									"end": 3871,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3834,
									"end": 3836,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 3819,
									"end": 3837,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3819,
									"end": 3837,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3700,
									"end": 3877,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7064,
									"end": 7089,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5989,
									"end": 7096,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 198,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 198,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 176,
									"end": 192,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 176,
									"end": 192,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 198,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 198,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 203,
									"end": 330,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 203,
									"end": 330,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 264,
									"end": 274,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 259,
									"end": 262,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 255,
									"end": 275,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 252,
									"end": 253,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 245,
									"end": 276,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 295,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 292,
									"end": 293,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 285,
									"end": 300,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 319,
									"end": 323,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 324,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 335,
									"end": 715,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 335,
									"end": 715,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 414,
									"end": 415,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 410,
									"end": 422,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 410,
									"end": 422,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 457,
									"end": 469,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 457,
									"end": 469,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 478,
									"end": 539,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 532,
									"end": 536,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 524,
									"end": 530,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 520,
									"end": 537,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 510,
									"end": 537,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 510,
									"end": 537,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 478,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "42"
								},
								{
									"begin": 478,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 585,
									"end": 587,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 577,
									"end": 583,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 574,
									"end": 588,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 554,
									"end": 572,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 551,
									"end": 589,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 548,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 631,
									"end": 641,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 626,
									"end": 629,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 622,
									"end": 642,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 619,
									"end": 620,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 612,
									"end": 643,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 666,
									"end": 670,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 663,
									"end": 664,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 656,
									"end": 671,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 694,
									"end": 698,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 691,
									"end": 692,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 684,
									"end": 699,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 548,
									"end": 709,
									"name": "tag",
									"source": 6,
									"value": "43"
								},
								{
									"begin": 548,
									"end": 709,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 548,
									"end": 709,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 335,
									"end": 715,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 335,
									"end": 715,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 335,
									"end": 715,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1389,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 846,
									"end": 1389,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 948,
									"end": 950,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 943,
									"end": 946,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 940,
									"end": 951,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 937,
									"end": 1383,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 937,
									"end": 1383,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 937,
									"end": 1383,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 984,
									"end": 985,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1008,
									"end": 1013,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1005,
									"end": 1006,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1014,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1052,
									"end": 1056,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1049,
									"end": 1050,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1039,
									"end": 1057,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1110,
									"end": 1120,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1106,
									"end": 1125,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1103,
									"end": 1104,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1099,
									"end": 1126,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1093,
									"end": 1097,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1089,
									"end": 1127,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1158,
									"end": 1162,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1146,
									"end": 1156,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1143,
									"end": 1163,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1187,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1187,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1140,
									"end": 1187,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1181,
									"end": 1185,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1140,
									"end": 1187,
									"name": "tag",
									"source": 6,
									"value": "47"
								},
								{
									"begin": 1140,
									"end": 1187,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1236,
									"end": 1238,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1231,
									"end": 1234,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1227,
									"end": 1239,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1224,
									"end": 1225,
									"name": "PUSH",
									"source": 6,
									"value": "5"
								},
								{
									"begin": 1220,
									"end": 1240,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1214,
									"end": 1218,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1210,
									"end": 1241,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1241,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1200,
									"end": 1241,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1309,
									"end": 1311,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1302,
									"end": 1307,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1299,
									"end": 1312,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1371,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1371,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1354,
									"end": 1371,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1324,
									"end": 1337,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1291,
									"end": 1373,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1298,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1298,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1295,
									"end": 1298,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 937,
									"end": 1383,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 937,
									"end": 1383,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1389,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 846,
									"end": 1389,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1565,
									"end": 2910,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 1565,
									"end": 2910,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1685,
									"end": 1695,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1685,
									"end": 1695,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1707,
									"end": 1737,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1707,
									"end": 1737,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1704,
									"end": 1760,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1704,
									"end": 1760,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1704,
									"end": 1760,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 1740,
									"end": 1758,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1740,
									"end": 1758,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1769,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1859,
									"end": 1865,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1851,
									"end": 1855,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1845,
									"end": 1856,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 1819,
									"end": 1857,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1819,
									"end": 1857,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1813,
									"end": 1817,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1769,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 1769,
									"end": 1866,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1769,
									"end": 1866,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1769,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1921,
									"end": 1925,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1978,
									"end": 1980,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 1967,
									"end": 1981,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1967,
									"end": 1981,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 1995,
									"end": 1996,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1990,
									"end": 2653,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 2653,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 2653,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1990,
									"end": 2653,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2697,
									"end": 2698,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2714,
									"end": 2720,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2711,
									"end": 2800,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2711,
									"end": 2800,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2711,
									"end": 2800,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2766,
									"end": 2785,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2766,
									"end": 2785,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2766,
									"end": 2785,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2760,
									"end": 2786,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2711,
									"end": 2800,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2711,
									"end": 2800,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1522,
									"end": 1523,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1518,
									"end": 1529,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1518,
									"end": 1529,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1518,
									"end": 1529,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1514,
									"end": 1538,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 1510,
									"end": 1539,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 1500,
									"end": 1540,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1546,
									"end": 1547,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1542,
									"end": 1553,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1553,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1542,
									"end": 1553,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 1497,
									"end": 1554,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2813,
									"end": 2894,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2813,
									"end": 2894,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1960,
									"end": 2904,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 1960,
									"end": 2904,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1990,
									"end": 2653,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1990,
									"end": 2653,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 793,
									"end": 794,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 786,
									"end": 800,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 786,
									"end": 800,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 835,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 817,
									"end": 835,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2026,
									"end": 2046,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2026,
									"end": 2046,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2026,
									"end": 2046,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2158,
									"end": 2165,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2155,
									"end": 2156,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2152,
									"end": 2166,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2247,
									"end": 2266,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2241,
									"end": 2267,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2268,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2226,
									"end": 2268,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2339,
									"end": 2366,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2339,
									"end": 2366,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2339,
									"end": 2366,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2339,
									"end": 2366,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 2307,
									"end": 2308,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2295,
									"end": 2309,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2295,
									"end": 2309,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2295,
									"end": 2309,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2295,
									"end": 2309,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2174,
									"end": 2193,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2174,
									"end": 2193,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2144,
									"end": 2380,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2148,
									"end": 2151,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2408,
									"end": 2414,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2399,
									"end": 2406,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2396,
									"end": 2415,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2393,
									"end": 2594,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 2393,
									"end": 2594,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2393,
									"end": 2594,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2469,
									"end": 2488,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 2469,
									"end": 2488,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 2469,
									"end": 2488,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2463,
									"end": 2489,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2552,
									"end": 2553,
									"name": "PUSH",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 2548,
									"end": 2562,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 2548,
									"end": 2562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2548,
									"end": 2562,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2564,
									"end": 2567,
									"name": "PUSH",
									"source": 6,
									"value": "F8"
								},
								{
									"begin": 2544,
									"end": 2568,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2540,
									"end": 2577,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 2536,
									"end": 2578,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2579,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2580,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2580,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2393,
									"end": 2594,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2393,
									"end": 2594,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2640,
									"end": 2641,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2624,
									"end": 2638,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2624,
									"end": 2638,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2620,
									"end": 2642,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2643,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2607,
									"end": 2643,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1565,
									"end": 2910,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3345,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 3123,
									"end": 3345,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3188,
									"end": 3197,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3188,
									"end": 3197,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3188,
									"end": 3197,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3209,
									"end": 3219,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3209,
									"end": 3219,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3209,
									"end": 3219,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3339,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3339,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3206,
									"end": 3339,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3271,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B71"
								},
								{
									"begin": 3256,
									"end": 3259,
									"name": "PUSH",
									"source": 6,
									"value": "E0"
								},
								{
									"begin": 3252,
									"end": 3272,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 3249,
									"end": 3250,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3242,
									"end": 3273,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3296,
									"end": 3300,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 3293,
									"end": 3294,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 3286,
									"end": 3301,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 3324,
									"end": 3328,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 3321,
									"end": 3322,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3314,
									"end": 3329,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 3206,
									"end": 3339,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 3206,
									"end": 3339,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3345,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3345,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3345,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3123,
									"end": 3345,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3700,
									"end": 3877,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 3700,
									"end": 3877,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 250,
									"end": 390,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 390,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 250,
									"end": 390,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 250,
									"end": 390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 390,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 250,
									"end": 390,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 250,
									"end": 390,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ed1deb080d277878993a0449dd2fdec4549742ec7b8fc5291ab0c3f7d8eb097464736f6c63430008180033",
									".code": [
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "95D89B41"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "A9059CBB"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "DD62ED3E"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "313CE567"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "70A08231"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "6FDDE03"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "95EA7B3"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "23B872DD"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 250,
											"end": 390,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 250,
											"end": 390,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1192,
											"end": 1206,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1192,
											"end": 1206,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1207,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1208,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1140,
											"end": 1158,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1027,
											"end": 1214,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2908,
											"end": 2920,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1219,
											"end": 1396,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2761,
											"end": 2763,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1876,
											"end": 1912,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1912,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1864,
											"end": 1866,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1867,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2688,
											"end": 2770,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 1734,
											"end": 1918,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2985,
											"end": 3101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3094,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2985,
											"end": 3101,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3532,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3532,
											"end": 3672,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1805,
											"end": 1818,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1837,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1830,
											"end": 1842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1830,
											"end": 1842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4122,
											"end": 4129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 4106,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4106,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4147,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 4165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4916,
											"end": 4920,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4931,
											"end": 4936,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 4900,
											"end": 4937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 4900,
											"end": 4937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4957,
											"end": 4961,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4972,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4947,
											"end": 4973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4947,
											"end": 4973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4990,
											"end": 4994,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4757,
											"end": 5001,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4757,
											"end": 5001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1962,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2009,
											"end": 2022,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2041,
											"end": 2048,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2034,
											"end": 2048,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2034,
											"end": 2048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 3296,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3419,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3436,
											"end": 3438,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 3419,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8800,
											"end": 8805,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8807,
											"end": 8814,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8821,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8827,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8791,
											"end": 8799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 8791,
											"end": 8828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 8791,
											"end": 8828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8707,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10495,
											"end": 10519,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3649,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3638,
											"end": 3665,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10561,
											"end": 10597,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10557,
											"end": 10866,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10636,
											"end": 10641,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10633,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10641,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3183,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10668,
											"end": 10728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 10613,
											"end": 10743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10793,
											"end": 10798,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10800,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10833,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10809,
											"end": 10833,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10835,
											"end": 10840,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10784,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 10784,
											"end": 10841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10784,
											"end": 10841,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10485,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10396,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 5374,
											"end": 5674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5457,
											"end": 5475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5526,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5498,
											"end": 5528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3194,
											"end": 3420,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 5453,
											"end": 5539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5568,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5620,
											"end": 5621,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5591,
											"end": 5623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3194,
											"end": 3420,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5548,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5643,
											"end": 5650,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5643,
											"end": 5667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9813,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9865,
											"end": 9866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9836,
											"end": 9868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3194,
											"end": 3420,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 9790,
											"end": 9879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 9913,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9964,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3340,
											"end": 3414,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3313,
											"end": 3331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9936,
											"end": 9967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 3194,
											"end": 3420,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 9888,
											"end": 9978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 9998,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10005,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9987,
											"end": 10022,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 10032,
											"end": 10108,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10082,
											"end": 10089,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10080,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10091,
											"end": 10096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1396,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10066,
											"end": 10097,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9682,
											"end": 10114,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6235,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6214,
											"end": 6226,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 6214,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6214,
											"end": 6235,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6266,
											"end": 6285,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6340,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3041,
											"end": 3096,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3097,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3113,
											"end": 3131,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3140,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3106,
											"end": 3140,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3156,
											"end": 3174,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3183,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3183,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3149,
											"end": 3183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2996,
											"end": 3014,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6367,
											"end": 6417,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2821,
											"end": 3189,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 6317,
											"end": 6432,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6567,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6552,
											"end": 6589,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 6074,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6628,
											"end": 6644,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6803,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6791,
											"end": 6812,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7015,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7024,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6624,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7079,
											"end": 7081,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7077,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7083,
											"end": 7088,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1365,
											"end": 1390,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1353,
											"end": 1355,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1338,
											"end": 1356,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1396,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7089,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 7096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 562,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 562,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 155,
											"end": 157,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 184,
											"end": 186,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 173,
											"end": 182,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 166,
											"end": 187,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 216,
											"end": 222,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 210,
											"end": 223,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 259,
											"end": 265,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 254,
											"end": 256,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 243,
											"end": 252,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 239,
											"end": 257,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 232,
											"end": 266,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 284,
											"end": 285,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 308,
											"end": 314,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 305,
											"end": 306,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 302,
											"end": 315,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 403,
											"end": 417,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 422,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 369,
											"end": 386,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 388,
											"end": 390,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 365,
											"end": 391,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 358,
											"end": 424,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 323,
											"end": 333,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 294,
											"end": 434,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 294,
											"end": 434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 298,
											"end": 301,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 483,
											"end": 484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 478,
											"end": 480,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 458,
											"end": 467,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 454,
											"end": 476,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 450,
											"end": 481,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 443,
											"end": 485,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 553,
											"end": 555,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 546,
											"end": 548,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 542,
											"end": 549,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 537,
											"end": 539,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 529,
											"end": 535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 525,
											"end": 540,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 521,
											"end": 550,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 510,
											"end": 519,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 506,
											"end": 551,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 502,
											"end": 556,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 494,
											"end": 556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 763,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 567,
											"end": 763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 635,
											"end": 655,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 684,
											"end": 738,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 684,
											"end": 738,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 674,
											"end": 739,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 674,
											"end": 739,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 664,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 664,
											"end": 757,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 753,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 751,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 743,
											"end": 755,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 664,
											"end": 757,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 664,
											"end": 757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 567,
											"end": 763,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 567,
											"end": 763,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 567,
											"end": 763,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 567,
											"end": 763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 768,
											"end": 1022,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 768,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 836,
											"end": 842,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 850,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 897,
											"end": 899,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 894,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 876,
											"end": 883,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 872,
											"end": 895,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 868,
											"end": 900,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 865,
											"end": 917,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 865,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 865,
											"end": 917,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 913,
											"end": 914,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 910,
											"end": 911,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 903,
											"end": 915,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 865,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 865,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 936,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 955,
											"end": 964,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 936,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 936,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 936,
											"end": 965,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 936,
											"end": 965,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 926,
											"end": 965,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1012,
											"end": 1014,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 997,
											"end": 1015,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 984,
											"end": 1016,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 768,
											"end": 1022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1486,
											"end": 1492,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1494,
											"end": 1500,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1549,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1535,
											"end": 1544,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1533,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1522,
											"end": 1545,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1518,
											"end": 1550,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1564,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1561,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1553,
											"end": 1565,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 1515,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1605,
											"end": 1614,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1586,
											"end": 1615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "tag",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1615,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1576,
											"end": 1615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1668,
											"end": 1670,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1657,
											"end": 1666,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1653,
											"end": 1671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 1634,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 1634,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1717,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1691,
											"end": 1723,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1681,
											"end": 1723,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1729,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1401,
											"end": 1729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 2109,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 1923,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1982,
											"end": 1988,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2014,
											"end": 2021,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2010,
											"end": 2033,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2038,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2051,
											"end": 2052,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2049,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2003,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2093,
											"end": 2102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2074,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 2074,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2064,
											"end": 2103,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1923,
											"end": 2109,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1923,
											"end": 2109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2374,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 2114,
											"end": 2374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2182,
											"end": 2188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2196,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2245,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2231,
											"end": 2240,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2218,
											"end": 2241,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2214,
											"end": 2246,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 2211,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2301,
											"end": 2310,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2282,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2282,
											"end": 2311,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 2282,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2272,
											"end": 2311,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2272,
											"end": 2311,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2364,
											"end": 2366,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2353,
											"end": 2362,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2367,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2368,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 2330,
											"end": 2368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2330,
											"end": 2368,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 2330,
											"end": 2368,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2368,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2320,
											"end": 2368,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2374,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2374,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2114,
											"end": 2374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2816,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2379,
											"end": 2816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2459,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 2454,
											"end": 2466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2513,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2501,
											"end": 2513,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2522,
											"end": 2583,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2576,
											"end": 2580,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 2568,
											"end": 2574,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2564,
											"end": 2581,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2581,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2554,
											"end": 2581,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2522,
											"end": 2583,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 2522,
											"end": 2583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2631,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2627,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2618,
											"end": 2632,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2595,
											"end": 2633,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2592,
											"end": 2810,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2663,
											"end": 2664,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2656,
											"end": 2744,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2767,
											"end": 2771,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2757,
											"end": 2772,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2795,
											"end": 2799,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2785,
											"end": 2800,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2810,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 2592,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2592,
											"end": 2810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2816,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2816,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2379,
											"end": 2816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3425,
											"end": 3704,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3425,
											"end": 3704,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3521,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3521,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3511,
											"end": 3521,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3698,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3508,
											"end": 3698,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 3508,
											"end": 3698,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3552,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3544,
											"end": 3632,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3655,
											"end": 3659,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3652,
											"end": 3653,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3645,
											"end": 3660,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3683,
											"end": 3687,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/MockUSDC.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"GLDToken\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A simple ERC20 \\u201cGold\\u201d token (GLD) with an initial mint.         - Defaults to 18 decimals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockUSDC.sol\":\"USDToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://80b0992a11b2fd1f75ced2971696d07bbd1d19ce6761dd50d8b6d48aa435f42a\",\"dweb:/ipfs/QmZDe5xd2gXHjVEjv9t8C1KQ68K5T8qFwdinwQgmP3rF3x\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/MockUSDC.sol\":{\"keccak256\":\"0x87323573e9ee5cea53187e35a51797316eba50529927a095b9192173dc37a58a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb3417ba3433033b87cbf82eb0b6cda2ceaa55d8cd205bd75ef4ce55530e4047\",\"dweb:/ipfs/QmPGQ8bjM2UftuBqKorsL9qsgUJ4HwPupBEEjqFSUo1p74\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "contracts/MockUSDC.sol:USDToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "contracts/MockUSDC.sol:USDToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "contracts/MockUSDC.sol:USDToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "contracts/MockUSDC.sol:USDToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "contracts/MockUSDC.sol:USDToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "A simple ERC20 “Gold” token (GLD) with an initial mint.         - Defaults to 18 decimals",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "654:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "670:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:0"
									},
									"src": "623:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:0"
									},
									"src": "866:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1104:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:0"
									},
									"src": "1077:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1528:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1547:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:0"
									},
									"src": "1478:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1775:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:0"
									},
									"src": "1748:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2025:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:0"
									},
									"src": "1999:43:0"
								}
							],
							"scope": 137,
							"src": "280:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2469:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:0"
									},
									"src": "2444:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2656:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:0"
									},
									"src": "2627:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3033:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:0"
									},
									"src": "2973:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:0"
									},
									"src": "3211:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3451:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:0"
									},
									"src": "3423:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3760:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3778:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:0"
									},
									"src": "3727:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4008:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:0"
									},
									"src": "3980:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4262:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:0"
									},
									"src": "4234:46:0"
								}
							],
							"scope": 137,
							"src": "2190:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4893:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4909:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:0"
									},
									"src": "4827:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:0"
									},
									"src": "5089:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5331:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:0"
									},
									"src": "5302:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5651:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:0"
									},
									"src": "5616:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5898:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:0"
									},
									"src": "5869:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6153:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:0"
									},
									"src": "6124:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6494:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6513:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:0"
									},
									"src": "6462:73:0"
								}
							],
							"scope": 137,
							"src": "4430:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1133:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1133:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1142:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1150:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1166:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1124:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1185:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1201:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1245:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1261:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1288:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1335:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1370:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1396:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1638:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1648:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1656:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1648:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1648:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1671:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1681:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1671:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1671:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1425:152:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1608:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1594:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1594:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1629:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1615:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1615:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1593:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1638:0:1"
									},
									"scope": 651,
									"src": "1582:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "1820:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "1837:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "1830:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "1701:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1769:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1805:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:15:1"
									},
									"scope": 651,
									"src": "1760:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2024:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2041:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2034:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1855:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1971:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2009:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2009:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:15:1"
									},
									"scope": 651,
									"src": "1962:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "2744:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2761:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "2754:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2061:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2705:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "2737:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2737:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2736:7:1"
									},
									"scope": 651,
									"src": "2688:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "2891:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "2908:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "2901:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "2776:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2839:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2850:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2882:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2881:9:1"
									},
									"scope": 651,
									"src": "2830:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3059:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3076:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3086:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3076:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3069:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "2933:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2994:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3012:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3004:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3003:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3050:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:9:1"
									},
									"scope": 651,
									"src": "2985:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3371:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3389:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3381:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3381:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3397:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3397:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3381:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3436:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3419:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3419:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3419:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3463:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3456:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3107:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3305:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3322:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3314:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3314:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3334:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3326:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3313:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3365:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:6:1"
									},
									"scope": 651,
									"src": "3296:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3621:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3638:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3650:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3638:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3657:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3638:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3631:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3480:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3541:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3559:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3551:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3551:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3574:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3566:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3550:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3611:9:1"
									},
									"scope": 651,
									"src": "3532:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4058:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4076:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4068:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4084:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4084:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4115:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4122:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4131:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4106:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4106:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4106:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4147:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3678:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3988:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4004:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3996:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4021:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4013:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 651,
									"src": "3979:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "4850:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4868:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "4860:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4860:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4878:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4878:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4860:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4916:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "4922:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4931:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "4900:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4900:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "4900:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "4957:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "4963:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "4967:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "4947:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4947:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "4947:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4990:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "4983:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4171:581:1",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4766:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4787:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4779:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4779:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4801:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4813:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4805:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4805:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4778:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "4844:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4844:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4843:6:1"
									},
									"scope": 651,
									"src": "4757:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5443:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5457:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5473:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5465:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5465:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5465:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5457:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5453:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5525:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5517:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5517:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5517:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5498:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5491:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5552:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5566:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5558:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5558:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5558:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5552:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5548:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5570:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5620:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5612:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5612:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5612:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5591:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5591:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5584:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5651:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5657:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5661:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5643:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5643:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5643:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5007:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5383:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5401:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5393:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5415:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5407:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5407:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5427:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5419:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5392:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5443:0:1"
									},
									"scope": 651,
									"src": "5374:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6064:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6078:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6094:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6086:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6086:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6086:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6078:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6252:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6274:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6266:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6266:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6288:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6298:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6288:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6266:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6321:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6335:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6317:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6342:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6392:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6398:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6411:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6367:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6367:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6360:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6445:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6552:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6562:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6552:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6570:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6584:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6570:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6552:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6552:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6074:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6098:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6214:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6230:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6214:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6214:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6628:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6642:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6634:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6634:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6634:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6628:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "6843:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "6857:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7002:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7012:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7002:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7019:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7002:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7002:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6624:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6646:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6660:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "6791:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "6807:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6791:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "6791:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7073:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7079:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7083:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7064:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7064:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7059:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5680:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "5998:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6014:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6006:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6006:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6028:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6020:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6040:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6032:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6032:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6005:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6064:0:1"
									},
									"scope": 651,
									"src": "5989:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7495:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7528:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7520:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7520:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7520:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7509:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7505:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7532:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7582:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7574:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7574:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7574:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7553:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7553:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7546:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7621:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7613:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7613:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7613:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7625:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7634:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7605:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7605:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7605:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7102:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7448:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7462:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7454:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7454:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7479:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7471:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7471:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7453:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7495:0:1"
									},
									"scope": 651,
									"src": "7439:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8021:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8035:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8054:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8046:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8046:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8046:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8035:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8031:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8058:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8106:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8098:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8098:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8098:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8079:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8079:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8072:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8137:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8154:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8146:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8146:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8146:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8158:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8129:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8129:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8129:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7653:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7974:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7988:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7980:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8005:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "7997:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7979:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8021:0:1"
									},
									"scope": 651,
									"src": "7965:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8781:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "8800:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "8807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "8816:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8823:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "8791:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8791:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "8791:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8177:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8716:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8733:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8725:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8748:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8740:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8740:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8765:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8757:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8757:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8724:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8781:0:1"
									},
									"scope": 651,
									"src": "8707:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "9780:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "9794:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9811:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9803:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9803:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9803:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9794:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "9790:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "9815:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9865:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9857:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9857:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9857:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "9836:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9836:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "9829:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "9892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9911:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9903:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9903:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9903:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9892:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "9888:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "9915:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9964:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9956:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9956:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9956:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "9936:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9936:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "9929:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "9987:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "9999:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9987:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10006:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9987:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10017:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9987:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "9987:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10036:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10032:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10047:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10075:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10082:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10091:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10066:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10066:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10061:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "8841:836:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9691:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9708:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9700:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9700:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9723:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9715:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9715:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9740:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9732:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9732:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9747:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9747:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9699:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9780:0:1"
									},
									"scope": 651,
									"src": "9682:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10485:387:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10503:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10495:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10495:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10532:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10539:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10522:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10522:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10495:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10561:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10585:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10585:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10580:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10580:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10594:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10580:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10561:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10557:309:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10599:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10617:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10636:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10617:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10613:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10643:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10695:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10704:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10722:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10668:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10668:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10661:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "10756:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "10793:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "10800:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10809:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10828:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10809:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10835:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "10784:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10784:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "10784:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10120:271:1",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10405:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10429:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10421:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10421:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10444:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10436:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10436:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10461:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10453:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10453:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10420:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10485:0:1"
									},
									"scope": 651,
									"src": "10396:476:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1106:9768:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:10770:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:2",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "214:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "396:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "405:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "427:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "447:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:2"
									},
									"src": "390:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "627:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "636:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "659:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "684:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:2"
									},
									"src": "621:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "821:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:2"
									},
									"scope": 729,
									"src": "775:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 729,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1222:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1234:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1267:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:2"
									},
									"scope": 729,
									"src": "1204:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1567:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1582:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1622:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:2"
									},
									"scope": 729,
									"src": "1548:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2326:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2376:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:2"
									},
									"scope": 729,
									"src": "2309:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2712:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2726:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2738:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2771:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:2"
									},
									"scope": 729,
									"src": "2690:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "204:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2674:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"306:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "306:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:3",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "417:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:3"
									},
									"scope": 755,
									"src": "378:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "540:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:3"
									},
									"scope": 755,
									"src": "499:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "674:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:3"
									},
									"scope": 755,
									"src": "631:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "278:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:559:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/MockUSDC.sol": {
				"ast": {
					"absolutePath": "contracts/MockUSDC.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						],
						"USDToken": [
							808
						]
					},
					"id": 809,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 809,
							"sourceUnit": 652,
							"src": "58:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 790,
										"name": "ERC20",
										"nameLocations": [
											"271:5:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 651,
										"src": "271:5:5"
									},
									"id": 791,
									"nodeType": "InheritanceSpecifier",
									"src": "271:5:5"
								}
							],
							"canonicalName": "USDToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 789,
								"nodeType": "StructuredDocumentation",
								"src": "115:134:5",
								"text": " @title GLDToken\n @notice A simple ERC20 “Gold” token (GLD) with an initial mint.\n         - Defaults to 18 decimals"
							},
							"fullyImplemented": true,
							"id": 808,
							"linearizedBaseContracts": [
								808,
								651,
								41,
								755,
								729,
								785
							],
							"name": "USDToken",
							"nameLocation": "259:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "339:49:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 801,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "355:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "359:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "355:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 803,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "367:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 800,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "349:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "349:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "349:32:5"
											}
										]
									},
									"id": 807,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "555344",
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "324:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c4ae21aac0c6549d71dd96035b7e0bdb6c79ebdba8891b666115bc976d16a29e",
														"typeString": "literal_string \"USD\""
													},
													"value": "USD"
												},
												{
													"hexValue": "55534443",
													"id": 797,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "331:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d6aca1be9729c13d677335161321649cccae6a591554772516700f986f942eaa",
														"typeString": "literal_string \"USDC\""
													},
													"value": "USDC"
												}
											],
											"id": 798,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 795,
												"name": "ERC20",
												"nameLocations": [
													"318:5:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 651,
												"src": "318:5:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "318:20:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "303:13:5",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "295:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "295:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "294:23:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "339:0:5"
									},
									"scope": 808,
									"src": "283:105:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 809,
							"src": "250:140:5",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "32:359:5"
				},
				"id": 5
			}
		}
	}
}